// Compiled by ClojureScript 0.0-3058 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3058";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$_COLON_flush_on_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$_COLON_readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$_COLON_meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$_COLON_dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$_COLON_print_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__7254__delegate = function (args){
return console.log.apply(console,(function (){var G__7253 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7253) : cljs.core.into_array.call(null,G__7253));
})());
};
var G__7254 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7255__i = 0, G__7255__a = new Array(arguments.length -  0);
while (G__7255__i < G__7255__a.length) {G__7255__a[G__7255__i] = arguments[G__7255__i + 0]; ++G__7255__i;}
  args = new cljs.core.IndexedSeq(G__7255__a,0);
} 
return G__7254__delegate.call(this,args);};
G__7254.cljs$lang$maxFixedArity = 0;
G__7254.cljs$lang$applyTo = (function (arglist__7256){
var args = cljs.core.seq(arglist__7256);
return G__7254__delegate(args);
});
G__7254.cljs$core$IFn$_invoke$arity$variadic = G__7254__delegate;
return G__7254;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
return x instanceof Array;
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__7258 = x;
return goog.isString(G__7258);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__7260 = x__$1;
return goog.typeOf(G__7260);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__6226__auto__ = ty;
if(cljs.core.truth_(and__6226__auto__)){
return ty.cljs$lang$type;
} else {
return and__6226__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__7262 = obj;
return goog.typeOf(G__7262);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__7264 = Symbol;
return goog.typeOf(G__7264);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__7125__auto___7266 = len;
var i_7267 = (0);
while(true){
if((i_7267 < n__7125__auto___7266)){
(new_arr[i_7267] = (arr[i_7267]));

var G__7268 = (i_7267 + (1));
i_7267 = G__7268;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__7269 = (i + (1));
i = G__7269;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__7278__delegate = function (array,i,idxs){
var G__7275 = cljs$core$aget;
var G__7276 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__7277 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7275,G__7276,G__7277) : cljs.core.apply.call(null,G__7275,G__7276,G__7277));
};
var G__7278 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__7279__i = 0, G__7279__a = new Array(arguments.length -  2);
while (G__7279__i < G__7279__a.length) {G__7279__a[G__7279__i] = arguments[G__7279__i + 2]; ++G__7279__i;}
  idxs = new cljs.core.IndexedSeq(G__7279__a,0);
} 
return G__7278__delegate.call(this,array,i,idxs);};
G__7278.cljs$lang$maxFixedArity = 2;
G__7278.cljs$lang$applyTo = (function (arglist__7280){
var array = cljs.core.first(arglist__7280);
arglist__7280 = cljs.core.next(arglist__7280);
var i = cljs.core.first(arglist__7280);
var idxs = cljs.core.rest(arglist__7280);
return G__7278__delegate(array,i,idxs);
});
G__7278.cljs$core$IFn$_invoke$arity$variadic = G__7278__delegate;
return G__7278;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__7281 = null;
if (arguments.length > 2) {
var G__7282__i = 0, G__7282__a = new Array(arguments.length -  2);
while (G__7282__i < G__7282__a.length) {G__7282__a[G__7282__i] = arguments[G__7282__i + 2]; ++G__7282__i;}
G__7281 = new cljs.core.IndexedSeq(G__7282__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__7281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__7291__delegate = function (array,idx,idx2,idxv){
var G__7287 = cljs$core$aset;
var G__7288 = (array[idx]);
var G__7289 = idx2;
var G__7290 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7287,G__7288,G__7289,G__7290) : cljs.core.apply.call(null,G__7287,G__7288,G__7289,G__7290));
};
var G__7291 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__7292__i = 0, G__7292__a = new Array(arguments.length -  3);
while (G__7292__i < G__7292__a.length) {G__7292__a[G__7292__i] = arguments[G__7292__i + 3]; ++G__7292__i;}
  idxv = new cljs.core.IndexedSeq(G__7292__a,0);
} 
return G__7291__delegate.call(this,array,idx,idx2,idxv);};
G__7291.cljs$lang$maxFixedArity = 3;
G__7291.cljs$lang$applyTo = (function (arglist__7293){
var array = cljs.core.first(arglist__7293);
arglist__7293 = cljs.core.next(arglist__7293);
var idx = cljs.core.first(arglist__7293);
arglist__7293 = cljs.core.next(arglist__7293);
var idx2 = cljs.core.first(arglist__7293);
var idxv = cljs.core.rest(arglist__7293);
return G__7291__delegate(array,idx,idx2,idxv);
});
G__7291.cljs$core$IFn$_invoke$arity$variadic = G__7291__delegate;
return G__7291;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__7294 = null;
if (arguments.length > 3) {
var G__7295__i = 0, G__7295__a = new Array(arguments.length -  3);
while (G__7295__i < G__7295__a.length) {G__7295__a[G__7295__i] = arguments[G__7295__i + 3]; ++G__7295__i;}
G__7294 = new cljs.core.IndexedSeq(G__7295__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__7294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__7301 = (function (a,x){
a.push(x);

return a;
});
var G__7302 = [];
var G__7303 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7301,G__7302,G__7303) : cljs.core.reduce.call(null,G__7301,G__7302,G__7303));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__7304__i = 0, G__7304__a = new Array(arguments.length -  2);
while (G__7304__i < G__7304__a.length) {G__7304__a[G__7304__i] = arguments[G__7304__i + 2]; ++G__7304__i;}
  args = new cljs.core.IndexedSeq(G__7304__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__7305){
var obj = cljs.core.first(arglist__7305);
arglist__7305 = cljs.core.next(arglist__7305);
var s = cljs.core.first(arglist__7305);
var args = cljs.core.rest(arglist__7305);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

cljs.core.Fn = (function (){var obj7307 = {};
return obj7307;
})();


cljs.core.IFn = (function (){var obj7309 = {};
return obj7309;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7355 = x__6882__auto__;
return goog.typeOf(G__7355);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7357 = x__6882__auto__;
return goog.typeOf(G__7357);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7359 = x__6882__auto__;
return goog.typeOf(G__7359);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7361 = x__6882__auto__;
return goog.typeOf(G__7361);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7363 = x__6882__auto__;
return goog.typeOf(G__7363);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7365 = x__6882__auto__;
return goog.typeOf(G__7365);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7367 = x__6882__auto__;
return goog.typeOf(G__7367);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7369 = x__6882__auto__;
return goog.typeOf(G__7369);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7371 = x__6882__auto__;
return goog.typeOf(G__7371);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7373 = x__6882__auto__;
return goog.typeOf(G__7373);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7375 = x__6882__auto__;
return goog.typeOf(G__7375);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7377 = x__6882__auto__;
return goog.typeOf(G__7377);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7379 = x__6882__auto__;
return goog.typeOf(G__7379);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7381 = x__6882__auto__;
return goog.typeOf(G__7381);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7383 = x__6882__auto__;
return goog.typeOf(G__7383);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7385 = x__6882__auto__;
return goog.typeOf(G__7385);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7387 = x__6882__auto__;
return goog.typeOf(G__7387);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7389 = x__6882__auto__;
return goog.typeOf(G__7389);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7391 = x__6882__auto__;
return goog.typeOf(G__7391);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7393 = x__6882__auto__;
return goog.typeOf(G__7393);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7395 = x__6882__auto__;
return goog.typeOf(G__7395);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._invoke[(function (){var G__7397 = x__6882__auto__;
return goog.typeOf(G__7397);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._invoke["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


cljs.core.ICloneable = (function (){var obj7399 = {};
return obj7399;
})();

cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__6226__auto__ = value;
if(and__6226__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__6226__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__6882__auto__ = (((value == null))?null:value);
return (function (){var or__6238__auto__ = (cljs.core._clone[(function (){var G__7403 = x__6882__auto__;
return goog.typeOf(G__7403);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._clone["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj7405 = {};
return obj7405;
})();

cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._count[(function (){var G__7409 = x__6882__auto__;
return goog.typeOf(G__7409);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._count["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj7411 = {};
return obj7411;
})();

cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._empty[(function (){var G__7415 = x__6882__auto__;
return goog.typeOf(G__7415);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._empty["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj7417 = {};
return obj7417;
})();

cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._conj[(function (){var G__7421 = x__6882__auto__;
return goog.typeOf(G__7421);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._conj["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj7423 = {};
return obj7423;
})();

cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._nth[(function (){var G__7429 = x__6882__auto__;
return goog.typeOf(G__7429);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._nth["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._nth[(function (){var G__7431 = x__6882__auto__;
return goog.typeOf(G__7431);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._nth["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


cljs.core.ASeq = (function (){var obj7433 = {};
return obj7433;
})();


cljs.core.ISeq = (function (){var obj7435 = {};
return obj7435;
})();

cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._first[(function (){var G__7439 = x__6882__auto__;
return goog.typeOf(G__7439);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._first["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._rest[(function (){var G__7443 = x__6882__auto__;
return goog.typeOf(G__7443);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._rest["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj7445 = {};
return obj7445;
})();

cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._next[(function (){var G__7449 = x__6882__auto__;
return goog.typeOf(G__7449);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._next["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj7451 = {};
return obj7451;
})();

cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._lookup[(function (){var G__7457 = x__6882__auto__;
return goog.typeOf(G__7457);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._lookup["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._lookup[(function (){var G__7459 = x__6882__auto__;
return goog.typeOf(G__7459);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._lookup["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


cljs.core.IAssociative = (function (){var obj7461 = {};
return obj7461;
})();

cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7465 = x__6882__auto__;
return goog.typeOf(G__7465);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._assoc[(function (){var G__7469 = x__6882__auto__;
return goog.typeOf(G__7469);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._assoc["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj7471 = {};
return obj7471;
})();

cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._dissoc[(function (){var G__7475 = x__6882__auto__;
return goog.typeOf(G__7475);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._dissoc["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj7477 = {};
return obj7477;
})();

cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._key[(function (){var G__7481 = x__6882__auto__;
return goog.typeOf(G__7481);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._key["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._val[(function (){var G__7485 = x__6882__auto__;
return goog.typeOf(G__7485);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._val["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj7487 = {};
return obj7487;
})();

cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._disjoin[(function (){var G__7491 = x__6882__auto__;
return goog.typeOf(G__7491);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._disjoin["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj7493 = {};
return obj7493;
})();

cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._peek[(function (){var G__7497 = x__6882__auto__;
return goog.typeOf(G__7497);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._peek["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._pop[(function (){var G__7501 = x__6882__auto__;
return goog.typeOf(G__7501);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._pop["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj7503 = {};
return obj7503;
})();

cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._assoc_n[(function (){var G__7507 = x__6882__auto__;
return goog.typeOf(G__7507);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj7509 = {};
return obj7509;
})();

cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._deref[(function (){var G__7513 = x__6882__auto__;
return goog.typeOf(G__7513);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._deref["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7515 = {};
return obj7515;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7519 = x__6882__auto__;
return goog.typeOf(G__7519);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj7521 = {};
return obj7521;
})();

cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._meta[(function (){var G__7525 = x__6882__auto__;
return goog.typeOf(G__7525);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._meta["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj7527 = {};
return obj7527;
})();

cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._with_meta[(function (){var G__7531 = x__6882__auto__;
return goog.typeOf(G__7531);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._with_meta["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj7533 = {};
return obj7533;
})();

cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._reduce[(function (){var G__7539 = x__6882__auto__;
return goog.typeOf(G__7539);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._reduce["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._reduce[(function (){var G__7541 = x__6882__auto__;
return goog.typeOf(G__7541);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._reduce["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj7543 = {};
return obj7543;
})();

cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._kv_reduce[(function (){var G__7547 = x__6882__auto__;
return goog.typeOf(G__7547);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7549 = {};
return obj7549;
})();

cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._equiv[(function (){var G__7553 = x__6882__auto__;
return goog.typeOf(G__7553);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._equiv["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7555 = {};
return obj7555;
})();

cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._hash[(function (){var G__7559 = x__6882__auto__;
return goog.typeOf(G__7559);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._hash["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7561 = {};
return obj7561;
})();

cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._seq[(function (){var G__7565 = x__6882__auto__;
return goog.typeOf(G__7565);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._seq["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7567 = {};
return obj7567;
})();


cljs.core.IList = (function (){var obj7569 = {};
return obj7569;
})();


cljs.core.IRecord = (function (){var obj7571 = {};
return obj7571;
})();


cljs.core.IReversible = (function (){var obj7573 = {};
return obj7573;
})();

cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._rseq[(function (){var G__7577 = x__6882__auto__;
return goog.typeOf(G__7577);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._rseq["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7579 = {};
return obj7579;
})();

cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._sorted_seq[(function (){var G__7583 = x__6882__auto__;
return goog.typeOf(G__7583);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7587 = x__6882__auto__;
return goog.typeOf(G__7587);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._entry_key[(function (){var G__7591 = x__6882__auto__;
return goog.typeOf(G__7591);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._entry_key["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._comparator[(function (){var G__7595 = x__6882__auto__;
return goog.typeOf(G__7595);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._comparator["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7597 = {};
return obj7597;
})();

cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__6226__auto__ = writer;
if(and__6226__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__6226__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__6882__auto__ = (((writer == null))?null:writer);
return (function (){var or__6238__auto__ = (cljs.core._write[(function (){var G__7601 = x__6882__auto__;
return goog.typeOf(G__7601);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._write["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__6226__auto__ = writer;
if(and__6226__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__6226__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__6882__auto__ = (((writer == null))?null:writer);
return (function (){var or__6238__auto__ = (cljs.core._flush[(function (){var G__7605 = x__6882__auto__;
return goog.typeOf(G__7605);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._flush["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7607 = {};
return obj7607;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._pr_writer[(function (){var G__7611 = x__6882__auto__;
return goog.typeOf(G__7611);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7613 = {};
return obj7613;
})();

cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__6226__auto__ = d;
if(and__6226__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__6226__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__6882__auto__ = (((d == null))?null:d);
return (function (){var or__6238__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7617 = x__6882__auto__;
return goog.typeOf(G__7617);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7619 = {};
return obj7619;
})();

cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._notify_watches[(function (){var G__7623 = x__6882__auto__;
return goog.typeOf(G__7623);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._add_watch[(function (){var G__7627 = x__6882__auto__;
return goog.typeOf(G__7627);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._add_watch["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__6226__auto__ = this$;
if(and__6226__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__6226__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__6882__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6238__auto__ = (cljs.core._remove_watch[(function (){var G__7631 = x__6882__auto__;
return goog.typeOf(G__7631);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj7633 = {};
return obj7633;
})();

cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._as_transient[(function (){var G__7637 = x__6882__auto__;
return goog.typeOf(G__7637);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._as_transient["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj7639 = {};
return obj7639;
})();

cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._conj_BANG_[(function (){var G__7643 = x__6882__auto__;
return goog.typeOf(G__7643);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7647 = x__6882__auto__;
return goog.typeOf(G__7647);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj7649 = {};
return obj7649;
})();

cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7653 = x__6882__auto__;
return goog.typeOf(G__7653);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj7655 = {};
return obj7655;
})();

cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7659 = x__6882__auto__;
return goog.typeOf(G__7659);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj7661 = {};
return obj7661;
})();

cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7665 = x__6882__auto__;
return goog.typeOf(G__7665);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._pop_BANG_[(function (){var G__7669 = x__6882__auto__;
return goog.typeOf(G__7669);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj7671 = {};
return obj7671;
})();

cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__6226__auto__ = tcoll;
if(and__6226__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__6882__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6238__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7675 = x__6882__auto__;
return goog.typeOf(G__7675);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj7677 = {};
return obj7677;
})();

cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__6226__auto__ = x;
if(and__6226__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__6226__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__6882__auto__ = (((x == null))?null:x);
return (function (){var or__6238__auto__ = (cljs.core._compare[(function (){var G__7681 = x__6882__auto__;
return goog.typeOf(G__7681);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._compare["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj7683 = {};
return obj7683;
})();

cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._drop_first[(function (){var G__7687 = x__6882__auto__;
return goog.typeOf(G__7687);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._drop_first["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj7689 = {};
return obj7689;
})();

cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._chunked_first[(function (){var G__7693 = x__6882__auto__;
return goog.typeOf(G__7693);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._chunked_rest[(function (){var G__7697 = x__6882__auto__;
return goog.typeOf(G__7697);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj7699 = {};
return obj7699;
})();

cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._chunked_next[(function (){var G__7703 = x__6882__auto__;
return goog.typeOf(G__7703);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj7705 = {};
return obj7705;
})();

cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__6226__auto__ = x;
if(and__6226__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__6226__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__6882__auto__ = (((x == null))?null:x);
return (function (){var or__6238__auto__ = (cljs.core._name[(function (){var G__7709 = x__6882__auto__;
return goog.typeOf(G__7709);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._name["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__6226__auto__ = x;
if(and__6226__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__6226__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__6882__auto__ = (((x == null))?null:x);
return (function (){var or__6238__auto__ = (cljs.core._namespace[(function (){var G__7713 = x__6882__auto__;
return goog.typeOf(G__7713);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._namespace["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj7715 = {};
return obj7715;
})();


cljs.core.IReset = (function (){var obj7717 = {};
return obj7717;
})();

cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._reset_BANG_[(function (){var G__7721 = x__6882__auto__;
return goog.typeOf(G__7721);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj7723 = {};
return obj7723;
})();

cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._swap_BANG_[(function (){var G__7733 = x__6882__auto__;
return goog.typeOf(G__7733);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._swap_BANG_[(function (){var G__7735 = x__6882__auto__;
return goog.typeOf(G__7735);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._swap_BANG_[(function (){var G__7737 = x__6882__auto__;
return goog.typeOf(G__7737);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._swap_BANG_[(function (){var G__7739 = x__6882__auto__;
return goog.typeOf(G__7739);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj7741 = {};
return obj7741;
})();

cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__6226__auto__ = o;
if(and__6226__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__6226__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__6882__auto__ = (((o == null))?null:o);
return (function (){var or__6238__auto__ = (cljs.core._vreset_BANG_[(function (){var G__7745 = x__6882__auto__;
return goog.typeOf(G__7745);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj7747 = {};
return obj7747;
})();

cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__6226__auto__ = coll;
if(and__6226__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__6226__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__6882__auto__ = (((coll == null))?null:coll);
return (function (){var or__6238__auto__ = (cljs.core._iterator[(function (){var G__7751 = x__6882__auto__;
return goog.typeOf(G__7751);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._iterator["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__7754 = (4294967295);
var G__7755 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7754,G__7755) : Math.imul.call(null,G__7754,G__7755));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__7758 = a;
var G__7759 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7758,G__7759) : Math.imul.call(null,G__7758,G__7759));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__7760 = (i + (2));
var G__7761 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__7760;
h1 = G__7761;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj7763 = {};
return obj7763;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__7764 = (i + (1));
var G__7765 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__7764;
hash = G__7765;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj7769 = {};
return obj7769;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__7772 = o;
if(G__7772){
var bit__6912__auto__ = (G__7772.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__6912__auto__) || (G__7772.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__7773 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7773) : Math.floor.call(null,G__7773));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__6226__auto__ = cljs.core.not(a.ns);
if(and__6226__auto__){
return b.ns;
} else {
return and__6226__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7780 = a.ns;
var G__7781 = b.ns;
return goog.array.defaultCompare(G__7780,G__7781);
})();
if(((0) === nsc)){
var G__7782 = a.name;
var G__7783 = b.name;
return goog.array.defaultCompare(G__7782,G__7783);
} else {
return nsc;
}
}
} else {
var G__7784 = a.name;
var G__7785 = b.name;
return goog.array.defaultCompare(G__7784,G__7785);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__6659__auto__ = self__._hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__7787 = null;
var G__7787__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__7787__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__7787 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7787__2.call(this,self__,coll);
case 3:
return G__7787__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7787.cljs$core$IFn$_invoke$arity$2 = G__7787__2;
G__7787.cljs$core$IFn$_invoke$arity$3 = G__7787__3;
return G__7787;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args7786){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7786)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__7835 = null;
var G__7835__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__7835__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__7835__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__7835__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__7835__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__7835__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__7835__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__7835__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__7835__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__7835__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__7835__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__7835__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__7835__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__7835__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__7835__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__7835__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__7835__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__7835__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__7835__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__7835__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__7835__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__7835__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7791 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7792 = a;
var G__7793 = b;
var G__7794 = c;
var G__7795 = d;
var G__7796 = e;
var G__7797 = f;
var G__7798 = g;
var G__7799 = h;
var G__7800 = i;
var G__7801 = j;
var G__7802 = k;
var G__7803 = l;
var G__7804 = m;
var G__7805 = n;
var G__7806 = o;
var G__7807 = p;
var G__7808 = q;
var G__7809 = r;
var G__7810 = s;
var G__7811 = t;
var G__7812 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812) : cljs.core.apply.call(null,G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812));
});
G__7835 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7835__1.call(this,self__);
case 2:
return G__7835__2.call(this,self__,a);
case 3:
return G__7835__3.call(this,self__,a,b);
case 4:
return G__7835__4.call(this,self__,a,b,c);
case 5:
return G__7835__5.call(this,self__,a,b,c,d);
case 6:
return G__7835__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7835__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7835__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7835__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7835__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7835__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7835__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7835__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7835__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7835__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7835__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7835__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7835__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7835__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7835__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7835__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7835__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7835.cljs$core$IFn$_invoke$arity$1 = G__7835__1;
G__7835.cljs$core$IFn$_invoke$arity$2 = G__7835__2;
G__7835.cljs$core$IFn$_invoke$arity$3 = G__7835__3;
G__7835.cljs$core$IFn$_invoke$arity$4 = G__7835__4;
G__7835.cljs$core$IFn$_invoke$arity$5 = G__7835__5;
G__7835.cljs$core$IFn$_invoke$arity$6 = G__7835__6;
G__7835.cljs$core$IFn$_invoke$arity$7 = G__7835__7;
G__7835.cljs$core$IFn$_invoke$arity$8 = G__7835__8;
G__7835.cljs$core$IFn$_invoke$arity$9 = G__7835__9;
G__7835.cljs$core$IFn$_invoke$arity$10 = G__7835__10;
G__7835.cljs$core$IFn$_invoke$arity$11 = G__7835__11;
G__7835.cljs$core$IFn$_invoke$arity$12 = G__7835__12;
G__7835.cljs$core$IFn$_invoke$arity$13 = G__7835__13;
G__7835.cljs$core$IFn$_invoke$arity$14 = G__7835__14;
G__7835.cljs$core$IFn$_invoke$arity$15 = G__7835__15;
G__7835.cljs$core$IFn$_invoke$arity$16 = G__7835__16;
G__7835.cljs$core$IFn$_invoke$arity$17 = G__7835__17;
G__7835.cljs$core$IFn$_invoke$arity$18 = G__7835__18;
G__7835.cljs$core$IFn$_invoke$arity$19 = G__7835__19;
G__7835.cljs$core$IFn$_invoke$arity$20 = G__7835__20;
G__7835.cljs$core$IFn$_invoke$arity$21 = G__7835__21;
G__7835.cljs$core$IFn$_invoke$arity$22 = G__7835__22;
return G__7835;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args7790){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7790)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7813 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7814 = a;
var G__7815 = b;
var G__7816 = c;
var G__7817 = d;
var G__7818 = e;
var G__7819 = f;
var G__7820 = g;
var G__7821 = h;
var G__7822 = i;
var G__7823 = j;
var G__7824 = k;
var G__7825 = l;
var G__7826 = m;
var G__7827 = n;
var G__7828 = o;
var G__7829 = p;
var G__7830 = q;
var G__7831 = r;
var G__7832 = s;
var G__7833 = t;
var G__7834 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834) : cljs.core.apply.call(null,G__7813,G__7814,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__7837 = x;
if(G__7837){
var bit__6919__auto__ = null;
if(cljs.core.truth_((function (){var or__6238__auto__ = bit__6919__auto__;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return G__7837.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__7837.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7837);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7837);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__7839 = value;
if(G__7839){
var bit__6919__auto__ = (G__7839.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__6919__auto__) || (G__7839.cljs$core$ICloneable$)){
return true;
} else {
if((!G__7839.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7839);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7841 = coll;
if(G__7841){
var bit__6912__auto__ = (G__7841.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6912__auto__) || (G__7841.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7843 = coll;
if(G__7843){
var bit__6912__auto__ = (G__7843.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6912__auto__) || (G__7843.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__7845 = coll;
if(G__7845){
var bit__6912__auto__ = (G__7845.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6912__auto__) || (G__7845.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7847 = coll;
if(G__7847){
var bit__6912__auto__ = (G__7847.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6912__auto__) || (G__7847.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__7852__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7853 = y;
var G__7854 = cljs.core.first(more);
var G__7855 = cljs.core.next(more);
x = G__7853;
y = G__7854;
more = G__7855;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7852 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7856__i = 0, G__7856__a = new Array(arguments.length -  2);
while (G__7856__i < G__7856__a.length) {G__7856__a[G__7856__i] = arguments[G__7856__i + 2]; ++G__7856__i;}
  more = new cljs.core.IndexedSeq(G__7856__a,0);
} 
return G__7852__delegate.call(this,x,y,more);};
G__7852.cljs$lang$maxFixedArity = 2;
G__7852.cljs$lang$applyTo = (function (arglist__7857){
var x = cljs.core.first(arglist__7857);
arglist__7857 = cljs.core.next(arglist__7857);
var y = cljs.core.first(arglist__7857);
var more = cljs.core.rest(arglist__7857);
return G__7852__delegate(x,y,more);
});
G__7852.cljs$core$IFn$_invoke$arity$variadic = G__7852__delegate;
return G__7852;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__7858 = null;
if (arguments.length > 2) {
var G__7859__i = 0, G__7859__a = new Array(arguments.length -  2);
while (G__7859__i < G__7859__a.length) {G__7859__a[G__7859__i] = arguments[G__7859__i + 2]; ++G__7859__i;}
G__7858 = new cljs.core.IndexedSeq(G__7859__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__7860 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__7860) : cljs.core.es6_iterator_seq.call(null,G__7860));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7861 = (n + (1));
var G__7862 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7863 = cljs.core.next(coll__$1);
n = G__7861;
hash_code = G__7862;
coll__$1 = G__7863;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7864 = (n + (1));
var G__7865 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7866 = cljs.core.next(coll__$1);
n = G__7864;
hash_code = G__7865;
coll__$1 = G__7866;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__7867 = o;
return goog.getUid(G__7867);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__7869 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7869) : cljs.core.deref.call(null,G__7869));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7876 = val;
var G__7877 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7876,G__7877) : f.call(null,G__7876,G__7877));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7882 = nval;
var G__7883 = (n + (1));
val = G__7882;
n = G__7883;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7878 = val__$1;
var G__7879 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7878,G__7879) : f.call(null,G__7878,G__7879));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7884 = nval;
var G__7885 = (n + (1));
val__$1 = G__7884;
n = G__7885;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7880 = val__$1;
var G__7881 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7880,G__7881) : f.call(null,G__7880,G__7881));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7886 = nval;
var G__7887 = (n + (1));
val__$1 = G__7886;
n = G__7887;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7894 = val;
var G__7895 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7894,G__7895) : f.call(null,G__7894,G__7895));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7900 = nval;
var G__7901 = (n + (1));
val = G__7900;
n = G__7901;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7896 = val__$1;
var G__7897 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7896,G__7897) : f.call(null,G__7896,G__7897));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7902 = nval;
var G__7903 = (n + (1));
val__$1 = G__7902;
n = G__7903;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7898 = val__$1;
var G__7899 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7898,G__7899) : f.call(null,G__7898,G__7899));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7904 = nval;
var G__7905 = (n + (1));
val__$1 = G__7904;
n = G__7905;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__7907 = x;
if(G__7907){
var bit__6919__auto__ = (G__7907.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6919__auto__) || (G__7907.cljs$core$ICounted$)){
return true;
} else {
if((!G__7907.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7907);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7907);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__7909 = x;
if(G__7909){
var bit__6919__auto__ = (G__7909.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6919__auto__) || (G__7909.cljs$core$IIndexed$)){
return true;
} else {
if((!G__7909.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7909);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7909);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7910 = coll__$1;
var G__7911 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7910,G__7911) : cljs.core.equiv_sequential.call(null,G__7910,G__7911));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7912 = o;
var G__7913 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7912,G__7913) : cljs.core.cons.call(null,G__7912,G__7913));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7916 = coll__$1;
var G__7917 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7916,G__7917) : cljs.core.equiv_sequential.call(null,G__7916,G__7917));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__7918 = cljs.core.List.EMPTY;
var G__7919 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__7918,G__7919) : cljs.core.with_meta.call(null,G__7918,G__7919));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__7920 = f;
var G__7921 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__7920,G__7921) : cljs.core.seq_reduce.call(null,G__7920,G__7921));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__7922 = f;
var G__7923 = start;
var G__7924 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__7922,G__7923,G__7924) : cljs.core.seq_reduce.call(null,G__7922,G__7923,G__7924));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7925 = o;
var G__7926 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7925,G__7926) : cljs.core.cons.call(null,G__7925,G__7926));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__7927 = sn;
s = G__7927;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__7932__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__7933 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__7934 = cljs.core.first(xs);
var G__7935 = cljs.core.next(xs);
coll = G__7933;
x = G__7934;
xs = G__7935;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__7932 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__7936__i = 0, G__7936__a = new Array(arguments.length -  2);
while (G__7936__i < G__7936__a.length) {G__7936__a[G__7936__i] = arguments[G__7936__i + 2]; ++G__7936__i;}
  xs = new cljs.core.IndexedSeq(G__7936__a,0);
} 
return G__7932__delegate.call(this,coll,x,xs);};
G__7932.cljs$lang$maxFixedArity = 2;
G__7932.cljs$lang$applyTo = (function (arglist__7937){
var coll = cljs.core.first(arglist__7937);
arglist__7937 = cljs.core.next(arglist__7937);
var x = cljs.core.first(arglist__7937);
var xs = cljs.core.rest(arglist__7937);
return G__7932__delegate(coll,x,xs);
});
G__7932.cljs$core$IFn$_invoke$arity$variadic = G__7932__delegate;
return G__7932;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__7938 = null;
if (arguments.length > 2) {
var G__7939__i = 0, G__7939__a = new Array(arguments.length -  2);
while (G__7939__i < G__7939__a.length) {G__7939__a[G__7939__i] = arguments[G__7939__i + 2]; ++G__7939__i;}
G__7938 = new cljs.core.IndexedSeq(G__7939__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__7938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__7940 = cljs.core.next(s);
var G__7941 = (acc + (1));
s = G__7940;
acc = G__7941;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__7943 = coll;
if(G__7943){
var bit__6912__auto__ = (G__7943.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6912__auto__) || (G__7943.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__7944 = cljs.core.next(coll);
var G__7945 = (n - (1));
coll = G__7944;
n = G__7945;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__7946 = cljs.core.next(coll);
var G__7947 = (n - (1));
var G__7948 = not_found;
coll = G__7946;
n = G__7947;
not_found = G__7948;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__7953 = coll;
if(G__7953){
var bit__6912__auto__ = (G__7953.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6912__auto__) || (G__7953.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7954 = coll;
if(G__7954){
var bit__6919__auto__ = (G__7954.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6919__auto__) || (G__7954.cljs$core$ISeq$)){
return true;
} else {
if((!G__7954.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7954);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7954);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__7955 = coll;
if(G__7955){
var bit__6912__auto__ = (G__7955.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6912__auto__) || (G__7955.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7956 = coll;
if(G__7956){
var bit__6919__auto__ = (G__7956.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6919__auto__) || (G__7956.cljs$core$ISeq$)){
return true;
} else {
if((!G__7956.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7956);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7956);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__7957 = (n__$1 - (1));
var G__7958 = cljs.core.rest(xs);
n__$1 = G__7957;
xs = G__7958;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__7961 = o;
if(G__7961){
var bit__6912__auto__ = (G__7961.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6912__auto__) || (G__7961.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__7962 = o;
if(G__7962){
var bit__6912__auto__ = (G__7962.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6912__auto__) || (G__7962.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__7966__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__7967 = ret;
var G__7968 = cljs.core.first(kvs);
var G__7969 = cljs.core.second(kvs);
var G__7970 = cljs.core.nnext(kvs);
coll = G__7967;
k = G__7968;
v = G__7969;
kvs = G__7970;
continue;
} else {
return ret;
}
break;
}
};
var G__7966 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7971__i = 0, G__7971__a = new Array(arguments.length -  3);
while (G__7971__i < G__7971__a.length) {G__7971__a[G__7971__i] = arguments[G__7971__i + 3]; ++G__7971__i;}
  kvs = new cljs.core.IndexedSeq(G__7971__a,0);
} 
return G__7966__delegate.call(this,coll,k,v,kvs);};
G__7966.cljs$lang$maxFixedArity = 3;
G__7966.cljs$lang$applyTo = (function (arglist__7972){
var coll = cljs.core.first(arglist__7972);
arglist__7972 = cljs.core.next(arglist__7972);
var k = cljs.core.first(arglist__7972);
arglist__7972 = cljs.core.next(arglist__7972);
var v = cljs.core.first(arglist__7972);
var kvs = cljs.core.rest(arglist__7972);
return G__7966__delegate(coll,k,v,kvs);
});
G__7966.cljs$core$IFn$_invoke$arity$variadic = G__7966__delegate;
return G__7966;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__7973 = null;
if (arguments.length > 3) {
var G__7974__i = 0, G__7974__a = new Array(arguments.length -  3);
while (G__7974__i < G__7974__a.length) {G__7974__a[G__7974__i] = arguments[G__7974__i + 3]; ++G__7974__i;}
G__7973 = new cljs.core.IndexedSeq(G__7974__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__7973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__7977__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7978 = ret;
var G__7979 = cljs.core.first(ks);
var G__7980 = cljs.core.next(ks);
coll = G__7978;
k = G__7979;
ks = G__7980;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7977 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7981__i = 0, G__7981__a = new Array(arguments.length -  2);
while (G__7981__i < G__7981__a.length) {G__7981__a[G__7981__i] = arguments[G__7981__i + 2]; ++G__7981__i;}
  ks = new cljs.core.IndexedSeq(G__7981__a,0);
} 
return G__7977__delegate.call(this,coll,k,ks);};
G__7977.cljs$lang$maxFixedArity = 2;
G__7977.cljs$lang$applyTo = (function (arglist__7982){
var coll = cljs.core.first(arglist__7982);
arglist__7982 = cljs.core.next(arglist__7982);
var k = cljs.core.first(arglist__7982);
var ks = cljs.core.rest(arglist__7982);
return G__7977__delegate(coll,k,ks);
});
G__7977.cljs$core$IFn$_invoke$arity$variadic = G__7977__delegate;
return G__7977;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__7983 = null;
if (arguments.length > 2) {
var G__7984__i = 0, G__7984__a = new Array(arguments.length -  2);
while (G__7984__i < G__7984__a.length) {G__7984__a[G__7984__i] = arguments[G__7984__i + 2]; ++G__7984__i;}
G__7983 = new cljs.core.IndexedSeq(G__7984__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__6238__auto__ = (function (){var G__7989 = f;
return goog.isFunction(G__7989);
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var G__7990 = f;
if(G__7990){
var bit__6919__auto__ = null;
if(cljs.core.truth_((function (){var or__6238__auto____$1 = bit__6919__auto__;
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
return G__7990.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7990.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7990);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7990);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__8456 = null;
var G__8456__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8456__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7992 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7992) : self__.afn.call(null,G__7992));
});
var G__8456__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7993 = a;
var G__7994 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7993,G__7994) : self__.afn.call(null,G__7993,G__7994));
});
var G__8456__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7995 = a;
var G__7996 = b;
var G__7997 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7995,G__7996,G__7997) : self__.afn.call(null,G__7995,G__7996,G__7997));
});
var G__8456__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7998 = a;
var G__7999 = b;
var G__8000 = c;
var G__8001 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7998,G__7999,G__8000,G__8001) : self__.afn.call(null,G__7998,G__7999,G__8000,G__8001));
});
var G__8456__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8002 = a;
var G__8003 = b;
var G__8004 = c;
var G__8005 = d;
var G__8006 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8002,G__8003,G__8004,G__8005,G__8006) : self__.afn.call(null,G__8002,G__8003,G__8004,G__8005,G__8006));
});
var G__8456__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8007 = a;
var G__8008 = b;
var G__8009 = c;
var G__8010 = d;
var G__8011 = e;
var G__8012 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8007,G__8008,G__8009,G__8010,G__8011,G__8012) : self__.afn.call(null,G__8007,G__8008,G__8009,G__8010,G__8011,G__8012));
});
var G__8456__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8013 = a;
var G__8014 = b;
var G__8015 = c;
var G__8016 = d;
var G__8017 = e;
var G__8018 = f;
var G__8019 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019) : self__.afn.call(null,G__8013,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019));
});
var G__8456__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8020 = a;
var G__8021 = b;
var G__8022 = c;
var G__8023 = d;
var G__8024 = e;
var G__8025 = f;
var G__8026 = g;
var G__8027 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027) : self__.afn.call(null,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027));
});
var G__8456__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8028 = a;
var G__8029 = b;
var G__8030 = c;
var G__8031 = d;
var G__8032 = e;
var G__8033 = f;
var G__8034 = g;
var G__8035 = h;
var G__8036 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8028,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036) : self__.afn.call(null,G__8028,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036));
});
var G__8456__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8037 = a;
var G__8038 = b;
var G__8039 = c;
var G__8040 = d;
var G__8041 = e;
var G__8042 = f;
var G__8043 = g;
var G__8044 = h;
var G__8045 = i;
var G__8046 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046) : self__.afn.call(null,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046));
});
var G__8456__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8047 = a;
var G__8048 = b;
var G__8049 = c;
var G__8050 = d;
var G__8051 = e;
var G__8052 = f;
var G__8053 = g;
var G__8054 = h;
var G__8055 = i;
var G__8056 = j;
var G__8057 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057) : self__.afn.call(null,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057));
});
var G__8456__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8058 = a;
var G__8059 = b;
var G__8060 = c;
var G__8061 = d;
var G__8062 = e;
var G__8063 = f;
var G__8064 = g;
var G__8065 = h;
var G__8066 = i;
var G__8067 = j;
var G__8068 = k;
var G__8069 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068,G__8069) : self__.afn.call(null,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068,G__8069));
});
var G__8456__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8070 = a;
var G__8071 = b;
var G__8072 = c;
var G__8073 = d;
var G__8074 = e;
var G__8075 = f;
var G__8076 = g;
var G__8077 = h;
var G__8078 = i;
var G__8079 = j;
var G__8080 = k;
var G__8081 = l;
var G__8082 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082) : self__.afn.call(null,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082));
});
var G__8456__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8083 = a;
var G__8084 = b;
var G__8085 = c;
var G__8086 = d;
var G__8087 = e;
var G__8088 = f;
var G__8089 = g;
var G__8090 = h;
var G__8091 = i;
var G__8092 = j;
var G__8093 = k;
var G__8094 = l;
var G__8095 = m;
var G__8096 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096) : self__.afn.call(null,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096));
});
var G__8456__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8097 = a;
var G__8098 = b;
var G__8099 = c;
var G__8100 = d;
var G__8101 = e;
var G__8102 = f;
var G__8103 = g;
var G__8104 = h;
var G__8105 = i;
var G__8106 = j;
var G__8107 = k;
var G__8108 = l;
var G__8109 = m;
var G__8110 = n;
var G__8111 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8097,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109,G__8110,G__8111) : self__.afn.call(null,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109,G__8110,G__8111));
});
var G__8456__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8112 = a;
var G__8113 = b;
var G__8114 = c;
var G__8115 = d;
var G__8116 = e;
var G__8117 = f;
var G__8118 = g;
var G__8119 = h;
var G__8120 = i;
var G__8121 = j;
var G__8122 = k;
var G__8123 = l;
var G__8124 = m;
var G__8125 = n;
var G__8126 = o;
var G__8127 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127) : self__.afn.call(null,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127));
});
var G__8456__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8128 = a;
var G__8129 = b;
var G__8130 = c;
var G__8131 = d;
var G__8132 = e;
var G__8133 = f;
var G__8134 = g;
var G__8135 = h;
var G__8136 = i;
var G__8137 = j;
var G__8138 = k;
var G__8139 = l;
var G__8140 = m;
var G__8141 = n;
var G__8142 = o;
var G__8143 = p;
var G__8144 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144) : self__.afn.call(null,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144));
});
var G__8456__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8145 = a;
var G__8146 = b;
var G__8147 = c;
var G__8148 = d;
var G__8149 = e;
var G__8150 = f;
var G__8151 = g;
var G__8152 = h;
var G__8153 = i;
var G__8154 = j;
var G__8155 = k;
var G__8156 = l;
var G__8157 = m;
var G__8158 = n;
var G__8159 = o;
var G__8160 = p;
var G__8161 = q;
var G__8162 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162) : self__.afn.call(null,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162));
});
var G__8456__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8163 = a;
var G__8164 = b;
var G__8165 = c;
var G__8166 = d;
var G__8167 = e;
var G__8168 = f;
var G__8169 = g;
var G__8170 = h;
var G__8171 = i;
var G__8172 = j;
var G__8173 = k;
var G__8174 = l;
var G__8175 = m;
var G__8176 = n;
var G__8177 = o;
var G__8178 = p;
var G__8179 = q;
var G__8180 = r;
var G__8181 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181) : self__.afn.call(null,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181));
});
var G__8456__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8182 = a;
var G__8183 = b;
var G__8184 = c;
var G__8185 = d;
var G__8186 = e;
var G__8187 = f;
var G__8188 = g;
var G__8189 = h;
var G__8190 = i;
var G__8191 = j;
var G__8192 = k;
var G__8193 = l;
var G__8194 = m;
var G__8195 = n;
var G__8196 = o;
var G__8197 = p;
var G__8198 = q;
var G__8199 = r;
var G__8200 = s;
var G__8201 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201) : self__.afn.call(null,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201));
});
var G__8456__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8202 = self__.afn;
var G__8203 = a;
var G__8204 = b;
var G__8205 = c;
var G__8206 = d;
var G__8207 = e;
var G__8208 = f;
var G__8209 = g;
var G__8210 = h;
var G__8211 = i;
var G__8212 = j;
var G__8213 = k;
var G__8214 = l;
var G__8215 = m;
var G__8216 = n;
var G__8217 = o;
var G__8218 = p;
var G__8219 = q;
var G__8220 = r;
var G__8221 = s;
var G__8222 = t;
var G__8223 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8202,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223) : cljs.core.apply.call(null,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223));
});
G__8456 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8456__1.call(this,self__);
case 2:
return G__8456__2.call(this,self__,a);
case 3:
return G__8456__3.call(this,self__,a,b);
case 4:
return G__8456__4.call(this,self__,a,b,c);
case 5:
return G__8456__5.call(this,self__,a,b,c,d);
case 6:
return G__8456__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8456__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8456__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8456__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8456__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8456__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8456__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8456__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8456__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8456__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8456__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8456__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8456__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8456__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8456__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8456__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8456__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8456.cljs$core$IFn$_invoke$arity$1 = G__8456__1;
G__8456.cljs$core$IFn$_invoke$arity$2 = G__8456__2;
G__8456.cljs$core$IFn$_invoke$arity$3 = G__8456__3;
G__8456.cljs$core$IFn$_invoke$arity$4 = G__8456__4;
G__8456.cljs$core$IFn$_invoke$arity$5 = G__8456__5;
G__8456.cljs$core$IFn$_invoke$arity$6 = G__8456__6;
G__8456.cljs$core$IFn$_invoke$arity$7 = G__8456__7;
G__8456.cljs$core$IFn$_invoke$arity$8 = G__8456__8;
G__8456.cljs$core$IFn$_invoke$arity$9 = G__8456__9;
G__8456.cljs$core$IFn$_invoke$arity$10 = G__8456__10;
G__8456.cljs$core$IFn$_invoke$arity$11 = G__8456__11;
G__8456.cljs$core$IFn$_invoke$arity$12 = G__8456__12;
G__8456.cljs$core$IFn$_invoke$arity$13 = G__8456__13;
G__8456.cljs$core$IFn$_invoke$arity$14 = G__8456__14;
G__8456.cljs$core$IFn$_invoke$arity$15 = G__8456__15;
G__8456.cljs$core$IFn$_invoke$arity$16 = G__8456__16;
G__8456.cljs$core$IFn$_invoke$arity$17 = G__8456__17;
G__8456.cljs$core$IFn$_invoke$arity$18 = G__8456__18;
G__8456.cljs$core$IFn$_invoke$arity$19 = G__8456__19;
G__8456.cljs$core$IFn$_invoke$arity$20 = G__8456__20;
G__8456.cljs$core$IFn$_invoke$arity$21 = G__8456__21;
G__8456.cljs$core$IFn$_invoke$arity$22 = G__8456__22;
return G__8456;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7991){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7991)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__8224 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8224) : self__.afn.call(null,G__8224));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__8225 = a;
var G__8226 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8225,G__8226) : self__.afn.call(null,G__8225,G__8226));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__8227 = a;
var G__8228 = b;
var G__8229 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8227,G__8228,G__8229) : self__.afn.call(null,G__8227,G__8228,G__8229));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__8230 = a;
var G__8231 = b;
var G__8232 = c;
var G__8233 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8230,G__8231,G__8232,G__8233) : self__.afn.call(null,G__8230,G__8231,G__8232,G__8233));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__8234 = a;
var G__8235 = b;
var G__8236 = c;
var G__8237 = d;
var G__8238 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8234,G__8235,G__8236,G__8237,G__8238) : self__.afn.call(null,G__8234,G__8235,G__8236,G__8237,G__8238));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__8239 = a;
var G__8240 = b;
var G__8241 = c;
var G__8242 = d;
var G__8243 = e;
var G__8244 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8239,G__8240,G__8241,G__8242,G__8243,G__8244) : self__.afn.call(null,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__8245 = a;
var G__8246 = b;
var G__8247 = c;
var G__8248 = d;
var G__8249 = e;
var G__8250 = f;
var G__8251 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251) : self__.afn.call(null,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__8252 = a;
var G__8253 = b;
var G__8254 = c;
var G__8255 = d;
var G__8256 = e;
var G__8257 = f;
var G__8258 = g;
var G__8259 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259) : self__.afn.call(null,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__8260 = a;
var G__8261 = b;
var G__8262 = c;
var G__8263 = d;
var G__8264 = e;
var G__8265 = f;
var G__8266 = g;
var G__8267 = h;
var G__8268 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8260,G__8261,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268) : self__.afn.call(null,G__8260,G__8261,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__8269 = a;
var G__8270 = b;
var G__8271 = c;
var G__8272 = d;
var G__8273 = e;
var G__8274 = f;
var G__8275 = g;
var G__8276 = h;
var G__8277 = i;
var G__8278 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278) : self__.afn.call(null,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__8279 = a;
var G__8280 = b;
var G__8281 = c;
var G__8282 = d;
var G__8283 = e;
var G__8284 = f;
var G__8285 = g;
var G__8286 = h;
var G__8287 = i;
var G__8288 = j;
var G__8289 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289) : self__.afn.call(null,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__8290 = a;
var G__8291 = b;
var G__8292 = c;
var G__8293 = d;
var G__8294 = e;
var G__8295 = f;
var G__8296 = g;
var G__8297 = h;
var G__8298 = i;
var G__8299 = j;
var G__8300 = k;
var G__8301 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301) : self__.afn.call(null,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__8302 = a;
var G__8303 = b;
var G__8304 = c;
var G__8305 = d;
var G__8306 = e;
var G__8307 = f;
var G__8308 = g;
var G__8309 = h;
var G__8310 = i;
var G__8311 = j;
var G__8312 = k;
var G__8313 = l;
var G__8314 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314) : self__.afn.call(null,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__8315 = a;
var G__8316 = b;
var G__8317 = c;
var G__8318 = d;
var G__8319 = e;
var G__8320 = f;
var G__8321 = g;
var G__8322 = h;
var G__8323 = i;
var G__8324 = j;
var G__8325 = k;
var G__8326 = l;
var G__8327 = m;
var G__8328 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328) : self__.afn.call(null,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__8329 = a;
var G__8330 = b;
var G__8331 = c;
var G__8332 = d;
var G__8333 = e;
var G__8334 = f;
var G__8335 = g;
var G__8336 = h;
var G__8337 = i;
var G__8338 = j;
var G__8339 = k;
var G__8340 = l;
var G__8341 = m;
var G__8342 = n;
var G__8343 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343) : self__.afn.call(null,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__8344 = a;
var G__8345 = b;
var G__8346 = c;
var G__8347 = d;
var G__8348 = e;
var G__8349 = f;
var G__8350 = g;
var G__8351 = h;
var G__8352 = i;
var G__8353 = j;
var G__8354 = k;
var G__8355 = l;
var G__8356 = m;
var G__8357 = n;
var G__8358 = o;
var G__8359 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359) : self__.afn.call(null,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__8360 = a;
var G__8361 = b;
var G__8362 = c;
var G__8363 = d;
var G__8364 = e;
var G__8365 = f;
var G__8366 = g;
var G__8367 = h;
var G__8368 = i;
var G__8369 = j;
var G__8370 = k;
var G__8371 = l;
var G__8372 = m;
var G__8373 = n;
var G__8374 = o;
var G__8375 = p;
var G__8376 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8360,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376) : self__.afn.call(null,G__8360,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8377 = a;
var G__8378 = b;
var G__8379 = c;
var G__8380 = d;
var G__8381 = e;
var G__8382 = f;
var G__8383 = g;
var G__8384 = h;
var G__8385 = i;
var G__8386 = j;
var G__8387 = k;
var G__8388 = l;
var G__8389 = m;
var G__8390 = n;
var G__8391 = o;
var G__8392 = p;
var G__8393 = q;
var G__8394 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8377,G__8378,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394) : self__.afn.call(null,G__8377,G__8378,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8395 = a;
var G__8396 = b;
var G__8397 = c;
var G__8398 = d;
var G__8399 = e;
var G__8400 = f;
var G__8401 = g;
var G__8402 = h;
var G__8403 = i;
var G__8404 = j;
var G__8405 = k;
var G__8406 = l;
var G__8407 = m;
var G__8408 = n;
var G__8409 = o;
var G__8410 = p;
var G__8411 = q;
var G__8412 = r;
var G__8413 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413) : self__.afn.call(null,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8414 = a;
var G__8415 = b;
var G__8416 = c;
var G__8417 = d;
var G__8418 = e;
var G__8419 = f;
var G__8420 = g;
var G__8421 = h;
var G__8422 = i;
var G__8423 = j;
var G__8424 = k;
var G__8425 = l;
var G__8426 = m;
var G__8427 = n;
var G__8428 = o;
var G__8429 = p;
var G__8430 = q;
var G__8431 = r;
var G__8432 = s;
var G__8433 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426,G__8427,G__8428,G__8429,G__8430,G__8431,G__8432,G__8433) : self__.afn.call(null,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426,G__8427,G__8428,G__8429,G__8430,G__8431,G__8432,G__8433));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8434 = self__.afn;
var G__8435 = a;
var G__8436 = b;
var G__8437 = c;
var G__8438 = d;
var G__8439 = e;
var G__8440 = f;
var G__8441 = g;
var G__8442 = h;
var G__8443 = i;
var G__8444 = j;
var G__8445 = k;
var G__8446 = l;
var G__8447 = m;
var G__8448 = n;
var G__8449 = o;
var G__8450 = p;
var G__8451 = q;
var G__8452 = r;
var G__8453 = s;
var G__8454 = t;
var G__8455 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445,G__8446,G__8447,G__8448,G__8449,G__8450,G__8451,G__8452,G__8453,G__8454,G__8455) : cljs.core.apply.call(null,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445,G__8446,G__8447,G__8448,G__8449,G__8450,G__8451,G__8452,G__8453,G__8454,G__8455));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8460 = o;
if(G__8460){
var bit__6919__auto__ = (G__8460.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__6919__auto__) || (G__8460.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8460.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8460);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8460);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__6226__auto__ = !((o == null));
if(and__6226__auto__){
var G__8464 = o;
if(G__8464){
var bit__6919__auto__ = (G__8464.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6919__auto__) || (G__8464.cljs$core$IMeta$)){
return true;
} else {
if((!G__8464.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8464);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8464);
}
} else {
return and__6226__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__8467__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8468 = ret;
var G__8469 = cljs.core.first(ks);
var G__8470 = cljs.core.next(ks);
coll = G__8468;
k = G__8469;
ks = G__8470;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8467 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8471__i = 0, G__8471__a = new Array(arguments.length -  2);
while (G__8471__i < G__8471__a.length) {G__8471__a[G__8471__i] = arguments[G__8471__i + 2]; ++G__8471__i;}
  ks = new cljs.core.IndexedSeq(G__8471__a,0);
} 
return G__8467__delegate.call(this,coll,k,ks);};
G__8467.cljs$lang$maxFixedArity = 2;
G__8467.cljs$lang$applyTo = (function (arglist__8472){
var coll = cljs.core.first(arglist__8472);
arglist__8472 = cljs.core.next(arglist__8472);
var k = cljs.core.first(arglist__8472);
var ks = cljs.core.rest(arglist__8472);
return G__8467__delegate(coll,k,ks);
});
G__8467.cljs$core$IFn$_invoke$arity$variadic = G__8467__delegate;
return G__8467;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__8473 = null;
if (arguments.length > 2) {
var G__8474__i = 0, G__8474__a = new Array(arguments.length -  2);
while (G__8474__i < G__8474__a.length) {G__8474__a[G__8474__i] = arguments[G__8474__i + 2]; ++G__8474__i;}
G__8473 = new cljs.core.IndexedSeq(G__8474__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8476 = x;
if(G__8476){
var bit__6919__auto__ = (G__8476.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__6919__auto__) || (G__8476.cljs$core$ICollection$)){
return true;
} else {
if((!G__8476.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8476);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8476);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8478 = x;
if(G__8478){
var bit__6919__auto__ = (G__8478.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__6919__auto__) || (G__8478.cljs$core$ISet$)){
return true;
} else {
if((!G__8478.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8478);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8478);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__8480 = x;
if(G__8480){
var bit__6919__auto__ = (G__8480.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__6919__auto__) || (G__8480.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8480);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__8482 = x;
if(G__8482){
var bit__6919__auto__ = (G__8482.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__6919__auto__) || (G__8482.cljs$core$ISequential$)){
return true;
} else {
if((!G__8482.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8482);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8482);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__8484 = x;
if(G__8484){
var bit__6919__auto__ = (G__8484.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__6919__auto__) || (G__8484.cljs$core$ISorted$)){
return true;
} else {
if((!G__8484.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8484);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8484);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__8486 = x;
if(G__8486){
var bit__6919__auto__ = (G__8486.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6919__auto__) || (G__8486.cljs$core$IReduce$)){
return true;
} else {
if((!G__8486.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8486);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8486);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8488 = x;
if(G__8488){
var bit__6919__auto__ = (G__8488.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6919__auto__) || (G__8488.cljs$core$IMap$)){
return true;
} else {
if((!G__8488.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8488);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8488);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__8490 = x;
if(G__8490){
var bit__6919__auto__ = (G__8490.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__6919__auto__) || (G__8490.cljs$core$IVector$)){
return true;
} else {
if((!G__8490.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8490);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8490);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__8492 = x;
if(G__8492){
var bit__6912__auto__ = (G__8492.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__6912__auto__) || (G__8492.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj8498 = {};
return obj8498;
});
var cljs$core$js_obj__1 = (function() { 
var G__8501__delegate = function (keyvals){
var G__8499 = goog.object.create;
var G__8500 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8499,G__8500) : cljs.core.apply.call(null,G__8499,G__8500));
};
var G__8501 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8502__i = 0, G__8502__a = new Array(arguments.length -  0);
while (G__8502__i < G__8502__a.length) {G__8502__a[G__8502__i] = arguments[G__8502__i + 0]; ++G__8502__i;}
  keyvals = new cljs.core.IndexedSeq(G__8502__a,0);
} 
return G__8501__delegate.call(this,keyvals);};
G__8501.cljs$lang$maxFixedArity = 0;
G__8501.cljs$lang$applyTo = (function (arglist__8503){
var keyvals = cljs.core.seq(arglist__8503);
return G__8501__delegate(keyvals);
});
G__8501.cljs$core$IFn$_invoke$arity$variadic = G__8501__delegate;
return G__8501;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__8504 = null;
if (arguments.length > 0) {
var G__8505__i = 0, G__8505__a = new Array(arguments.length -  0);
while (G__8505__i < G__8505__a.length) {G__8505__a[G__8505__i] = arguments[G__8505__i + 0]; ++G__8505__i;}
G__8504 = new cljs.core.IndexedSeq(G__8505__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__8508_8510 = obj;
var G__8509_8511 = ((function (G__8508_8510,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8508_8510,keys))
;
goog.object.forEach(G__8508_8510,G__8509_8511);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8512 = (i__$1 + (1));
var G__8513 = (j__$1 + (1));
var G__8514 = (len__$1 - (1));
i__$1 = G__8512;
j__$1 = G__8513;
len__$1 = G__8514;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8515 = (i__$1 - (1));
var G__8516 = (j__$1 - (1));
var G__8517 = (len__$1 - (1));
i__$1 = G__8515;
j__$1 = G__8516;
len__$1 = G__8517;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8519 = {};
return obj8519;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8521 = s;
if(G__8521){
var bit__6919__auto__ = (G__8521.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6919__auto__) || (G__8521.cljs$core$ISeq$)){
return true;
} else {
if((!G__8521.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8521);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8521);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__8523 = s;
if(G__8523){
var bit__6919__auto__ = (G__8523.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6919__auto__) || (G__8523.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8523.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8523);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8523);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__6238__auto__ = cljs.core.fn_QMARK_(f);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var G__8527 = f;
if(G__8527){
var bit__6919__auto__ = (G__8527.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__6919__auto__) || (G__8527.cljs$core$IFn$)){
return true;
} else {
if((!G__8527.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8527);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8527);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8540 = n;
return isNaN(G__8540);
})())) && (!((n === Infinity))) && (((function (){var G__8541 = n;
return parseFloat(G__8541);
})() === (function (){var G__8542 = n;
var G__8543 = (10);
return parseInt(G__8542,G__8543);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__8544__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8545 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8546 = etc;
s = G__8545;
xs = G__8546;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8544 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8547__i = 0, G__8547__a = new Array(arguments.length -  2);
while (G__8547__i < G__8547__a.length) {G__8547__a[G__8547__i] = arguments[G__8547__i + 2]; ++G__8547__i;}
  more = new cljs.core.IndexedSeq(G__8547__a,0);
} 
return G__8544__delegate.call(this,x,y,more);};
G__8544.cljs$lang$maxFixedArity = 2;
G__8544.cljs$lang$applyTo = (function (arglist__8548){
var x = cljs.core.first(arglist__8548);
arglist__8548 = cljs.core.next(arglist__8548);
var y = cljs.core.first(arglist__8548);
var more = cljs.core.rest(arglist__8548);
return G__8544__delegate(x,y,more);
});
G__8544.cljs$core$IFn$_invoke$arity$variadic = G__8544__delegate;
return G__8544;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__8549 = null;
if (arguments.length > 2) {
var G__8550__i = 0, G__8550__a = new Array(arguments.length -  2);
while (G__8550__i < G__8550__a.length) {G__8550__a[G__8550__i] = arguments[G__8550__i + 2]; ++G__8550__i;}
G__8549 = new cljs.core.IndexedSeq(G__8550__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8554 = x;
if(G__8554){
var bit__6912__auto__ = (G__8554.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__6912__auto__) || (G__8554.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8555 = x;
var G__8556 = y;
return goog.array.defaultCompare(G__8555,G__8556);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8561 = xs;
var G__8562 = ys;
var G__8563 = len;
var G__8564 = (n + (1));
xs = G__8561;
ys = G__8562;
len = G__8563;
n = G__8564;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8569 = x;
var G__8570 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8569,G__8570) : f.call(null,G__8569,G__8570));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8571 = y;
var G__8572 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8571,G__8572) : f.call(null,G__8571,G__8572));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8578 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8578) : cljs.core.to_array.call(null,G__8578));
})();
var G__8579_8581 = a;
var G__8580_8582 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8579_8581,G__8580_8582);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8588 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8588) : keyfn.call(null,G__8588));
})(),(function (){var G__8589 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8589) : keyfn.call(null,G__8589));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__8595 = f;
var G__8596 = cljs.core.first(s);
var G__8597 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8595,G__8596,G__8597) : cljs.core.reduce.call(null,G__8595,G__8596,G__8597));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8598 = val__$1;
var G__8599 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8598,G__8599) : f.call(null,G__8598,G__8599));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8600 = nval;
var G__8601 = cljs.core.next(coll__$1);
val__$1 = G__8600;
coll__$1 = G__8601;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__8605 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8605) : cljs.core.to_array.call(null,G__8605));
})();
var G__8606_8608 = a;
goog.array.shuffle(G__8606_8608);

var G__8607 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8607) : cljs.core.vec.call(null,G__8607));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__8611 = coll;
if(G__8611){
var bit__6912__auto__ = (G__8611.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6912__auto__) || (G__8611.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__8612 = coll;
if(G__8612){
var bit__6912__auto__ = (G__8612.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6912__auto__) || (G__8612.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__8621 = null;
var G__8621__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8621__1 = (function (x){
var G__8618 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8618) : cf.call(null,G__8618));
});
var G__8621__2 = (function (x,y){
var G__8619 = x;
var G__8620 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8619,G__8620) : f.call(null,G__8619,G__8620));
});
G__8621 = function(x,y){
switch(arguments.length){
case 0:
return G__8621__0.call(this);
case 1:
return G__8621__1.call(this,x);
case 2:
return G__8621__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8621.cljs$core$IFn$_invoke$arity$0 = G__8621__0;
G__8621.cljs$core$IFn$_invoke$arity$1 = G__8621__1;
G__8621.cljs$core$IFn$_invoke$arity$2 = G__8621__2;
return G__8621;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8628 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8628) : xform.call(null,G__8628));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8629 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8629) : f__$1.call(null,G__8629));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__8630__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__8630 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8631__i = 0, G__8631__a = new Array(arguments.length -  2);
while (G__8631__i < G__8631__a.length) {G__8631__a[G__8631__i] = arguments[G__8631__i + 2]; ++G__8631__i;}
  more = new cljs.core.IndexedSeq(G__8631__a,0);
} 
return G__8630__delegate.call(this,x,y,more);};
G__8630.cljs$lang$maxFixedArity = 2;
G__8630.cljs$lang$applyTo = (function (arglist__8632){
var x = cljs.core.first(arglist__8632);
arglist__8632 = cljs.core.next(arglist__8632);
var y = cljs.core.first(arglist__8632);
var more = cljs.core.rest(arglist__8632);
return G__8630__delegate(x,y,more);
});
G__8630.cljs$core$IFn$_invoke$arity$variadic = G__8630__delegate;
return G__8630;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__8633 = null;
if (arguments.length > 2) {
var G__8634__i = 0, G__8634__a = new Array(arguments.length -  2);
while (G__8634__i < G__8634__a.length) {G__8634__a[G__8634__i] = arguments[G__8634__i + 2]; ++G__8634__i;}
G__8633 = new cljs.core.IndexedSeq(G__8634__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8633);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__8635__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__8635 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8636__i = 0, G__8636__a = new Array(arguments.length -  2);
while (G__8636__i < G__8636__a.length) {G__8636__a[G__8636__i] = arguments[G__8636__i + 2]; ++G__8636__i;}
  more = new cljs.core.IndexedSeq(G__8636__a,0);
} 
return G__8635__delegate.call(this,x,y,more);};
G__8635.cljs$lang$maxFixedArity = 2;
G__8635.cljs$lang$applyTo = (function (arglist__8637){
var x = cljs.core.first(arglist__8637);
arglist__8637 = cljs.core.next(arglist__8637);
var y = cljs.core.first(arglist__8637);
var more = cljs.core.rest(arglist__8637);
return G__8635__delegate(x,y,more);
});
G__8635.cljs$core$IFn$_invoke$arity$variadic = G__8635__delegate;
return G__8635;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__8638 = null;
if (arguments.length > 2) {
var G__8639__i = 0, G__8639__a = new Array(arguments.length -  2);
while (G__8639__i < G__8639__a.length) {G__8639__a[G__8639__i] = arguments[G__8639__i + 2]; ++G__8639__i;}
G__8638 = new cljs.core.IndexedSeq(G__8639__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__8640__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__8640 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8641__i = 0, G__8641__a = new Array(arguments.length -  2);
while (G__8641__i < G__8641__a.length) {G__8641__a[G__8641__i] = arguments[G__8641__i + 2]; ++G__8641__i;}
  more = new cljs.core.IndexedSeq(G__8641__a,0);
} 
return G__8640__delegate.call(this,x,y,more);};
G__8640.cljs$lang$maxFixedArity = 2;
G__8640.cljs$lang$applyTo = (function (arglist__8642){
var x = cljs.core.first(arglist__8642);
arglist__8642 = cljs.core.next(arglist__8642);
var y = cljs.core.first(arglist__8642);
var more = cljs.core.rest(arglist__8642);
return G__8640__delegate(x,y,more);
});
G__8640.cljs$core$IFn$_invoke$arity$variadic = G__8640__delegate;
return G__8640;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__8643 = null;
if (arguments.length > 2) {
var G__8644__i = 0, G__8644__a = new Array(arguments.length -  2);
while (G__8644__i < G__8644__a.length) {G__8644__a[G__8644__i] = arguments[G__8644__i + 2]; ++G__8644__i;}
G__8643 = new cljs.core.IndexedSeq(G__8644__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__8649__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8649 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8650__i = 0, G__8650__a = new Array(arguments.length -  2);
while (G__8650__i < G__8650__a.length) {G__8650__a[G__8650__i] = arguments[G__8650__i + 2]; ++G__8650__i;}
  more = new cljs.core.IndexedSeq(G__8650__a,0);
} 
return G__8649__delegate.call(this,x,y,more);};
G__8649.cljs$lang$maxFixedArity = 2;
G__8649.cljs$lang$applyTo = (function (arglist__8651){
var x = cljs.core.first(arglist__8651);
arglist__8651 = cljs.core.next(arglist__8651);
var y = cljs.core.first(arglist__8651);
var more = cljs.core.rest(arglist__8651);
return G__8649__delegate(x,y,more);
});
G__8649.cljs$core$IFn$_invoke$arity$variadic = G__8649__delegate;
return G__8649;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__8652 = null;
if (arguments.length > 2) {
var G__8653__i = 0, G__8653__a = new Array(arguments.length -  2);
while (G__8653__i < G__8653__a.length) {G__8653__a[G__8653__i] = arguments[G__8653__i + 2]; ++G__8653__i;}
G__8652 = new cljs.core.IndexedSeq(G__8653__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__8654__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8655 = y;
var G__8656 = cljs.core.first(more);
var G__8657 = cljs.core.next(more);
x = G__8655;
y = G__8656;
more = G__8657;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8654 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8658__i = 0, G__8658__a = new Array(arguments.length -  2);
while (G__8658__i < G__8658__a.length) {G__8658__a[G__8658__i] = arguments[G__8658__i + 2]; ++G__8658__i;}
  more = new cljs.core.IndexedSeq(G__8658__a,0);
} 
return G__8654__delegate.call(this,x,y,more);};
G__8654.cljs$lang$maxFixedArity = 2;
G__8654.cljs$lang$applyTo = (function (arglist__8659){
var x = cljs.core.first(arglist__8659);
arglist__8659 = cljs.core.next(arglist__8659);
var y = cljs.core.first(arglist__8659);
var more = cljs.core.rest(arglist__8659);
return G__8654__delegate(x,y,more);
});
G__8654.cljs$core$IFn$_invoke$arity$variadic = G__8654__delegate;
return G__8654;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__8660 = null;
if (arguments.length > 2) {
var G__8661__i = 0, G__8661__a = new Array(arguments.length -  2);
while (G__8661__i < G__8661__a.length) {G__8661__a[G__8661__i] = arguments[G__8661__i + 2]; ++G__8661__i;}
G__8660 = new cljs.core.IndexedSeq(G__8661__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__8662__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8663 = y;
var G__8664 = cljs.core.first(more);
var G__8665 = cljs.core.next(more);
x = G__8663;
y = G__8664;
more = G__8665;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8662 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8666__i = 0, G__8666__a = new Array(arguments.length -  2);
while (G__8666__i < G__8666__a.length) {G__8666__a[G__8666__i] = arguments[G__8666__i + 2]; ++G__8666__i;}
  more = new cljs.core.IndexedSeq(G__8666__a,0);
} 
return G__8662__delegate.call(this,x,y,more);};
G__8662.cljs$lang$maxFixedArity = 2;
G__8662.cljs$lang$applyTo = (function (arglist__8667){
var x = cljs.core.first(arglist__8667);
arglist__8667 = cljs.core.next(arglist__8667);
var y = cljs.core.first(arglist__8667);
var more = cljs.core.rest(arglist__8667);
return G__8662__delegate(x,y,more);
});
G__8662.cljs$core$IFn$_invoke$arity$variadic = G__8662__delegate;
return G__8662;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__8668 = null;
if (arguments.length > 2) {
var G__8669__i = 0, G__8669__a = new Array(arguments.length -  2);
while (G__8669__i < G__8669__a.length) {G__8669__a[G__8669__i] = arguments[G__8669__i + 2]; ++G__8669__i;}
G__8668 = new cljs.core.IndexedSeq(G__8669__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__8670__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8671 = y;
var G__8672 = cljs.core.first(more);
var G__8673 = cljs.core.next(more);
x = G__8671;
y = G__8672;
more = G__8673;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8670 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8674__i = 0, G__8674__a = new Array(arguments.length -  2);
while (G__8674__i < G__8674__a.length) {G__8674__a[G__8674__i] = arguments[G__8674__i + 2]; ++G__8674__i;}
  more = new cljs.core.IndexedSeq(G__8674__a,0);
} 
return G__8670__delegate.call(this,x,y,more);};
G__8670.cljs$lang$maxFixedArity = 2;
G__8670.cljs$lang$applyTo = (function (arglist__8675){
var x = cljs.core.first(arglist__8675);
arglist__8675 = cljs.core.next(arglist__8675);
var y = cljs.core.first(arglist__8675);
var more = cljs.core.rest(arglist__8675);
return G__8670__delegate(x,y,more);
});
G__8670.cljs$core$IFn$_invoke$arity$variadic = G__8670__delegate;
return G__8670;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__8676 = null;
if (arguments.length > 2) {
var G__8677__i = 0, G__8677__a = new Array(arguments.length -  2);
while (G__8677__i < G__8677__a.length) {G__8677__a[G__8677__i] = arguments[G__8677__i + 2]; ++G__8677__i;}
G__8676 = new cljs.core.IndexedSeq(G__8677__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__8678__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8679 = y;
var G__8680 = cljs.core.first(more);
var G__8681 = cljs.core.next(more);
x = G__8679;
y = G__8680;
more = G__8681;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8678 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8682__i = 0, G__8682__a = new Array(arguments.length -  2);
while (G__8682__i < G__8682__a.length) {G__8682__a[G__8682__i] = arguments[G__8682__i + 2]; ++G__8682__i;}
  more = new cljs.core.IndexedSeq(G__8682__a,0);
} 
return G__8678__delegate.call(this,x,y,more);};
G__8678.cljs$lang$maxFixedArity = 2;
G__8678.cljs$lang$applyTo = (function (arglist__8683){
var x = cljs.core.first(arglist__8683);
arglist__8683 = cljs.core.next(arglist__8683);
var y = cljs.core.first(arglist__8683);
var more = cljs.core.rest(arglist__8683);
return G__8678__delegate(x,y,more);
});
G__8678.cljs$core$IFn$_invoke$arity$variadic = G__8678__delegate;
return G__8678;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__8684 = null;
if (arguments.length > 2) {
var G__8685__i = 0, G__8685__a = new Array(arguments.length -  2);
while (G__8685__i < G__8685__a.length) {G__8685__a[G__8685__i] = arguments[G__8685__i + 2]; ++G__8685__i;}
G__8684 = new cljs.core.IndexedSeq(G__8685__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__6555__auto__ = x;
var y__6556__auto__ = y;
return ((x__6555__auto__ > y__6556__auto__) ? x__6555__auto__ : y__6556__auto__);
});
var cljs$core$max__3 = (function() { 
var G__8686__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__6555__auto__ = x;
var y__6556__auto__ = y;
return ((x__6555__auto__ > y__6556__auto__) ? x__6555__auto__ : y__6556__auto__);
})(),more);
};
var G__8686 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8687__i = 0, G__8687__a = new Array(arguments.length -  2);
while (G__8687__i < G__8687__a.length) {G__8687__a[G__8687__i] = arguments[G__8687__i + 2]; ++G__8687__i;}
  more = new cljs.core.IndexedSeq(G__8687__a,0);
} 
return G__8686__delegate.call(this,x,y,more);};
G__8686.cljs$lang$maxFixedArity = 2;
G__8686.cljs$lang$applyTo = (function (arglist__8688){
var x = cljs.core.first(arglist__8688);
arglist__8688 = cljs.core.next(arglist__8688);
var y = cljs.core.first(arglist__8688);
var more = cljs.core.rest(arglist__8688);
return G__8686__delegate(x,y,more);
});
G__8686.cljs$core$IFn$_invoke$arity$variadic = G__8686__delegate;
return G__8686;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__8689 = null;
if (arguments.length > 2) {
var G__8690__i = 0, G__8690__a = new Array(arguments.length -  2);
while (G__8690__i < G__8690__a.length) {G__8690__a[G__8690__i] = arguments[G__8690__i + 2]; ++G__8690__i;}
G__8689 = new cljs.core.IndexedSeq(G__8690__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__6562__auto__ = x;
var y__6563__auto__ = y;
return ((x__6562__auto__ < y__6563__auto__) ? x__6562__auto__ : y__6563__auto__);
});
var cljs$core$min__3 = (function() { 
var G__8691__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__6562__auto__ = x;
var y__6563__auto__ = y;
return ((x__6562__auto__ < y__6563__auto__) ? x__6562__auto__ : y__6563__auto__);
})(),more);
};
var G__8691 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8692__i = 0, G__8692__a = new Array(arguments.length -  2);
while (G__8692__i < G__8692__a.length) {G__8692__a[G__8692__i] = arguments[G__8692__i + 2]; ++G__8692__i;}
  more = new cljs.core.IndexedSeq(G__8692__a,0);
} 
return G__8691__delegate.call(this,x,y,more);};
G__8691.cljs$lang$maxFixedArity = 2;
G__8691.cljs$lang$applyTo = (function (arglist__8693){
var x = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var y = cljs.core.first(arglist__8693);
var more = cljs.core.rest(arglist__8693);
return G__8691__delegate(x,y,more);
});
G__8691.cljs$core$IFn$_invoke$arity$variadic = G__8691__delegate;
return G__8691;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__8694 = null;
if (arguments.length > 2) {
var G__8695__i = 0, G__8695__a = new Array(arguments.length -  2);
while (G__8695__i < G__8695__a.length) {G__8695__a[G__8695__i] = arguments[G__8695__i + 2]; ++G__8695__i;}
G__8694 = new cljs.core.IndexedSeq(G__8695__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__8696__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__8696 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8697__i = 0, G__8697__a = new Array(arguments.length -  2);
while (G__8697__i < G__8697__a.length) {G__8697__a[G__8697__i] = arguments[G__8697__i + 2]; ++G__8697__i;}
  more = new cljs.core.IndexedSeq(G__8697__a,0);
} 
return G__8696__delegate.call(this,x,y,more);};
G__8696.cljs$lang$maxFixedArity = 2;
G__8696.cljs$lang$applyTo = (function (arglist__8698){
var x = cljs.core.first(arglist__8698);
arglist__8698 = cljs.core.next(arglist__8698);
var y = cljs.core.first(arglist__8698);
var more = cljs.core.rest(arglist__8698);
return G__8696__delegate(x,y,more);
});
G__8696.cljs$core$IFn$_invoke$arity$variadic = G__8696__delegate;
return G__8696;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__8699 = null;
if (arguments.length > 2) {
var G__8700__i = 0, G__8700__a = new Array(arguments.length -  2);
while (G__8700__i < G__8700__a.length) {G__8700__a[G__8700__i] = arguments[G__8700__i + 2]; ++G__8700__i;}
G__8699 = new cljs.core.IndexedSeq(G__8700__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__8701__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__8701 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8702__i = 0, G__8702__a = new Array(arguments.length -  2);
while (G__8702__i < G__8702__a.length) {G__8702__a[G__8702__i] = arguments[G__8702__i + 2]; ++G__8702__i;}
  more = new cljs.core.IndexedSeq(G__8702__a,0);
} 
return G__8701__delegate.call(this,x,y,more);};
G__8701.cljs$lang$maxFixedArity = 2;
G__8701.cljs$lang$applyTo = (function (arglist__8703){
var x = cljs.core.first(arglist__8703);
arglist__8703 = cljs.core.next(arglist__8703);
var y = cljs.core.first(arglist__8703);
var more = cljs.core.rest(arglist__8703);
return G__8701__delegate(x,y,more);
});
G__8701.cljs$core$IFn$_invoke$arity$variadic = G__8701__delegate;
return G__8701;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__8704 = null;
if (arguments.length > 2) {
var G__8705__i = 0, G__8705__a = new Array(arguments.length -  2);
while (G__8705__i < G__8705__a.length) {G__8705__a[G__8705__i] = arguments[G__8705__i + 2]; ++G__8705__i;}
G__8704 = new cljs.core.IndexedSeq(G__8705__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__8710__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8710 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8711__i = 0, G__8711__a = new Array(arguments.length -  2);
while (G__8711__i < G__8711__a.length) {G__8711__a[G__8711__i] = arguments[G__8711__i + 2]; ++G__8711__i;}
  more = new cljs.core.IndexedSeq(G__8711__a,0);
} 
return G__8710__delegate.call(this,x,y,more);};
G__8710.cljs$lang$maxFixedArity = 2;
G__8710.cljs$lang$applyTo = (function (arglist__8712){
var x = cljs.core.first(arglist__8712);
arglist__8712 = cljs.core.next(arglist__8712);
var y = cljs.core.first(arglist__8712);
var more = cljs.core.rest(arglist__8712);
return G__8710__delegate(x,y,more);
});
G__8710.cljs$core$IFn$_invoke$arity$variadic = G__8710__delegate;
return G__8710;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__8713 = null;
if (arguments.length > 2) {
var G__8714__i = 0, G__8714__a = new Array(arguments.length -  2);
while (G__8714__i < G__8714__a.length) {G__8714__a[G__8714__i] = arguments[G__8714__i + 2]; ++G__8714__i;}
G__8713 = new cljs.core.IndexedSeq(G__8714__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__8715__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__8715 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8716__i = 0, G__8716__a = new Array(arguments.length -  2);
while (G__8716__i < G__8716__a.length) {G__8716__a[G__8716__i] = arguments[G__8716__i + 2]; ++G__8716__i;}
  more = new cljs.core.IndexedSeq(G__8716__a,0);
} 
return G__8715__delegate.call(this,x,y,more);};
G__8715.cljs$lang$maxFixedArity = 2;
G__8715.cljs$lang$applyTo = (function (arglist__8717){
var x = cljs.core.first(arglist__8717);
arglist__8717 = cljs.core.next(arglist__8717);
var y = cljs.core.first(arglist__8717);
var more = cljs.core.rest(arglist__8717);
return G__8715__delegate(x,y,more);
});
G__8715.cljs$core$IFn$_invoke$arity$variadic = G__8715__delegate;
return G__8715;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__8718 = null;
if (arguments.length > 2) {
var G__8719__i = 0, G__8719__a = new Array(arguments.length -  2);
while (G__8719__i < G__8719__a.length) {G__8719__a[G__8719__i] = arguments[G__8719__i + 2]; ++G__8719__i;}
G__8718 = new cljs.core.IndexedSeq(G__8719__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__8720__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__8720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8721__i = 0, G__8721__a = new Array(arguments.length -  2);
while (G__8721__i < G__8721__a.length) {G__8721__a[G__8721__i] = arguments[G__8721__i + 2]; ++G__8721__i;}
  more = new cljs.core.IndexedSeq(G__8721__a,0);
} 
return G__8720__delegate.call(this,x,y,more);};
G__8720.cljs$lang$maxFixedArity = 2;
G__8720.cljs$lang$applyTo = (function (arglist__8722){
var x = cljs.core.first(arglist__8722);
arglist__8722 = cljs.core.next(arglist__8722);
var y = cljs.core.first(arglist__8722);
var more = cljs.core.rest(arglist__8722);
return G__8720__delegate(x,y,more);
});
G__8720.cljs$core$IFn$_invoke$arity$variadic = G__8720__delegate;
return G__8720;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__8723 = null;
if (arguments.length > 2) {
var G__8724__i = 0, G__8724__a = new Array(arguments.length -  2);
while (G__8724__i < G__8724__a.length) {G__8724__a[G__8724__i] = arguments[G__8724__i + 2]; ++G__8724__i;}
G__8723 = new cljs.core.IndexedSeq(G__8724__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__8727 = x;
var G__8728 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8727,G__8728) : cljs.core.mod.call(null,G__8727,G__8728));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__8729__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__8729 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8730__i = 0, G__8730__a = new Array(arguments.length -  2);
while (G__8730__i < G__8730__a.length) {G__8730__a[G__8730__i] = arguments[G__8730__i + 2]; ++G__8730__i;}
  more = new cljs.core.IndexedSeq(G__8730__a,0);
} 
return G__8729__delegate.call(this,x,y,more);};
G__8729.cljs$lang$maxFixedArity = 2;
G__8729.cljs$lang$applyTo = (function (arglist__8731){
var x = cljs.core.first(arglist__8731);
arglist__8731 = cljs.core.next(arglist__8731);
var y = cljs.core.first(arglist__8731);
var more = cljs.core.rest(arglist__8731);
return G__8729__delegate(x,y,more);
});
G__8729.cljs$core$IFn$_invoke$arity$variadic = G__8729__delegate;
return G__8729;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__8732 = null;
if (arguments.length > 2) {
var G__8733__i = 0, G__8733__a = new Array(arguments.length -  2);
while (G__8733__i < G__8733__a.length) {G__8733__a[G__8733__i] = arguments[G__8733__i + 2]; ++G__8733__i;}
G__8732 = new cljs.core.IndexedSeq(G__8733__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__8734__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__8734 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8735__i = 0, G__8735__a = new Array(arguments.length -  2);
while (G__8735__i < G__8735__a.length) {G__8735__a[G__8735__i] = arguments[G__8735__i + 2]; ++G__8735__i;}
  more = new cljs.core.IndexedSeq(G__8735__a,0);
} 
return G__8734__delegate.call(this,x,y,more);};
G__8734.cljs$lang$maxFixedArity = 2;
G__8734.cljs$lang$applyTo = (function (arglist__8736){
var x = cljs.core.first(arglist__8736);
arglist__8736 = cljs.core.next(arglist__8736);
var y = cljs.core.first(arglist__8736);
var more = cljs.core.rest(arglist__8736);
return G__8734__delegate(x,y,more);
});
G__8734.cljs$core$IFn$_invoke$arity$variadic = G__8734__delegate;
return G__8734;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__8737 = null;
if (arguments.length > 2) {
var G__8738__i = 0, G__8738__a = new Array(arguments.length -  2);
while (G__8738__i < G__8738__a.length) {G__8738__a[G__8738__i] = arguments[G__8738__i + 2]; ++G__8738__i;}
G__8737 = new cljs.core.IndexedSeq(G__8738__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8737);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__8741 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8741) : Math.floor.call(null,G__8741));
} else {
var G__8742 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__8742) : Math.ceil.call(null,G__8742));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__8743__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__8743 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8744__i = 0, G__8744__a = new Array(arguments.length -  2);
while (G__8744__i < G__8744__a.length) {G__8744__a[G__8744__i] = arguments[G__8744__i + 2]; ++G__8744__i;}
  more = new cljs.core.IndexedSeq(G__8744__a,0);
} 
return G__8743__delegate.call(this,x,y,more);};
G__8743.cljs$lang$maxFixedArity = 2;
G__8743.cljs$lang$applyTo = (function (arglist__8745){
var x = cljs.core.first(arglist__8745);
arglist__8745 = cljs.core.next(arglist__8745);
var y = cljs.core.first(arglist__8745);
var more = cljs.core.rest(arglist__8745);
return G__8743__delegate(x,y,more);
});
G__8743.cljs$core$IFn$_invoke$arity$variadic = G__8743__delegate;
return G__8743;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__8746 = null;
if (arguments.length > 2) {
var G__8747__i = 0, G__8747__a = new Array(arguments.length -  2);
while (G__8747__i < G__8747__a.length) {G__8747__a[G__8747__i] = arguments[G__8747__i + 2]; ++G__8747__i;}
G__8746 = new cljs.core.IndexedSeq(G__8747__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__8748__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__8748 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8749__i = 0, G__8749__a = new Array(arguments.length -  2);
while (G__8749__i < G__8749__a.length) {G__8749__a[G__8749__i] = arguments[G__8749__i + 2]; ++G__8749__i;}
  more = new cljs.core.IndexedSeq(G__8749__a,0);
} 
return G__8748__delegate.call(this,x,y,more);};
G__8748.cljs$lang$maxFixedArity = 2;
G__8748.cljs$lang$applyTo = (function (arglist__8750){
var x = cljs.core.first(arglist__8750);
arglist__8750 = cljs.core.next(arglist__8750);
var y = cljs.core.first(arglist__8750);
var more = cljs.core.rest(arglist__8750);
return G__8748__delegate(x,y,more);
});
G__8748.cljs$core$IFn$_invoke$arity$variadic = G__8748__delegate;
return G__8748;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__8751 = null;
if (arguments.length > 2) {
var G__8752__i = 0, G__8752__a = new Array(arguments.length -  2);
while (G__8752__i < G__8752__a.length) {G__8752__a[G__8752__i] = arguments[G__8752__i + 2]; ++G__8752__i;}
G__8751 = new cljs.core.IndexedSeq(G__8752__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__8753__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__8753 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8754__i = 0, G__8754__a = new Array(arguments.length -  2);
while (G__8754__i < G__8754__a.length) {G__8754__a[G__8754__i] = arguments[G__8754__i + 2]; ++G__8754__i;}
  more = new cljs.core.IndexedSeq(G__8754__a,0);
} 
return G__8753__delegate.call(this,x,y,more);};
G__8753.cljs$lang$maxFixedArity = 2;
G__8753.cljs$lang$applyTo = (function (arglist__8755){
var x = cljs.core.first(arglist__8755);
arglist__8755 = cljs.core.next(arglist__8755);
var y = cljs.core.first(arglist__8755);
var more = cljs.core.rest(arglist__8755);
return G__8753__delegate(x,y,more);
});
G__8753.cljs$core$IFn$_invoke$arity$variadic = G__8753__delegate;
return G__8753;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__8756 = null;
if (arguments.length > 2) {
var G__8757__i = 0, G__8757__a = new Array(arguments.length -  2);
while (G__8757__i < G__8757__a.length) {G__8757__a[G__8757__i] = arguments[G__8757__i + 2]; ++G__8757__i;}
G__8756 = new cljs.core.IndexedSeq(G__8757__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__8758__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__8758 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8759__i = 0, G__8759__a = new Array(arguments.length -  2);
while (G__8759__i < G__8759__a.length) {G__8759__a[G__8759__i] = arguments[G__8759__i + 2]; ++G__8759__i;}
  more = new cljs.core.IndexedSeq(G__8759__a,0);
} 
return G__8758__delegate.call(this,x,y,more);};
G__8758.cljs$lang$maxFixedArity = 2;
G__8758.cljs$lang$applyTo = (function (arglist__8760){
var x = cljs.core.first(arglist__8760);
arglist__8760 = cljs.core.next(arglist__8760);
var y = cljs.core.first(arglist__8760);
var more = cljs.core.rest(arglist__8760);
return G__8758__delegate(x,y,more);
});
G__8758.cljs$core$IFn$_invoke$arity$variadic = G__8758__delegate;
return G__8758;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__8761 = null;
if (arguments.length > 2) {
var G__8762__i = 0, G__8762__a = new Array(arguments.length -  2);
while (G__8762__i < G__8762__a.length) {G__8762__a[G__8762__i] = arguments[G__8762__i + 2]; ++G__8762__i;}
G__8761 = new cljs.core.IndexedSeq(G__8762__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__8767__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8768 = y;
var G__8769 = cljs.core.first(more);
var G__8770 = cljs.core.next(more);
x = G__8768;
y = G__8769;
more = G__8770;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8767 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8771__i = 0, G__8771__a = new Array(arguments.length -  2);
while (G__8771__i < G__8771__a.length) {G__8771__a[G__8771__i] = arguments[G__8771__i + 2]; ++G__8771__i;}
  more = new cljs.core.IndexedSeq(G__8771__a,0);
} 
return G__8767__delegate.call(this,x,y,more);};
G__8767.cljs$lang$maxFixedArity = 2;
G__8767.cljs$lang$applyTo = (function (arglist__8772){
var x = cljs.core.first(arglist__8772);
arglist__8772 = cljs.core.next(arglist__8772);
var y = cljs.core.first(arglist__8772);
var more = cljs.core.rest(arglist__8772);
return G__8767__delegate(x,y,more);
});
G__8767.cljs$core$IFn$_invoke$arity$variadic = G__8767__delegate;
return G__8767;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__8773 = null;
if (arguments.length > 2) {
var G__8774__i = 0, G__8774__a = new Array(arguments.length -  2);
while (G__8774__i < G__8774__a.length) {G__8774__a[G__8774__i] = arguments[G__8774__i + 2]; ++G__8774__i;}
G__8773 = new cljs.core.IndexedSeq(G__8774__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__8775 = (n__$1 - (1));
var G__8776 = cljs.core.next(xs);
n__$1 = G__8775;
xs = G__8776;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__8780 = x;
return goog.string.buildString(G__8780);
}
});
var cljs$core$str__2 = (function() { 
var G__8781__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__8782 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__8783 = cljs.core.next(more);
sb = G__8782;
more = G__8783;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__8781 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__8784__i = 0, G__8784__a = new Array(arguments.length -  1);
while (G__8784__i < G__8784__a.length) {G__8784__a[G__8784__i] = arguments[G__8784__i + 1]; ++G__8784__i;}
  ys = new cljs.core.IndexedSeq(G__8784__a,0);
} 
return G__8781__delegate.call(this,x,ys);};
G__8781.cljs$lang$maxFixedArity = 1;
G__8781.cljs$lang$applyTo = (function (arglist__8785){
var x = cljs.core.first(arglist__8785);
var ys = cljs.core.rest(arglist__8785);
return G__8781__delegate(x,ys);
});
G__8781.cljs$core$IFn$_invoke$arity$variadic = G__8781__delegate;
return G__8781;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__8786 = null;
if (arguments.length > 1) {
var G__8787__i = 0, G__8787__a = new Array(arguments.length -  1);
while (G__8787__i < G__8787__a.length) {G__8787__a[G__8787__i] = arguments[G__8787__i + 1]; ++G__8787__i;}
G__8786 = new cljs.core.IndexedSeq(G__8787__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__8788 = cljs.core.next(xs);
var G__8789 = cljs.core.next(ys);
xs = G__8788;
ys = G__8789;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__8790 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__8791 = cljs.core.next(s);
res = G__8790;
s = G__8791;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__8796 = ((h + (cljs.core.hash((function (){var G__8794 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8794) : cljs.core.key.call(null,G__8794));
})()) ^ cljs.core.hash((function (){var G__8795 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8795) : cljs.core.val.call(null,G__8795));
})()))) % (4503599627370496));
var G__8797 = cljs.core.next(s);
h = G__8796;
s = G__8797;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__8798 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__8799 = cljs.core.next(s__$1);
h = G__8798;
s__$1 = G__8799;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__8810_8820 = cljs.core.seq(fn_map);
var chunk__8811_8821 = null;
var count__8812_8822 = (0);
var i__8813_8823 = (0);
while(true){
if((i__8813_8823 < count__8812_8822)){
var vec__8814_8824 = chunk__8811_8821.cljs$core$IIndexed$_nth$arity$2(null,i__8813_8823);
var key_name_8825 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8814_8824,(0),null);
var f_8826 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8814_8824,(1),null);
var str_name_8827 = (function (){var G__8815 = key_name_8825;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8815) : cljs.core.name.call(null,G__8815));
})();
(obj[str_name_8827] = f_8826);

var G__8828 = seq__8810_8820;
var G__8829 = chunk__8811_8821;
var G__8830 = count__8812_8822;
var G__8831 = (i__8813_8823 + (1));
seq__8810_8820 = G__8828;
chunk__8811_8821 = G__8829;
count__8812_8822 = G__8830;
i__8813_8823 = G__8831;
continue;
} else {
var temp__4126__auto___8832 = cljs.core.seq(seq__8810_8820);
if(temp__4126__auto___8832){
var seq__8810_8833__$1 = temp__4126__auto___8832;
if(cljs.core.chunked_seq_QMARK_(seq__8810_8833__$1)){
var c__7025__auto___8834 = (function (){var G__8816 = seq__8810_8833__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__8816) : cljs.core.chunk_first.call(null,G__8816));
})();
var G__8835 = (function (){var G__8817 = seq__8810_8833__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__8817) : cljs.core.chunk_rest.call(null,G__8817));
})();
var G__8836 = c__7025__auto___8834;
var G__8837 = cljs.core.count(c__7025__auto___8834);
var G__8838 = (0);
seq__8810_8820 = G__8835;
chunk__8811_8821 = G__8836;
count__8812_8822 = G__8837;
i__8813_8823 = G__8838;
continue;
} else {
var vec__8818_8839 = cljs.core.first(seq__8810_8833__$1);
var key_name_8840 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8818_8839,(0),null);
var f_8841 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8818_8839,(1),null);
var str_name_8842 = (function (){var G__8819 = key_name_8840;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8819) : cljs.core.name.call(null,G__8819));
})();
(obj[str_name_8842] = f_8841);

var G__8843 = cljs.core.next(seq__8810_8833__$1);
var G__8844 = null;
var G__8845 = (0);
var G__8846 = (0);
seq__8810_8820 = G__8843;
chunk__8811_8821 = G__8844;
count__8812_8822 = G__8845;
i__8813_8823 = G__8846;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__8848 = coll;
if(G__8848){
var bit__6919__auto__ = (G__8848.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__6919__auto__) || (G__8848.cljs$core$IReversible$)){
return true;
} else {
if((!G__8848.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8848);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8848);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__8849 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__8849;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__8850 = (i - (1));
var G__8851 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__8850;
r = G__8851;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__8852__i = 0, G__8852__a = new Array(arguments.length -  0);
while (G__8852__i < G__8852__a.length) {G__8852__a[G__8852__i] = arguments[G__8852__i + 0]; ++G__8852__i;}
  xs = new cljs.core.IndexedSeq(G__8852__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__8853){
var xs = cljs.core.seq(arglist__8853);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__6238__auto__ = (coll == null);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var G__8857 = coll;
if(G__8857){
var bit__6912__auto__ = (G__8857.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6912__auto__) || (G__8857.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__8859 = x;
if(G__8859){
var bit__6919__auto__ = (G__8859.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__6919__auto__) || (G__8859.cljs$core$IList$)){
return true;
} else {
if((!G__8859.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8859);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8859);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__6226__auto__ = cljs.core.not(a.ns);
if(and__6226__auto__){
return b.ns;
} else {
return and__6226__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8866 = a.ns;
var G__8867 = b.ns;
return goog.array.defaultCompare(G__8866,G__8867);
})();
if(((0) === nsc)){
var G__8868 = a.name;
var G__8869 = b.name;
return goog.array.defaultCompare(G__8868,G__8869);
} else {
return nsc;
}
}
} else {
var G__8870 = a.name;
var G__8871 = b.name;
return goog.array.defaultCompare(G__8870,G__8871);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__6659__auto__ = self__._hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__8873 = null;
var G__8873__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__8873__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__8873 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8873__2.call(this,self__,coll);
case 3:
return G__8873__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8873.cljs$core$IFn$_invoke$arity$2 = G__8873__2;
G__8873.cljs$core$IFn$_invoke$arity$3 = G__8873__3;
return G__8873;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args8872){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8872)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__8875 = x;
if(G__8875){
var bit__6912__auto__ = (G__8875.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6912__auto__) || (G__8875.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__8877 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8877) : cljs.core.name.call(null,G__8877));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__8878 = ls.sval();
ls = G__8878;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__8880 = s;
if(G__8880){
var bit__6912__auto__ = (G__8880.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__6912__auto__) || (G__8880.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__8881 = cljs.core.next(s__$1);
s__$1 = G__8881;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_8882 = (0);
var xs_8883 = cljs.core.seq(coll);
while(true){
if(xs_8883){
(ret[i_8882] = cljs.core.to_array(cljs.core.first(xs_8883)));

var G__8884 = (i_8882 + (1));
var G__8885 = cljs.core.next(xs_8883);
i_8882 = G__8884;
xs_8883 = G__8885;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8888 = (i + (1));
var G__8889 = cljs.core.next(s__$1);
i = G__8888;
s__$1 = G__8889;
continue;
} else {
return a;
}
break;
}
} else {
var n__7125__auto___8890 = size;
var i_8891 = (0);
while(true){
if((i_8891 < n__7125__auto___8890)){
(a[i_8891] = init_val_or_seq);

var G__8892 = (i_8891 + (1));
i_8891 = G__8892;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8895 = (i + (1));
var G__8896 = cljs.core.next(s__$1);
i = G__8895;
s__$1 = G__8896;
continue;
} else {
return a;
}
break;
}
} else {
var n__7125__auto___8897 = size;
var i_8898 = (0);
while(true){
if((i_8898 < n__7125__auto___8897)){
(a[i_8898] = init_val_or_seq);

var G__8899 = (i_8898 + (1));
i_8898 = G__8899;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8902 = (i + (1));
var G__8903 = cljs.core.next(s__$1);
i = G__8902;
s__$1 = G__8903;
continue;
} else {
return a;
}
break;
}
} else {
var n__7125__auto___8904 = size;
var i_8905 = (0);
while(true){
if((i_8905 < n__7125__auto___8904)){
(a[i_8905] = init_val_or_seq);

var G__8906 = (i_8905 + (1));
i_8905 = G__8906;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8909 = (i + (1));
var G__8910 = cljs.core.next(s__$1);
i = G__8909;
s__$1 = G__8910;
continue;
} else {
return a;
}
break;
}
} else {
var n__7125__auto___8911 = size;
var i_8912 = (0);
while(true){
if((i_8912 < n__7125__auto___8911)){
(a[i_8912] = init_val_or_seq);

var G__8913 = (i_8912 + (1));
i_8912 = G__8913;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__8914 = cljs.core.next(s__$1);
var G__8915 = (i - (1));
var G__8916 = (sum + (1));
s__$1 = G__8914;
i = G__8915;
sum = G__8916;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__8936__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__8936 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8937__i = 0, G__8937__a = new Array(arguments.length -  2);
while (G__8937__i < G__8937__a.length) {G__8937__a[G__8937__i] = arguments[G__8937__i + 2]; ++G__8937__i;}
  zs = new cljs.core.IndexedSeq(G__8937__a,0);
} 
return G__8936__delegate.call(this,x,y,zs);};
G__8936.cljs$lang$maxFixedArity = 2;
G__8936.cljs$lang$applyTo = (function (arglist__8938){
var x = cljs.core.first(arglist__8938);
arglist__8938 = cljs.core.next(arglist__8938);
var y = cljs.core.first(arglist__8938);
var zs = cljs.core.rest(arglist__8938);
return G__8936__delegate(x,y,zs);
});
G__8936.cljs$core$IFn$_invoke$arity$variadic = G__8936__delegate;
return G__8936;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__8939 = null;
if (arguments.length > 2) {
var G__8940__i = 0, G__8940__a = new Array(arguments.length -  2);
while (G__8940__i < G__8940__a.length) {G__8940__a[G__8940__i] = arguments[G__8940__i + 2]; ++G__8940__i;}
G__8939 = new cljs.core.IndexedSeq(G__8940__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__8941__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__8941 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__8942__i = 0, G__8942__a = new Array(arguments.length -  4);
while (G__8942__i < G__8942__a.length) {G__8942__a[G__8942__i] = arguments[G__8942__i + 4]; ++G__8942__i;}
  more = new cljs.core.IndexedSeq(G__8942__a,0);
} 
return G__8941__delegate.call(this,a,b,c,d,more);};
G__8941.cljs$lang$maxFixedArity = 4;
G__8941.cljs$lang$applyTo = (function (arglist__8943){
var a = cljs.core.first(arglist__8943);
arglist__8943 = cljs.core.next(arglist__8943);
var b = cljs.core.first(arglist__8943);
arglist__8943 = cljs.core.next(arglist__8943);
var c = cljs.core.first(arglist__8943);
arglist__8943 = cljs.core.next(arglist__8943);
var d = cljs.core.first(arglist__8943);
var more = cljs.core.rest(arglist__8943);
return G__8941__delegate(a,b,c,d,more);
});
G__8941.cljs$core$IFn$_invoke$arity$variadic = G__8941__delegate;
return G__8941;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__8944 = null;
if (arguments.length > 4) {
var G__8945__i = 0, G__8945__a = new Array(arguments.length -  4);
while (G__8945__i < G__8945__a.length) {G__8945__a[G__8945__i] = arguments[G__8945__i + 4]; ++G__8945__i;}
G__8944 = new cljs.core.IndexedSeq(G__8945__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__8944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__8946__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8947 = ntcoll;
var G__8948 = cljs.core.first(vals);
var G__8949 = cljs.core.next(vals);
tcoll = G__8947;
val = G__8948;
vals = G__8949;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8946 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8950__i = 0, G__8950__a = new Array(arguments.length -  2);
while (G__8950__i < G__8950__a.length) {G__8950__a[G__8950__i] = arguments[G__8950__i + 2]; ++G__8950__i;}
  vals = new cljs.core.IndexedSeq(G__8950__a,0);
} 
return G__8946__delegate.call(this,tcoll,val,vals);};
G__8946.cljs$lang$maxFixedArity = 2;
G__8946.cljs$lang$applyTo = (function (arglist__8951){
var tcoll = cljs.core.first(arglist__8951);
arglist__8951 = cljs.core.next(arglist__8951);
var val = cljs.core.first(arglist__8951);
var vals = cljs.core.rest(arglist__8951);
return G__8946__delegate(tcoll,val,vals);
});
G__8946.cljs$core$IFn$_invoke$arity$variadic = G__8946__delegate;
return G__8946;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__8952 = null;
if (arguments.length > 2) {
var G__8953__i = 0, G__8953__a = new Array(arguments.length -  2);
while (G__8953__i < G__8953__a.length) {G__8953__a[G__8953__i] = arguments[G__8953__i + 2]; ++G__8953__i;}
G__8952 = new cljs.core.IndexedSeq(G__8953__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__8954__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__8955 = ntcoll;
var G__8956 = cljs.core.first(kvs);
var G__8957 = cljs.core.second(kvs);
var G__8958 = cljs.core.nnext(kvs);
tcoll = G__8955;
key = G__8956;
val = G__8957;
kvs = G__8958;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8954 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8959__i = 0, G__8959__a = new Array(arguments.length -  3);
while (G__8959__i < G__8959__a.length) {G__8959__a[G__8959__i] = arguments[G__8959__i + 3]; ++G__8959__i;}
  kvs = new cljs.core.IndexedSeq(G__8959__a,0);
} 
return G__8954__delegate.call(this,tcoll,key,val,kvs);};
G__8954.cljs$lang$maxFixedArity = 3;
G__8954.cljs$lang$applyTo = (function (arglist__8960){
var tcoll = cljs.core.first(arglist__8960);
arglist__8960 = cljs.core.next(arglist__8960);
var key = cljs.core.first(arglist__8960);
arglist__8960 = cljs.core.next(arglist__8960);
var val = cljs.core.first(arglist__8960);
var kvs = cljs.core.rest(arglist__8960);
return G__8954__delegate(tcoll,key,val,kvs);
});
G__8954.cljs$core$IFn$_invoke$arity$variadic = G__8954__delegate;
return G__8954;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__8961 = null;
if (arguments.length > 3) {
var G__8962__i = 0, G__8962__a = new Array(arguments.length -  3);
while (G__8962__i < G__8962__a.length) {G__8962__a[G__8962__i] = arguments[G__8962__i + 3]; ++G__8962__i;}
G__8961 = new cljs.core.IndexedSeq(G__8962__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__8961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__8963__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__8964 = ntcoll;
var G__8965 = cljs.core.first(ks);
var G__8966 = cljs.core.next(ks);
tcoll = G__8964;
key = G__8965;
ks = G__8966;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8963 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8967__i = 0, G__8967__a = new Array(arguments.length -  2);
while (G__8967__i < G__8967__a.length) {G__8967__a[G__8967__i] = arguments[G__8967__i + 2]; ++G__8967__i;}
  ks = new cljs.core.IndexedSeq(G__8967__a,0);
} 
return G__8963__delegate.call(this,tcoll,key,ks);};
G__8963.cljs$lang$maxFixedArity = 2;
G__8963.cljs$lang$applyTo = (function (arglist__8968){
var tcoll = cljs.core.first(arglist__8968);
arglist__8968 = cljs.core.next(arglist__8968);
var key = cljs.core.first(arglist__8968);
var ks = cljs.core.rest(arglist__8968);
return G__8963__delegate(tcoll,key,ks);
});
G__8963.cljs$core$IFn$_invoke$arity$variadic = G__8963__delegate;
return G__8963;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__8969 = null;
if (arguments.length > 2) {
var G__8970__i = 0, G__8970__a = new Array(arguments.length -  2);
while (G__8970__i < G__8970__a.length) {G__8970__a[G__8970__i] = arguments[G__8970__i + 2]; ++G__8970__i;}
G__8969 = new cljs.core.IndexedSeq(G__8970__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__8969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__8971__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8972 = ntcoll;
var G__8973 = cljs.core.first(vals);
var G__8974 = cljs.core.next(vals);
tcoll = G__8972;
val = G__8973;
vals = G__8974;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8971 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8975__i = 0, G__8975__a = new Array(arguments.length -  2);
while (G__8975__i < G__8975__a.length) {G__8975__a[G__8975__i] = arguments[G__8975__i + 2]; ++G__8975__i;}
  vals = new cljs.core.IndexedSeq(G__8975__a,0);
} 
return G__8971__delegate.call(this,tcoll,val,vals);};
G__8971.cljs$lang$maxFixedArity = 2;
G__8971.cljs$lang$applyTo = (function (arglist__8976){
var tcoll = cljs.core.first(arglist__8976);
arglist__8976 = cljs.core.next(arglist__8976);
var val = cljs.core.first(arglist__8976);
var vals = cljs.core.rest(arglist__8976);
return G__8971__delegate(tcoll,val,vals);
});
G__8971.cljs$core$IFn$_invoke$arity$variadic = G__8971__delegate;
return G__8971;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__8977 = null;
if (arguments.length > 2) {
var G__8978__i = 0, G__8978__a = new Array(arguments.length -  2);
while (G__8978__i < G__8978__a.length) {G__8978__a[G__8978__i] = arguments[G__8978__i + 2]; ++G__8978__i;}
G__8977 = new cljs.core.IndexedSeq(G__8978__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a7169 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a7169);
} else {
var G__9189 = a7169;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9189) : f.call(null,G__9189));
}
} else {
var b7170 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a7169,b7170);
} else {
var G__9190 = a7169;
var G__9191 = b7170;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9190,G__9191) : f.call(null,G__9190,G__9191));
}
} else {
var c7171 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a7169,b7170,c7171);
} else {
var G__9192 = a7169;
var G__9193 = b7170;
var G__9194 = c7171;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9192,G__9193,G__9194) : f.call(null,G__9192,G__9193,G__9194));
}
} else {
var d7172 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a7169,b7170,c7171,d7172);
} else {
var G__9195 = a7169;
var G__9196 = b7170;
var G__9197 = c7171;
var G__9198 = d7172;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9195,G__9196,G__9197,G__9198) : f.call(null,G__9195,G__9196,G__9197,G__9198));
}
} else {
var e7173 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a7169,b7170,c7171,d7172,e7173);
} else {
var G__9199 = a7169;
var G__9200 = b7170;
var G__9201 = c7171;
var G__9202 = d7172;
var G__9203 = e7173;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9199,G__9200,G__9201,G__9202,G__9203) : f.call(null,G__9199,G__9200,G__9201,G__9202,G__9203));
}
} else {
var f7174 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a7169,b7170,c7171,d7172,e7173,f7174);
} else {
var G__9204 = a7169;
var G__9205 = b7170;
var G__9206 = c7171;
var G__9207 = d7172;
var G__9208 = e7173;
var G__9209 = f7174;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9204,G__9205,G__9206,G__9207,G__9208,G__9209) : f.call(null,G__9204,G__9205,G__9206,G__9207,G__9208,G__9209));
}
} else {
var g7175 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a7169,b7170,c7171,d7172,e7173,f7174,g7175);
} else {
var G__9210 = a7169;
var G__9211 = b7170;
var G__9212 = c7171;
var G__9213 = d7172;
var G__9214 = e7173;
var G__9215 = f7174;
var G__9216 = g7175;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__9210,G__9211,G__9212,G__9213,G__9214,G__9215,G__9216) : f.call(null,G__9210,G__9211,G__9212,G__9213,G__9214,G__9215,G__9216));
}
} else {
var h7176 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176);
} else {
var G__9217 = a7169;
var G__9218 = b7170;
var G__9219 = c7171;
var G__9220 = d7172;
var G__9221 = e7173;
var G__9222 = f7174;
var G__9223 = g7175;
var G__9224 = h7176;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__9217,G__9218,G__9219,G__9220,G__9221,G__9222,G__9223,G__9224) : f.call(null,G__9217,G__9218,G__9219,G__9220,G__9221,G__9222,G__9223,G__9224));
}
} else {
var i7177 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177);
} else {
var G__9225 = a7169;
var G__9226 = b7170;
var G__9227 = c7171;
var G__9228 = d7172;
var G__9229 = e7173;
var G__9230 = f7174;
var G__9231 = g7175;
var G__9232 = h7176;
var G__9233 = i7177;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9225,G__9226,G__9227,G__9228,G__9229,G__9230,G__9231,G__9232,G__9233) : f.call(null,G__9225,G__9226,G__9227,G__9228,G__9229,G__9230,G__9231,G__9232,G__9233));
}
} else {
var j7178 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178);
} else {
var G__9234 = a7169;
var G__9235 = b7170;
var G__9236 = c7171;
var G__9237 = d7172;
var G__9238 = e7173;
var G__9239 = f7174;
var G__9240 = g7175;
var G__9241 = h7176;
var G__9242 = i7177;
var G__9243 = j7178;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9234,G__9235,G__9236,G__9237,G__9238,G__9239,G__9240,G__9241,G__9242,G__9243) : f.call(null,G__9234,G__9235,G__9236,G__9237,G__9238,G__9239,G__9240,G__9241,G__9242,G__9243));
}
} else {
var k7179 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179);
} else {
var G__9244 = a7169;
var G__9245 = b7170;
var G__9246 = c7171;
var G__9247 = d7172;
var G__9248 = e7173;
var G__9249 = f7174;
var G__9250 = g7175;
var G__9251 = h7176;
var G__9252 = i7177;
var G__9253 = j7178;
var G__9254 = k7179;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9244,G__9245,G__9246,G__9247,G__9248,G__9249,G__9250,G__9251,G__9252,G__9253,G__9254) : f.call(null,G__9244,G__9245,G__9246,G__9247,G__9248,G__9249,G__9250,G__9251,G__9252,G__9253,G__9254));
}
} else {
var l7180 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180);
} else {
var G__9255 = a7169;
var G__9256 = b7170;
var G__9257 = c7171;
var G__9258 = d7172;
var G__9259 = e7173;
var G__9260 = f7174;
var G__9261 = g7175;
var G__9262 = h7176;
var G__9263 = i7177;
var G__9264 = j7178;
var G__9265 = k7179;
var G__9266 = l7180;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9255,G__9256,G__9257,G__9258,G__9259,G__9260,G__9261,G__9262,G__9263,G__9264,G__9265,G__9266) : f.call(null,G__9255,G__9256,G__9257,G__9258,G__9259,G__9260,G__9261,G__9262,G__9263,G__9264,G__9265,G__9266));
}
} else {
var m7181 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181);
} else {
var G__9267 = a7169;
var G__9268 = b7170;
var G__9269 = c7171;
var G__9270 = d7172;
var G__9271 = e7173;
var G__9272 = f7174;
var G__9273 = g7175;
var G__9274 = h7176;
var G__9275 = i7177;
var G__9276 = j7178;
var G__9277 = k7179;
var G__9278 = l7180;
var G__9279 = m7181;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9267,G__9268,G__9269,G__9270,G__9271,G__9272,G__9273,G__9274,G__9275,G__9276,G__9277,G__9278,G__9279) : f.call(null,G__9267,G__9268,G__9269,G__9270,G__9271,G__9272,G__9273,G__9274,G__9275,G__9276,G__9277,G__9278,G__9279));
}
} else {
var n7182 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182);
} else {
var G__9280 = a7169;
var G__9281 = b7170;
var G__9282 = c7171;
var G__9283 = d7172;
var G__9284 = e7173;
var G__9285 = f7174;
var G__9286 = g7175;
var G__9287 = h7176;
var G__9288 = i7177;
var G__9289 = j7178;
var G__9290 = k7179;
var G__9291 = l7180;
var G__9292 = m7181;
var G__9293 = n7182;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9280,G__9281,G__9282,G__9283,G__9284,G__9285,G__9286,G__9287,G__9288,G__9289,G__9290,G__9291,G__9292,G__9293) : f.call(null,G__9280,G__9281,G__9282,G__9283,G__9284,G__9285,G__9286,G__9287,G__9288,G__9289,G__9290,G__9291,G__9292,G__9293));
}
} else {
var o7183 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182,o7183);
} else {
var G__9294 = a7169;
var G__9295 = b7170;
var G__9296 = c7171;
var G__9297 = d7172;
var G__9298 = e7173;
var G__9299 = f7174;
var G__9300 = g7175;
var G__9301 = h7176;
var G__9302 = i7177;
var G__9303 = j7178;
var G__9304 = k7179;
var G__9305 = l7180;
var G__9306 = m7181;
var G__9307 = n7182;
var G__9308 = o7183;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9294,G__9295,G__9296,G__9297,G__9298,G__9299,G__9300,G__9301,G__9302,G__9303,G__9304,G__9305,G__9306,G__9307,G__9308) : f.call(null,G__9294,G__9295,G__9296,G__9297,G__9298,G__9299,G__9300,G__9301,G__9302,G__9303,G__9304,G__9305,G__9306,G__9307,G__9308));
}
} else {
var p7184 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182,o7183,p7184);
} else {
var G__9309 = a7169;
var G__9310 = b7170;
var G__9311 = c7171;
var G__9312 = d7172;
var G__9313 = e7173;
var G__9314 = f7174;
var G__9315 = g7175;
var G__9316 = h7176;
var G__9317 = i7177;
var G__9318 = j7178;
var G__9319 = k7179;
var G__9320 = l7180;
var G__9321 = m7181;
var G__9322 = n7182;
var G__9323 = o7183;
var G__9324 = p7184;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9309,G__9310,G__9311,G__9312,G__9313,G__9314,G__9315,G__9316,G__9317,G__9318,G__9319,G__9320,G__9321,G__9322,G__9323,G__9324) : f.call(null,G__9309,G__9310,G__9311,G__9312,G__9313,G__9314,G__9315,G__9316,G__9317,G__9318,G__9319,G__9320,G__9321,G__9322,G__9323,G__9324));
}
} else {
var q7185 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182,o7183,p7184,q7185);
} else {
var G__9325 = a7169;
var G__9326 = b7170;
var G__9327 = c7171;
var G__9328 = d7172;
var G__9329 = e7173;
var G__9330 = f7174;
var G__9331 = g7175;
var G__9332 = h7176;
var G__9333 = i7177;
var G__9334 = j7178;
var G__9335 = k7179;
var G__9336 = l7180;
var G__9337 = m7181;
var G__9338 = n7182;
var G__9339 = o7183;
var G__9340 = p7184;
var G__9341 = q7185;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9325,G__9326,G__9327,G__9328,G__9329,G__9330,G__9331,G__9332,G__9333,G__9334,G__9335,G__9336,G__9337,G__9338,G__9339,G__9340,G__9341) : f.call(null,G__9325,G__9326,G__9327,G__9328,G__9329,G__9330,G__9331,G__9332,G__9333,G__9334,G__9335,G__9336,G__9337,G__9338,G__9339,G__9340,G__9341));
}
} else {
var r7186 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182,o7183,p7184,q7185,r7186);
} else {
var G__9342 = a7169;
var G__9343 = b7170;
var G__9344 = c7171;
var G__9345 = d7172;
var G__9346 = e7173;
var G__9347 = f7174;
var G__9348 = g7175;
var G__9349 = h7176;
var G__9350 = i7177;
var G__9351 = j7178;
var G__9352 = k7179;
var G__9353 = l7180;
var G__9354 = m7181;
var G__9355 = n7182;
var G__9356 = o7183;
var G__9357 = p7184;
var G__9358 = q7185;
var G__9359 = r7186;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9342,G__9343,G__9344,G__9345,G__9346,G__9347,G__9348,G__9349,G__9350,G__9351,G__9352,G__9353,G__9354,G__9355,G__9356,G__9357,G__9358,G__9359) : f.call(null,G__9342,G__9343,G__9344,G__9345,G__9346,G__9347,G__9348,G__9349,G__9350,G__9351,G__9352,G__9353,G__9354,G__9355,G__9356,G__9357,G__9358,G__9359));
}
} else {
var s7187 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182,o7183,p7184,q7185,r7186,s7187);
} else {
var G__9360 = a7169;
var G__9361 = b7170;
var G__9362 = c7171;
var G__9363 = d7172;
var G__9364 = e7173;
var G__9365 = f7174;
var G__9366 = g7175;
var G__9367 = h7176;
var G__9368 = i7177;
var G__9369 = j7178;
var G__9370 = k7179;
var G__9371 = l7180;
var G__9372 = m7181;
var G__9373 = n7182;
var G__9374 = o7183;
var G__9375 = p7184;
var G__9376 = q7185;
var G__9377 = r7186;
var G__9378 = s7187;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9360,G__9361,G__9362,G__9363,G__9364,G__9365,G__9366,G__9367,G__9368,G__9369,G__9370,G__9371,G__9372,G__9373,G__9374,G__9375,G__9376,G__9377,G__9378) : f.call(null,G__9360,G__9361,G__9362,G__9363,G__9364,G__9365,G__9366,G__9367,G__9368,G__9369,G__9370,G__9371,G__9372,G__9373,G__9374,G__9375,G__9376,G__9377,G__9378));
}
} else {
var t7188 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a7169,b7170,c7171,d7172,e7173,f7174,g7175,h7176,i7177,j7178,k7179,l7180,m7181,n7182,o7183,p7184,q7185,r7186,s7187,t7188);
} else {
var G__9379 = a7169;
var G__9380 = b7170;
var G__9381 = c7171;
var G__9382 = d7172;
var G__9383 = e7173;
var G__9384 = f7174;
var G__9385 = g7175;
var G__9386 = h7176;
var G__9387 = i7177;
var G__9388 = j7178;
var G__9389 = k7179;
var G__9390 = l7180;
var G__9391 = m7181;
var G__9392 = n7182;
var G__9393 = o7183;
var G__9394 = p7184;
var G__9395 = q7185;
var G__9396 = r7186;
var G__9397 = s7187;
var G__9398 = t7188;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9379,G__9380,G__9381,G__9382,G__9383,G__9384,G__9385,G__9386,G__9387,G__9388,G__9389,G__9390,G__9391,G__9392,G__9393,G__9394,G__9395,G__9396,G__9397,G__9398) : f.call(null,G__9379,G__9380,G__9381,G__9382,G__9383,G__9384,G__9385,G__9386,G__9387,G__9388,G__9389,G__9390,G__9391,G__9392,G__9393,G__9394,G__9395,G__9396,G__9397,G__9398));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__9399__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9399 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9400__i = 0, G__9400__a = new Array(arguments.length -  5);
while (G__9400__i < G__9400__a.length) {G__9400__a[G__9400__i] = arguments[G__9400__i + 5]; ++G__9400__i;}
  args = new cljs.core.IndexedSeq(G__9400__a,0);
} 
return G__9399__delegate.call(this,f,a,b,c,d,args);};
G__9399.cljs$lang$maxFixedArity = 5;
G__9399.cljs$lang$applyTo = (function (arglist__9401){
var f = cljs.core.first(arglist__9401);
arglist__9401 = cljs.core.next(arglist__9401);
var a = cljs.core.first(arglist__9401);
arglist__9401 = cljs.core.next(arglist__9401);
var b = cljs.core.first(arglist__9401);
arglist__9401 = cljs.core.next(arglist__9401);
var c = cljs.core.first(arglist__9401);
arglist__9401 = cljs.core.next(arglist__9401);
var d = cljs.core.first(arglist__9401);
var args = cljs.core.rest(arglist__9401);
return G__9399__delegate(f,a,b,c,d,args);
});
G__9399.cljs$core$IFn$_invoke$arity$variadic = G__9399__delegate;
return G__9399;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__9402 = null;
if (arguments.length > 5) {
var G__9403__i = 0, G__9403__a = new Array(arguments.length -  5);
while (G__9403__i < G__9403__a.length) {G__9403__a[G__9403__i] = arguments[G__9403__i + 5]; ++G__9403__i;}
G__9402 = new cljs.core.IndexedSeq(G__9403__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9419 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9419) : f.call(null,G__9419));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9420 = cljs.core.meta(obj);
var G__9421 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9420,G__9421) : f.call(null,G__9420,G__9421));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9422 = cljs.core.meta(obj);
var G__9423 = a;
var G__9424 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9422,G__9423,G__9424) : f.call(null,G__9422,G__9423,G__9424));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9425 = cljs.core.meta(obj);
var G__9426 = a;
var G__9427 = b;
var G__9428 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9425,G__9426,G__9427,G__9428) : f.call(null,G__9425,G__9426,G__9427,G__9428));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9429 = cljs.core.meta(obj);
var G__9430 = a;
var G__9431 = b;
var G__9432 = c;
var G__9433 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9429,G__9430,G__9431,G__9432,G__9433) : f.call(null,G__9429,G__9430,G__9431,G__9432,G__9433));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__9434__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9434 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9435__i = 0, G__9435__a = new Array(arguments.length -  6);
while (G__9435__i < G__9435__a.length) {G__9435__a[G__9435__i] = arguments[G__9435__i + 6]; ++G__9435__i;}
  args = new cljs.core.IndexedSeq(G__9435__a,0);
} 
return G__9434__delegate.call(this,obj,f,a,b,c,d,args);};
G__9434.cljs$lang$maxFixedArity = 6;
G__9434.cljs$lang$applyTo = (function (arglist__9436){
var obj = cljs.core.first(arglist__9436);
arglist__9436 = cljs.core.next(arglist__9436);
var f = cljs.core.first(arglist__9436);
arglist__9436 = cljs.core.next(arglist__9436);
var a = cljs.core.first(arglist__9436);
arglist__9436 = cljs.core.next(arglist__9436);
var b = cljs.core.first(arglist__9436);
arglist__9436 = cljs.core.next(arglist__9436);
var c = cljs.core.first(arglist__9436);
arglist__9436 = cljs.core.next(arglist__9436);
var d = cljs.core.first(arglist__9436);
var args = cljs.core.rest(arglist__9436);
return G__9434__delegate(obj,f,a,b,c,d,args);
});
G__9434.cljs$core$IFn$_invoke$arity$variadic = G__9434__delegate;
return G__9434;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9437 = null;
if (arguments.length > 6) {
var G__9438__i = 0, G__9438__a = new Array(arguments.length -  6);
while (G__9438__i < G__9438__a.length) {G__9438__a[G__9438__i] = arguments[G__9438__i + 6]; ++G__9438__i;}
G__9437 = new cljs.core.IndexedSeq(G__9438__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__9439__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9439 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9440__i = 0, G__9440__a = new Array(arguments.length -  2);
while (G__9440__i < G__9440__a.length) {G__9440__a[G__9440__i] = arguments[G__9440__i + 2]; ++G__9440__i;}
  more = new cljs.core.IndexedSeq(G__9440__a,0);
} 
return G__9439__delegate.call(this,x,y,more);};
G__9439.cljs$lang$maxFixedArity = 2;
G__9439.cljs$lang$applyTo = (function (arglist__9441){
var x = cljs.core.first(arglist__9441);
arglist__9441 = cljs.core.next(arglist__9441);
var y = cljs.core.first(arglist__9441);
var more = cljs.core.rest(arglist__9441);
return G__9439__delegate(x,y,more);
});
G__9439.cljs$core$IFn$_invoke$arity$variadic = G__9439__delegate;
return G__9439;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__9442 = null;
if (arguments.length > 2) {
var G__9443__i = 0, G__9443__a = new Array(arguments.length -  2);
while (G__9443__i < G__9443__a.length) {G__9443__a[G__9443__i] = arguments[G__9443__i + 2]; ++G__9443__i;}
G__9442 = new cljs.core.IndexedSeq(G__9443__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t9447 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9447 = (function (nil_iter,meta9448){
this.nil_iter = nil_iter;
this.meta9448 = meta9448;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t9447.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9447.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9447.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9447.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9449){
var self__ = this;
var _9449__$1 = this;
return self__.meta9448;
});

cljs.core.t9447.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9449,meta9448__$1){
var self__ = this;
var _9449__$1 = this;
return (new cljs.core.t9447(self__.nil_iter,meta9448__$1));
});

cljs.core.t9447.cljs$lang$type = true;

cljs.core.t9447.cljs$lang$ctorStr = "cljs.core/t9447";

cljs.core.t9447.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/t9447");
});

cljs.core.__GT_t9447 = (function cljs$core$nil_iter_$___GT_t9447(nil_iter__$1,meta9448){
return (new cljs.core.t9447(nil_iter__$1,meta9448));
});

}

return (new cljs.core.t9447(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__6226__auto__ = !((lt.stepper == null));
if(and__6226__auto__){
return self__.iter.hasNext();
} else {
return and__6226__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9450 = lt;
var G__9451 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9450,G__9451) : self__.xform.call(null,G__9450,G__9451));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9452 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9452) : self__.xform.call(null,G__9452));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9454 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9454) : xform.call(null,G__9454));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9456 = cljs.core.next(iters__$1);
iters__$1 = G__9456;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__7125__auto___9457 = self__.iters.length;
var i_9458 = (0);
while(true){
if((i_9458 < n__7125__auto___9457)){
(self__.nexts[i_9458] = (self__.iters[i_9458]).next());

var G__9459 = (i_9458 + (1));
i_9458 = G__9459;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__6226__auto__ = !((lt.stepper == null));
if(and__6226__auto__){
return this$.hasNext();
} else {
return and__6226__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9455 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9455) : self__.xform.call(null,G__9455));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9464 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9464) : xform.call(null,G__9464));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9465_9469 = cljs.core.seq(colls);
var chunk__9466_9470 = null;
var count__9467_9471 = (0);
var i__9468_9472 = (0);
while(true){
if((i__9468_9472 < count__9467_9471)){
var coll_9473 = chunk__9466_9470.cljs$core$IIndexed$_nth$arity$2(null,i__9468_9472);
iters.push(cljs.core.iter(coll_9473));

var G__9474 = seq__9465_9469;
var G__9475 = chunk__9466_9470;
var G__9476 = count__9467_9471;
var G__9477 = (i__9468_9472 + (1));
seq__9465_9469 = G__9474;
chunk__9466_9470 = G__9475;
count__9467_9471 = G__9476;
i__9468_9472 = G__9477;
continue;
} else {
var temp__4126__auto___9478 = cljs.core.seq(seq__9465_9469);
if(temp__4126__auto___9478){
var seq__9465_9479__$1 = temp__4126__auto___9478;
if(cljs.core.chunked_seq_QMARK_(seq__9465_9479__$1)){
var c__7025__auto___9480 = cljs.core.chunk_first(seq__9465_9479__$1);
var G__9481 = cljs.core.chunk_rest(seq__9465_9479__$1);
var G__9482 = c__7025__auto___9480;
var G__9483 = cljs.core.count(c__7025__auto___9480);
var G__9484 = (0);
seq__9465_9469 = G__9481;
chunk__9466_9470 = G__9482;
count__9467_9471 = G__9483;
i__9468_9472 = G__9484;
continue;
} else {
var coll_9485 = cljs.core.first(seq__9465_9479__$1);
iters.push(cljs.core.iter(coll_9485));

var G__9486 = cljs.core.next(seq__9465_9479__$1);
var G__9487 = null;
var G__9488 = (0);
var G__9489 = (0);
seq__9465_9469 = G__9486;
chunk__9466_9470 = G__9487;
count__9467_9471 = G__9488;
i__9468_9472 = G__9489;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__6238__auto__ = cljs.core.seq(coll);
if(or__6238__auto__){
return or__6238__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__9490__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9490 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9491__i = 0, G__9491__a = new Array(arguments.length -  2);
while (G__9491__i < G__9491__a.length) {G__9491__a[G__9491__i] = arguments[G__9491__i + 2]; ++G__9491__i;}
  colls = new cljs.core.IndexedSeq(G__9491__a,0);
} 
return G__9490__delegate.call(this,xform,coll,colls);};
G__9490.cljs$lang$maxFixedArity = 2;
G__9490.cljs$lang$applyTo = (function (arglist__9492){
var xform = cljs.core.first(arglist__9492);
arglist__9492 = cljs.core.next(arglist__9492);
var coll = cljs.core.first(arglist__9492);
var colls = cljs.core.rest(arglist__9492);
return G__9490__delegate(xform,coll,colls);
});
G__9490.cljs$core$IFn$_invoke$arity$variadic = G__9490__delegate;
return G__9490;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__9493 = null;
if (arguments.length > 2) {
var G__9494__i = 0, G__9494__a = new Array(arguments.length -  2);
while (G__9494__i < G__9494__a.length) {G__9494__a[G__9494__i] = arguments[G__9494__i + 2]; ++G__9494__i;}
G__9493 = new cljs.core.IndexedSeq(G__9494__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9496 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9496) : pred.call(null,G__9496));
})())){
var G__9497 = pred;
var G__9498 = cljs.core.next(coll);
pred = G__9497;
coll = G__9498;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__6238__auto__ = (function (){var G__9502 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9502) : pred.call(null,G__9502));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var G__9503 = pred;
var G__9504 = cljs.core.next(coll);
pred = G__9503;
coll = G__9504;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__9511 = null;
var G__9511__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9511__1 = (function (x){
return cljs.core.not((function (){var G__9508 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9508) : f.call(null,G__9508));
})());
});
var G__9511__2 = (function (x,y){
return cljs.core.not((function (){var G__9509 = x;
var G__9510 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9509,G__9510) : f.call(null,G__9509,G__9510));
})());
});
var G__9511__3 = (function() { 
var G__9512__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9512 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9513__i = 0, G__9513__a = new Array(arguments.length -  2);
while (G__9513__i < G__9513__a.length) {G__9513__a[G__9513__i] = arguments[G__9513__i + 2]; ++G__9513__i;}
  zs = new cljs.core.IndexedSeq(G__9513__a,0);
} 
return G__9512__delegate.call(this,x,y,zs);};
G__9512.cljs$lang$maxFixedArity = 2;
G__9512.cljs$lang$applyTo = (function (arglist__9514){
var x = cljs.core.first(arglist__9514);
arglist__9514 = cljs.core.next(arglist__9514);
var y = cljs.core.first(arglist__9514);
var zs = cljs.core.rest(arglist__9514);
return G__9512__delegate(x,y,zs);
});
G__9512.cljs$core$IFn$_invoke$arity$variadic = G__9512__delegate;
return G__9512;
})()
;
G__9511 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9511__0.call(this);
case 1:
return G__9511__1.call(this,x);
case 2:
return G__9511__2.call(this,x,y);
default:
var G__9515 = null;
if (arguments.length > 2) {
var G__9516__i = 0, G__9516__a = new Array(arguments.length -  2);
while (G__9516__i < G__9516__a.length) {G__9516__a[G__9516__i] = arguments[G__9516__i + 2]; ++G__9516__i;}
G__9515 = new cljs.core.IndexedSeq(G__9516__a,0);
}
return G__9511__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9511.cljs$lang$maxFixedArity = 2;
G__9511.cljs$lang$applyTo = G__9511__3.cljs$lang$applyTo;
G__9511.cljs$core$IFn$_invoke$arity$0 = G__9511__0;
G__9511.cljs$core$IFn$_invoke$arity$1 = G__9511__1;
G__9511.cljs$core$IFn$_invoke$arity$2 = G__9511__2;
G__9511.cljs$core$IFn$_invoke$arity$variadic = G__9511__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9511;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__9517__delegate = function (args){
return x;
};
var G__9517 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9518__i = 0, G__9518__a = new Array(arguments.length -  0);
while (G__9518__i < G__9518__a.length) {G__9518__a[G__9518__i] = arguments[G__9518__i + 0]; ++G__9518__i;}
  args = new cljs.core.IndexedSeq(G__9518__a,0);
} 
return G__9517__delegate.call(this,args);};
G__9517.cljs$lang$maxFixedArity = 0;
G__9517.cljs$lang$applyTo = (function (arglist__9519){
var args = cljs.core.seq(arglist__9519);
return G__9517__delegate(args);
});
G__9517.cljs$core$IFn$_invoke$arity$variadic = G__9517__delegate;
return G__9517;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__9574 = null;
var G__9574__0 = (function (){
var G__9547 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9547) : f.call(null,G__9547));
});
var G__9574__1 = (function (x){
var G__9548 = (function (){var G__9549 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9549) : g.call(null,G__9549));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9548) : f.call(null,G__9548));
});
var G__9574__2 = (function (x,y){
var G__9550 = (function (){var G__9551 = x;
var G__9552 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9551,G__9552) : g.call(null,G__9551,G__9552));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9550) : f.call(null,G__9550));
});
var G__9574__3 = (function (x,y,z){
var G__9553 = (function (){var G__9554 = x;
var G__9555 = y;
var G__9556 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9554,G__9555,G__9556) : g.call(null,G__9554,G__9555,G__9556));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9553) : f.call(null,G__9553));
});
var G__9574__4 = (function() { 
var G__9575__delegate = function (x,y,z,args){
var G__9557 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9557) : f.call(null,G__9557));
};
var G__9575 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9576__i = 0, G__9576__a = new Array(arguments.length -  3);
while (G__9576__i < G__9576__a.length) {G__9576__a[G__9576__i] = arguments[G__9576__i + 3]; ++G__9576__i;}
  args = new cljs.core.IndexedSeq(G__9576__a,0);
} 
return G__9575__delegate.call(this,x,y,z,args);};
G__9575.cljs$lang$maxFixedArity = 3;
G__9575.cljs$lang$applyTo = (function (arglist__9577){
var x = cljs.core.first(arglist__9577);
arglist__9577 = cljs.core.next(arglist__9577);
var y = cljs.core.first(arglist__9577);
arglist__9577 = cljs.core.next(arglist__9577);
var z = cljs.core.first(arglist__9577);
var args = cljs.core.rest(arglist__9577);
return G__9575__delegate(x,y,z,args);
});
G__9575.cljs$core$IFn$_invoke$arity$variadic = G__9575__delegate;
return G__9575;
})()
;
G__9574 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9574__0.call(this);
case 1:
return G__9574__1.call(this,x);
case 2:
return G__9574__2.call(this,x,y);
case 3:
return G__9574__3.call(this,x,y,z);
default:
var G__9578 = null;
if (arguments.length > 3) {
var G__9579__i = 0, G__9579__a = new Array(arguments.length -  3);
while (G__9579__i < G__9579__a.length) {G__9579__a[G__9579__i] = arguments[G__9579__i + 3]; ++G__9579__i;}
G__9578 = new cljs.core.IndexedSeq(G__9579__a,0);
}
return G__9574__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9578);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9574.cljs$lang$maxFixedArity = 3;
G__9574.cljs$lang$applyTo = G__9574__4.cljs$lang$applyTo;
G__9574.cljs$core$IFn$_invoke$arity$0 = G__9574__0;
G__9574.cljs$core$IFn$_invoke$arity$1 = G__9574__1;
G__9574.cljs$core$IFn$_invoke$arity$2 = G__9574__2;
G__9574.cljs$core$IFn$_invoke$arity$3 = G__9574__3;
G__9574.cljs$core$IFn$_invoke$arity$variadic = G__9574__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9574;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__9580 = null;
var G__9580__0 = (function (){
var G__9558 = (function (){var G__9559 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9559) : g.call(null,G__9559));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9558) : f.call(null,G__9558));
});
var G__9580__1 = (function (x){
var G__9560 = (function (){var G__9561 = (function (){var G__9562 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9562) : h.call(null,G__9562));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9561) : g.call(null,G__9561));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9560) : f.call(null,G__9560));
});
var G__9580__2 = (function (x,y){
var G__9563 = (function (){var G__9564 = (function (){var G__9565 = x;
var G__9566 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9565,G__9566) : h.call(null,G__9565,G__9566));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9564) : g.call(null,G__9564));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9563) : f.call(null,G__9563));
});
var G__9580__3 = (function (x,y,z){
var G__9567 = (function (){var G__9568 = (function (){var G__9569 = x;
var G__9570 = y;
var G__9571 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9569,G__9570,G__9571) : h.call(null,G__9569,G__9570,G__9571));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9568) : g.call(null,G__9568));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9567) : f.call(null,G__9567));
});
var G__9580__4 = (function() { 
var G__9581__delegate = function (x,y,z,args){
var G__9572 = (function (){var G__9573 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9573) : g.call(null,G__9573));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9572) : f.call(null,G__9572));
};
var G__9581 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9582__i = 0, G__9582__a = new Array(arguments.length -  3);
while (G__9582__i < G__9582__a.length) {G__9582__a[G__9582__i] = arguments[G__9582__i + 3]; ++G__9582__i;}
  args = new cljs.core.IndexedSeq(G__9582__a,0);
} 
return G__9581__delegate.call(this,x,y,z,args);};
G__9581.cljs$lang$maxFixedArity = 3;
G__9581.cljs$lang$applyTo = (function (arglist__9583){
var x = cljs.core.first(arglist__9583);
arglist__9583 = cljs.core.next(arglist__9583);
var y = cljs.core.first(arglist__9583);
arglist__9583 = cljs.core.next(arglist__9583);
var z = cljs.core.first(arglist__9583);
var args = cljs.core.rest(arglist__9583);
return G__9581__delegate(x,y,z,args);
});
G__9581.cljs$core$IFn$_invoke$arity$variadic = G__9581__delegate;
return G__9581;
})()
;
G__9580 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9580__0.call(this);
case 1:
return G__9580__1.call(this,x);
case 2:
return G__9580__2.call(this,x,y);
case 3:
return G__9580__3.call(this,x,y,z);
default:
var G__9584 = null;
if (arguments.length > 3) {
var G__9585__i = 0, G__9585__a = new Array(arguments.length -  3);
while (G__9585__i < G__9585__a.length) {G__9585__a[G__9585__i] = arguments[G__9585__i + 3]; ++G__9585__i;}
G__9584 = new cljs.core.IndexedSeq(G__9585__a,0);
}
return G__9580__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9580.cljs$lang$maxFixedArity = 3;
G__9580.cljs$lang$applyTo = G__9580__4.cljs$lang$applyTo;
G__9580.cljs$core$IFn$_invoke$arity$0 = G__9580__0;
G__9580.cljs$core$IFn$_invoke$arity$1 = G__9580__1;
G__9580.cljs$core$IFn$_invoke$arity$2 = G__9580__2;
G__9580.cljs$core$IFn$_invoke$arity$3 = G__9580__3;
G__9580.cljs$core$IFn$_invoke$arity$variadic = G__9580__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9580;
})()
});
var cljs$core$comp__4 = (function() { 
var G__9586__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9587__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9588 = cljs.core.first(fs__$2).call(null,ret);
var G__9589 = cljs.core.next(fs__$2);
ret = G__9588;
fs__$2 = G__9589;
continue;
} else {
return ret;
}
break;
}
};
var G__9587 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9590__i = 0, G__9590__a = new Array(arguments.length -  0);
while (G__9590__i < G__9590__a.length) {G__9590__a[G__9590__i] = arguments[G__9590__i + 0]; ++G__9590__i;}
  args = new cljs.core.IndexedSeq(G__9590__a,0);
} 
return G__9587__delegate.call(this,args);};
G__9587.cljs$lang$maxFixedArity = 0;
G__9587.cljs$lang$applyTo = (function (arglist__9591){
var args = cljs.core.seq(arglist__9591);
return G__9587__delegate(args);
});
G__9587.cljs$core$IFn$_invoke$arity$variadic = G__9587__delegate;
return G__9587;
})()
;
;})(fs__$1))
};
var G__9586 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9592__i = 0, G__9592__a = new Array(arguments.length -  3);
while (G__9592__i < G__9592__a.length) {G__9592__a[G__9592__i] = arguments[G__9592__i + 3]; ++G__9592__i;}
  fs = new cljs.core.IndexedSeq(G__9592__a,0);
} 
return G__9586__delegate.call(this,f1,f2,f3,fs);};
G__9586.cljs$lang$maxFixedArity = 3;
G__9586.cljs$lang$applyTo = (function (arglist__9593){
var f1 = cljs.core.first(arglist__9593);
arglist__9593 = cljs.core.next(arglist__9593);
var f2 = cljs.core.first(arglist__9593);
arglist__9593 = cljs.core.next(arglist__9593);
var f3 = cljs.core.first(arglist__9593);
var fs = cljs.core.rest(arglist__9593);
return G__9586__delegate(f1,f2,f3,fs);
});
G__9586.cljs$core$IFn$_invoke$arity$variadic = G__9586__delegate;
return G__9586;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__9594 = null;
if (arguments.length > 3) {
var G__9595__i = 0, G__9595__a = new Array(arguments.length -  3);
while (G__9595__i < G__9595__a.length) {G__9595__a[G__9595__i] = arguments[G__9595__i + 3]; ++G__9595__i;}
G__9594 = new cljs.core.IndexedSeq(G__9595__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__9680 = null;
var G__9680__0 = (function (){
var G__9638 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9638) : f.call(null,G__9638));
});
var G__9680__1 = (function (x){
var G__9639 = arg1;
var G__9640 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9639,G__9640) : f.call(null,G__9639,G__9640));
});
var G__9680__2 = (function (x,y){
var G__9641 = arg1;
var G__9642 = x;
var G__9643 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9641,G__9642,G__9643) : f.call(null,G__9641,G__9642,G__9643));
});
var G__9680__3 = (function (x,y,z){
var G__9644 = arg1;
var G__9645 = x;
var G__9646 = y;
var G__9647 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9644,G__9645,G__9646,G__9647) : f.call(null,G__9644,G__9645,G__9646,G__9647));
});
var G__9680__4 = (function() { 
var G__9681__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9681 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9682__i = 0, G__9682__a = new Array(arguments.length -  3);
while (G__9682__i < G__9682__a.length) {G__9682__a[G__9682__i] = arguments[G__9682__i + 3]; ++G__9682__i;}
  args = new cljs.core.IndexedSeq(G__9682__a,0);
} 
return G__9681__delegate.call(this,x,y,z,args);};
G__9681.cljs$lang$maxFixedArity = 3;
G__9681.cljs$lang$applyTo = (function (arglist__9683){
var x = cljs.core.first(arglist__9683);
arglist__9683 = cljs.core.next(arglist__9683);
var y = cljs.core.first(arglist__9683);
arglist__9683 = cljs.core.next(arglist__9683);
var z = cljs.core.first(arglist__9683);
var args = cljs.core.rest(arglist__9683);
return G__9681__delegate(x,y,z,args);
});
G__9681.cljs$core$IFn$_invoke$arity$variadic = G__9681__delegate;
return G__9681;
})()
;
G__9680 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9680__0.call(this);
case 1:
return G__9680__1.call(this,x);
case 2:
return G__9680__2.call(this,x,y);
case 3:
return G__9680__3.call(this,x,y,z);
default:
var G__9684 = null;
if (arguments.length > 3) {
var G__9685__i = 0, G__9685__a = new Array(arguments.length -  3);
while (G__9685__i < G__9685__a.length) {G__9685__a[G__9685__i] = arguments[G__9685__i + 3]; ++G__9685__i;}
G__9684 = new cljs.core.IndexedSeq(G__9685__a,0);
}
return G__9680__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9680.cljs$lang$maxFixedArity = 3;
G__9680.cljs$lang$applyTo = G__9680__4.cljs$lang$applyTo;
G__9680.cljs$core$IFn$_invoke$arity$0 = G__9680__0;
G__9680.cljs$core$IFn$_invoke$arity$1 = G__9680__1;
G__9680.cljs$core$IFn$_invoke$arity$2 = G__9680__2;
G__9680.cljs$core$IFn$_invoke$arity$3 = G__9680__3;
G__9680.cljs$core$IFn$_invoke$arity$variadic = G__9680__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9680;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9686 = null;
var G__9686__0 = (function (){
var G__9648 = arg1;
var G__9649 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9648,G__9649) : f.call(null,G__9648,G__9649));
});
var G__9686__1 = (function (x){
var G__9650 = arg1;
var G__9651 = arg2;
var G__9652 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9650,G__9651,G__9652) : f.call(null,G__9650,G__9651,G__9652));
});
var G__9686__2 = (function (x,y){
var G__9653 = arg1;
var G__9654 = arg2;
var G__9655 = x;
var G__9656 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9653,G__9654,G__9655,G__9656) : f.call(null,G__9653,G__9654,G__9655,G__9656));
});
var G__9686__3 = (function (x,y,z){
var G__9657 = arg1;
var G__9658 = arg2;
var G__9659 = x;
var G__9660 = y;
var G__9661 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9657,G__9658,G__9659,G__9660,G__9661) : f.call(null,G__9657,G__9658,G__9659,G__9660,G__9661));
});
var G__9686__4 = (function() { 
var G__9687__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9687 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9688__i = 0, G__9688__a = new Array(arguments.length -  3);
while (G__9688__i < G__9688__a.length) {G__9688__a[G__9688__i] = arguments[G__9688__i + 3]; ++G__9688__i;}
  args = new cljs.core.IndexedSeq(G__9688__a,0);
} 
return G__9687__delegate.call(this,x,y,z,args);};
G__9687.cljs$lang$maxFixedArity = 3;
G__9687.cljs$lang$applyTo = (function (arglist__9689){
var x = cljs.core.first(arglist__9689);
arglist__9689 = cljs.core.next(arglist__9689);
var y = cljs.core.first(arglist__9689);
arglist__9689 = cljs.core.next(arglist__9689);
var z = cljs.core.first(arglist__9689);
var args = cljs.core.rest(arglist__9689);
return G__9687__delegate(x,y,z,args);
});
G__9687.cljs$core$IFn$_invoke$arity$variadic = G__9687__delegate;
return G__9687;
})()
;
G__9686 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9686__0.call(this);
case 1:
return G__9686__1.call(this,x);
case 2:
return G__9686__2.call(this,x,y);
case 3:
return G__9686__3.call(this,x,y,z);
default:
var G__9690 = null;
if (arguments.length > 3) {
var G__9691__i = 0, G__9691__a = new Array(arguments.length -  3);
while (G__9691__i < G__9691__a.length) {G__9691__a[G__9691__i] = arguments[G__9691__i + 3]; ++G__9691__i;}
G__9690 = new cljs.core.IndexedSeq(G__9691__a,0);
}
return G__9686__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9686.cljs$lang$maxFixedArity = 3;
G__9686.cljs$lang$applyTo = G__9686__4.cljs$lang$applyTo;
G__9686.cljs$core$IFn$_invoke$arity$0 = G__9686__0;
G__9686.cljs$core$IFn$_invoke$arity$1 = G__9686__1;
G__9686.cljs$core$IFn$_invoke$arity$2 = G__9686__2;
G__9686.cljs$core$IFn$_invoke$arity$3 = G__9686__3;
G__9686.cljs$core$IFn$_invoke$arity$variadic = G__9686__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9686;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9692 = null;
var G__9692__0 = (function (){
var G__9662 = arg1;
var G__9663 = arg2;
var G__9664 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9662,G__9663,G__9664) : f.call(null,G__9662,G__9663,G__9664));
});
var G__9692__1 = (function (x){
var G__9665 = arg1;
var G__9666 = arg2;
var G__9667 = arg3;
var G__9668 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9665,G__9666,G__9667,G__9668) : f.call(null,G__9665,G__9666,G__9667,G__9668));
});
var G__9692__2 = (function (x,y){
var G__9669 = arg1;
var G__9670 = arg2;
var G__9671 = arg3;
var G__9672 = x;
var G__9673 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9669,G__9670,G__9671,G__9672,G__9673) : f.call(null,G__9669,G__9670,G__9671,G__9672,G__9673));
});
var G__9692__3 = (function (x,y,z){
var G__9674 = arg1;
var G__9675 = arg2;
var G__9676 = arg3;
var G__9677 = x;
var G__9678 = y;
var G__9679 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9674,G__9675,G__9676,G__9677,G__9678,G__9679) : f.call(null,G__9674,G__9675,G__9676,G__9677,G__9678,G__9679));
});
var G__9692__4 = (function() { 
var G__9693__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9693 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9694__i = 0, G__9694__a = new Array(arguments.length -  3);
while (G__9694__i < G__9694__a.length) {G__9694__a[G__9694__i] = arguments[G__9694__i + 3]; ++G__9694__i;}
  args = new cljs.core.IndexedSeq(G__9694__a,0);
} 
return G__9693__delegate.call(this,x,y,z,args);};
G__9693.cljs$lang$maxFixedArity = 3;
G__9693.cljs$lang$applyTo = (function (arglist__9695){
var x = cljs.core.first(arglist__9695);
arglist__9695 = cljs.core.next(arglist__9695);
var y = cljs.core.first(arglist__9695);
arglist__9695 = cljs.core.next(arglist__9695);
var z = cljs.core.first(arglist__9695);
var args = cljs.core.rest(arglist__9695);
return G__9693__delegate(x,y,z,args);
});
G__9693.cljs$core$IFn$_invoke$arity$variadic = G__9693__delegate;
return G__9693;
})()
;
G__9692 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9692__0.call(this);
case 1:
return G__9692__1.call(this,x);
case 2:
return G__9692__2.call(this,x,y);
case 3:
return G__9692__3.call(this,x,y,z);
default:
var G__9696 = null;
if (arguments.length > 3) {
var G__9697__i = 0, G__9697__a = new Array(arguments.length -  3);
while (G__9697__i < G__9697__a.length) {G__9697__a[G__9697__i] = arguments[G__9697__i + 3]; ++G__9697__i;}
G__9696 = new cljs.core.IndexedSeq(G__9697__a,0);
}
return G__9692__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9692.cljs$lang$maxFixedArity = 3;
G__9692.cljs$lang$applyTo = G__9692__4.cljs$lang$applyTo;
G__9692.cljs$core$IFn$_invoke$arity$0 = G__9692__0;
G__9692.cljs$core$IFn$_invoke$arity$1 = G__9692__1;
G__9692.cljs$core$IFn$_invoke$arity$2 = G__9692__2;
G__9692.cljs$core$IFn$_invoke$arity$3 = G__9692__3;
G__9692.cljs$core$IFn$_invoke$arity$variadic = G__9692__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9692;
})()
});
var cljs$core$partial__5 = (function() { 
var G__9698__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9699__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9699 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9700__i = 0, G__9700__a = new Array(arguments.length -  0);
while (G__9700__i < G__9700__a.length) {G__9700__a[G__9700__i] = arguments[G__9700__i + 0]; ++G__9700__i;}
  args = new cljs.core.IndexedSeq(G__9700__a,0);
} 
return G__9699__delegate.call(this,args);};
G__9699.cljs$lang$maxFixedArity = 0;
G__9699.cljs$lang$applyTo = (function (arglist__9701){
var args = cljs.core.seq(arglist__9701);
return G__9699__delegate(args);
});
G__9699.cljs$core$IFn$_invoke$arity$variadic = G__9699__delegate;
return G__9699;
})()
;
};
var G__9698 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9702__i = 0, G__9702__a = new Array(arguments.length -  4);
while (G__9702__i < G__9702__a.length) {G__9702__a[G__9702__i] = arguments[G__9702__i + 4]; ++G__9702__i;}
  more = new cljs.core.IndexedSeq(G__9702__a,0);
} 
return G__9698__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9698.cljs$lang$maxFixedArity = 4;
G__9698.cljs$lang$applyTo = (function (arglist__9703){
var f = cljs.core.first(arglist__9703);
arglist__9703 = cljs.core.next(arglist__9703);
var arg1 = cljs.core.first(arglist__9703);
arglist__9703 = cljs.core.next(arglist__9703);
var arg2 = cljs.core.first(arglist__9703);
arglist__9703 = cljs.core.next(arglist__9703);
var arg3 = cljs.core.first(arglist__9703);
var more = cljs.core.rest(arglist__9703);
return G__9698__delegate(f,arg1,arg2,arg3,more);
});
G__9698.cljs$core$IFn$_invoke$arity$variadic = G__9698__delegate;
return G__9698;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9704 = null;
if (arguments.length > 4) {
var G__9705__i = 0, G__9705__a = new Array(arguments.length -  4);
while (G__9705__i < G__9705__a.length) {G__9705__a[G__9705__i] = arguments[G__9705__i + 4]; ++G__9705__i;}
G__9704 = new cljs.core.IndexedSeq(G__9705__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__9738 = null;
var G__9738__1 = (function (a){
var G__9722 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9722) : f.call(null,G__9722));
});
var G__9738__2 = (function (a,b){
var G__9723 = (((a == null))?x:a);
var G__9724 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9723,G__9724) : f.call(null,G__9723,G__9724));
});
var G__9738__3 = (function (a,b,c){
var G__9725 = (((a == null))?x:a);
var G__9726 = b;
var G__9727 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9725,G__9726,G__9727) : f.call(null,G__9725,G__9726,G__9727));
});
var G__9738__4 = (function() { 
var G__9739__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__9739 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9740__i = 0, G__9740__a = new Array(arguments.length -  3);
while (G__9740__i < G__9740__a.length) {G__9740__a[G__9740__i] = arguments[G__9740__i + 3]; ++G__9740__i;}
  ds = new cljs.core.IndexedSeq(G__9740__a,0);
} 
return G__9739__delegate.call(this,a,b,c,ds);};
G__9739.cljs$lang$maxFixedArity = 3;
G__9739.cljs$lang$applyTo = (function (arglist__9741){
var a = cljs.core.first(arglist__9741);
arglist__9741 = cljs.core.next(arglist__9741);
var b = cljs.core.first(arglist__9741);
arglist__9741 = cljs.core.next(arglist__9741);
var c = cljs.core.first(arglist__9741);
var ds = cljs.core.rest(arglist__9741);
return G__9739__delegate(a,b,c,ds);
});
G__9739.cljs$core$IFn$_invoke$arity$variadic = G__9739__delegate;
return G__9739;
})()
;
G__9738 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__9738__1.call(this,a);
case 2:
return G__9738__2.call(this,a,b);
case 3:
return G__9738__3.call(this,a,b,c);
default:
var G__9742 = null;
if (arguments.length > 3) {
var G__9743__i = 0, G__9743__a = new Array(arguments.length -  3);
while (G__9743__i < G__9743__a.length) {G__9743__a[G__9743__i] = arguments[G__9743__i + 3]; ++G__9743__i;}
G__9742 = new cljs.core.IndexedSeq(G__9743__a,0);
}
return G__9738__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9738.cljs$lang$maxFixedArity = 3;
G__9738.cljs$lang$applyTo = G__9738__4.cljs$lang$applyTo;
G__9738.cljs$core$IFn$_invoke$arity$1 = G__9738__1;
G__9738.cljs$core$IFn$_invoke$arity$2 = G__9738__2;
G__9738.cljs$core$IFn$_invoke$arity$3 = G__9738__3;
G__9738.cljs$core$IFn$_invoke$arity$variadic = G__9738__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9738;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__9744 = null;
var G__9744__2 = (function (a,b){
var G__9728 = (((a == null))?x:a);
var G__9729 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9728,G__9729) : f.call(null,G__9728,G__9729));
});
var G__9744__3 = (function (a,b,c){
var G__9730 = (((a == null))?x:a);
var G__9731 = (((b == null))?y:b);
var G__9732 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9730,G__9731,G__9732) : f.call(null,G__9730,G__9731,G__9732));
});
var G__9744__4 = (function() { 
var G__9745__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__9745 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9746__i = 0, G__9746__a = new Array(arguments.length -  3);
while (G__9746__i < G__9746__a.length) {G__9746__a[G__9746__i] = arguments[G__9746__i + 3]; ++G__9746__i;}
  ds = new cljs.core.IndexedSeq(G__9746__a,0);
} 
return G__9745__delegate.call(this,a,b,c,ds);};
G__9745.cljs$lang$maxFixedArity = 3;
G__9745.cljs$lang$applyTo = (function (arglist__9747){
var a = cljs.core.first(arglist__9747);
arglist__9747 = cljs.core.next(arglist__9747);
var b = cljs.core.first(arglist__9747);
arglist__9747 = cljs.core.next(arglist__9747);
var c = cljs.core.first(arglist__9747);
var ds = cljs.core.rest(arglist__9747);
return G__9745__delegate(a,b,c,ds);
});
G__9745.cljs$core$IFn$_invoke$arity$variadic = G__9745__delegate;
return G__9745;
})()
;
G__9744 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9744__2.call(this,a,b);
case 3:
return G__9744__3.call(this,a,b,c);
default:
var G__9748 = null;
if (arguments.length > 3) {
var G__9749__i = 0, G__9749__a = new Array(arguments.length -  3);
while (G__9749__i < G__9749__a.length) {G__9749__a[G__9749__i] = arguments[G__9749__i + 3]; ++G__9749__i;}
G__9748 = new cljs.core.IndexedSeq(G__9749__a,0);
}
return G__9744__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9744.cljs$lang$maxFixedArity = 3;
G__9744.cljs$lang$applyTo = G__9744__4.cljs$lang$applyTo;
G__9744.cljs$core$IFn$_invoke$arity$2 = G__9744__2;
G__9744.cljs$core$IFn$_invoke$arity$3 = G__9744__3;
G__9744.cljs$core$IFn$_invoke$arity$variadic = G__9744__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9744;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__9750 = null;
var G__9750__2 = (function (a,b){
var G__9733 = (((a == null))?x:a);
var G__9734 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9733,G__9734) : f.call(null,G__9733,G__9734));
});
var G__9750__3 = (function (a,b,c){
var G__9735 = (((a == null))?x:a);
var G__9736 = (((b == null))?y:b);
var G__9737 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9735,G__9736,G__9737) : f.call(null,G__9735,G__9736,G__9737));
});
var G__9750__4 = (function() { 
var G__9751__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__9751 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9752__i = 0, G__9752__a = new Array(arguments.length -  3);
while (G__9752__i < G__9752__a.length) {G__9752__a[G__9752__i] = arguments[G__9752__i + 3]; ++G__9752__i;}
  ds = new cljs.core.IndexedSeq(G__9752__a,0);
} 
return G__9751__delegate.call(this,a,b,c,ds);};
G__9751.cljs$lang$maxFixedArity = 3;
G__9751.cljs$lang$applyTo = (function (arglist__9753){
var a = cljs.core.first(arglist__9753);
arglist__9753 = cljs.core.next(arglist__9753);
var b = cljs.core.first(arglist__9753);
arglist__9753 = cljs.core.next(arglist__9753);
var c = cljs.core.first(arglist__9753);
var ds = cljs.core.rest(arglist__9753);
return G__9751__delegate(a,b,c,ds);
});
G__9751.cljs$core$IFn$_invoke$arity$variadic = G__9751__delegate;
return G__9751;
})()
;
G__9750 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9750__2.call(this,a,b);
case 3:
return G__9750__3.call(this,a,b,c);
default:
var G__9754 = null;
if (arguments.length > 3) {
var G__9755__i = 0, G__9755__a = new Array(arguments.length -  3);
while (G__9755__i < G__9755__a.length) {G__9755__a[G__9755__i] = arguments[G__9755__i + 3]; ++G__9755__i;}
G__9754 = new cljs.core.IndexedSeq(G__9755__a,0);
}
return G__9750__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9750.cljs$lang$maxFixedArity = 3;
G__9750.cljs$lang$applyTo = G__9750__4.cljs$lang$applyTo;
G__9750.cljs$core$IFn$_invoke$arity$2 = G__9750__2;
G__9750.cljs$core$IFn$_invoke$arity$3 = G__9750__3;
G__9750.cljs$core$IFn$_invoke$arity$variadic = G__9750__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9750;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__9786 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__9786) : cljs.core.volatile_BANG_.call(null,G__9786));
})();
return ((function (i){
return (function() {
var G__9816 = null;
var G__9816__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9816__1 = (function (result){
var G__9787 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9787) : rf.call(null,G__9787));
});
var G__9816__2 = (function (result,input){
var G__9788 = result;
var G__9789 = (function (){var G__9790 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__9791 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9790,G__9791) : f.call(null,G__9790,G__9791));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9788,G__9789) : rf.call(null,G__9788,G__9789));
});
G__9816 = function(result,input){
switch(arguments.length){
case 0:
return G__9816__0.call(this);
case 1:
return G__9816__1.call(this,result);
case 2:
return G__9816__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9816.cljs$core$IFn$_invoke$arity$0 = G__9816__0;
G__9816.cljs$core$IFn$_invoke$arity$1 = G__9816__1;
G__9816.cljs$core$IFn$_invoke$arity$2 = G__9816__2;
return G__9816;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__7125__auto___9817 = size;
var i_9818 = (0);
while(true){
if((i_9818 < n__7125__auto___9817)){
cljs.core.chunk_append(b,(function (){var G__9812 = (idx + i_9818);
var G__9813 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9818);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9812,G__9813) : f.call(null,G__9812,G__9813));
})());

var G__9819 = (i_9818 + (1));
i_9818 = G__9819;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9814 = idx;
var G__9815 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9814,G__9815) : f.call(null,G__9814,G__9815));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__9838 = null;
var G__9838__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9838__1 = (function (result){
var G__9832 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9832) : rf.call(null,G__9832));
});
var G__9838__2 = (function (result,input){
var v = (function (){var G__9833 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9833) : f.call(null,G__9833));
})();
if((v == null)){
return result;
} else {
var G__9834 = result;
var G__9835 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9834,G__9835) : rf.call(null,G__9834,G__9835));
}
});
G__9838 = function(result,input){
switch(arguments.length){
case 0:
return G__9838__0.call(this);
case 1:
return G__9838__1.call(this,result);
case 2:
return G__9838__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9838.cljs$core$IFn$_invoke$arity$0 = G__9838__0;
G__9838.cljs$core$IFn$_invoke$arity$1 = G__9838__1;
G__9838.cljs$core$IFn$_invoke$arity$2 = G__9838__2;
return G__9838;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__7125__auto___9839 = size;
var i_9840 = (0);
while(true){
if((i_9840 < n__7125__auto___9839)){
var x_9841 = (function (){var G__9836 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9840);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9836) : f.call(null,G__9836));
})();
if((x_9841 == null)){
} else {
cljs.core.chunk_append(b,x_9841);
}

var G__9842 = (i_9840 + (1));
i_9840 = G__9842;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9837 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9837) : f.call(null,G__9837));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__9843 = this$__$1;
return goog.getUid(G__9843);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__9844 = cljs.core.seq(self__.watches);
var chunk__9845 = null;
var count__9846 = (0);
var i__9847 = (0);
while(true){
if((i__9847 < count__9846)){
var vec__9848 = chunk__9845.cljs$core$IIndexed$_nth$arity$2(null,i__9847);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9848,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9848,(1),null);
var G__9849_9858 = key;
var G__9850_9859 = this$__$1;
var G__9851_9860 = oldval;
var G__9852_9861 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9849_9858,G__9850_9859,G__9851_9860,G__9852_9861) : f.call(null,G__9849_9858,G__9850_9859,G__9851_9860,G__9852_9861));

var G__9862 = seq__9844;
var G__9863 = chunk__9845;
var G__9864 = count__9846;
var G__9865 = (i__9847 + (1));
seq__9844 = G__9862;
chunk__9845 = G__9863;
count__9846 = G__9864;
i__9847 = G__9865;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9844);
if(temp__4126__auto__){
var seq__9844__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9844__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__9844__$1);
var G__9866 = cljs.core.chunk_rest(seq__9844__$1);
var G__9867 = c__7025__auto__;
var G__9868 = cljs.core.count(c__7025__auto__);
var G__9869 = (0);
seq__9844 = G__9866;
chunk__9845 = G__9867;
count__9846 = G__9868;
i__9847 = G__9869;
continue;
} else {
var vec__9853 = cljs.core.first(seq__9844__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9853,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9853,(1),null);
var G__9854_9870 = key;
var G__9855_9871 = this$__$1;
var G__9856_9872 = oldval;
var G__9857_9873 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9854_9870,G__9855_9871,G__9856_9872,G__9857_9873) : f.call(null,G__9854_9870,G__9855_9871,G__9856_9872,G__9857_9873));

var G__9874 = cljs.core.next(seq__9844__$1);
var G__9875 = null;
var G__9876 = (0);
var G__9877 = (0);
seq__9844 = G__9874;
chunk__9845 = G__9875;
count__9846 = G__9876;
i__9847 = G__9877;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__9881__delegate = function (x,p__9878){
var map__9880 = p__9878;
var map__9880__$1 = ((cljs.core.seq_QMARK_(map__9880))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9880):map__9880);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9880__$1,cljs.core.constant$keyword$_COLON_validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9880__$1,cljs.core.constant$keyword$_COLON_meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__9881 = function (x,var_args){
var p__9878 = null;
if (arguments.length > 1) {
var G__9882__i = 0, G__9882__a = new Array(arguments.length -  1);
while (G__9882__i < G__9882__a.length) {G__9882__a[G__9882__i] = arguments[G__9882__i + 1]; ++G__9882__i;}
  p__9878 = new cljs.core.IndexedSeq(G__9882__a,0);
} 
return G__9881__delegate.call(this,x,p__9878);};
G__9881.cljs$lang$maxFixedArity = 1;
G__9881.cljs$lang$applyTo = (function (arglist__9883){
var x = cljs.core.first(arglist__9883);
var p__9878 = cljs.core.rest(arglist__9883);
return G__9881__delegate(x,p__9878);
});
G__9881.cljs$core$IFn$_invoke$arity$variadic = G__9881__delegate;
return G__9881;
})()
;
cljs$core$atom = function(x,var_args){
var p__9878 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__9884 = null;
if (arguments.length > 1) {
var G__9885__i = 0, G__9885__a = new Array(arguments.length -  1);
while (G__9885__i < G__9885__a.length) {G__9885__a[G__9885__i] = arguments[G__9885__i + 1]; ++G__9885__i;}
G__9884 = new cljs.core.IndexedSeq(G__9885__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__9888 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__9888) : validate.call(null,G__9888));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__9889 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__9889) : cljs.core.pr_str.call(null,G__9889));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9896 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9896) : f.call(null,G__9896));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9897 = a.state;
var G__9898 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9897,G__9898) : f.call(null,G__9897,G__9898));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9899 = a.state;
var G__9900 = x;
var G__9901 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9899,G__9900,G__9901) : f.call(null,G__9899,G__9900,G__9901));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__9902__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__9902 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__9903__i = 0, G__9903__a = new Array(arguments.length -  4);
while (G__9903__i < G__9903__a.length) {G__9903__a[G__9903__i] = arguments[G__9903__i + 4]; ++G__9903__i;}
  more = new cljs.core.IndexedSeq(G__9903__a,0);
} 
return G__9902__delegate.call(this,a,f,x,y,more);};
G__9902.cljs$lang$maxFixedArity = 4;
G__9902.cljs$lang$applyTo = (function (arglist__9904){
var a = cljs.core.first(arglist__9904);
arglist__9904 = cljs.core.next(arglist__9904);
var f = cljs.core.first(arglist__9904);
arglist__9904 = cljs.core.next(arglist__9904);
var x = cljs.core.first(arglist__9904);
arglist__9904 = cljs.core.next(arglist__9904);
var y = cljs.core.first(arglist__9904);
var more = cljs.core.rest(arglist__9904);
return G__9902__delegate(a,f,x,y,more);
});
G__9902.cljs$core$IFn$_invoke$arity$variadic = G__9902__delegate;
return G__9902;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__9905 = null;
if (arguments.length > 4) {
var G__9906__i = 0, G__9906__a = new Array(arguments.length -  4);
while (G__9906__i < G__9906__a.length) {G__9906__a[G__9906__i] = arguments[G__9906__i + 4]; ++G__9906__i;}
G__9905 = new cljs.core.IndexedSeq(G__9906__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__9905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9973 = null;
var G__9973__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9973__1 = (function (result){
var G__9940 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9940) : rf.call(null,G__9940));
});
var G__9973__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__9941 = i;
var G__9942 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9941,G__9942) : f.call(null,G__9941,G__9942));
})();
if((v == null)){
return result;
} else {
var G__9943 = result;
var G__9944 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9943,G__9944) : rf.call(null,G__9943,G__9944));
}
});
G__9973 = function(result,input){
switch(arguments.length){
case 0:
return G__9973__0.call(this);
case 1:
return G__9973__1.call(this,result);
case 2:
return G__9973__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9973.cljs$core$IFn$_invoke$arity$0 = G__9973__0;
G__9973.cljs$core$IFn$_invoke$arity$1 = G__9973__1;
G__9973.cljs$core$IFn$_invoke$arity$2 = G__9973__2;
return G__9973;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__7125__auto___9974 = size;
var i_9975 = (0);
while(true){
if((i_9975 < n__7125__auto___9974)){
var x_9976 = (function (){var G__9969 = (idx + i_9975);
var G__9970 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9975);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9969,G__9970) : f.call(null,G__9969,G__9970));
})();
if((x_9976 == null)){
} else {
cljs.core.chunk_append(b,x_9976);
}

var G__9977 = (i_9975 + (1));
i_9975 = G__9977;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9971 = idx;
var G__9972 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9971,G__9972) : f.call(null,G__9971,G__9972));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__10191 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10191) : p.call(null,G__10191));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10193 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10193) : p.call(null,G__10193));
})();
if(cljs.core.truth_(and__6226__auto__)){
var G__10194 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10194) : p.call(null,G__10194));
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10196 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10196) : p.call(null,G__10196));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10198 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10198) : p.call(null,G__10198));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var G__10199 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10199) : p.call(null,G__10199));
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__10368__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__10368 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10369__i = 0, G__10369__a = new Array(arguments.length -  3);
while (G__10369__i < G__10369__a.length) {G__10369__a[G__10369__i] = arguments[G__10369__i + 3]; ++G__10369__i;}
  args = new cljs.core.IndexedSeq(G__10369__a,0);
} 
return G__10368__delegate.call(this,x,y,z,args);};
G__10368.cljs$lang$maxFixedArity = 3;
G__10368.cljs$lang$applyTo = (function (arglist__10370){
var x = cljs.core.first(arglist__10370);
arglist__10370 = cljs.core.next(arglist__10370);
var y = cljs.core.first(arglist__10370);
arglist__10370 = cljs.core.next(arglist__10370);
var z = cljs.core.first(arglist__10370);
var args = cljs.core.rest(arglist__10370);
return G__10368__delegate(x,y,z,args);
});
G__10368.cljs$core$IFn$_invoke$arity$variadic = G__10368__delegate;
return G__10368;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__10371 = null;
if (arguments.length > 3) {
var G__10372__i = 0, G__10372__a = new Array(arguments.length -  3);
while (G__10372__i < G__10372__a.length) {G__10372__a[G__10372__i] = arguments[G__10372__i + 3]; ++G__10372__i;}
G__10371 = new cljs.core.IndexedSeq(G__10372__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10231 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10231) : p1.call(null,G__10231));
})();
if(cljs.core.truth_(and__6226__auto__)){
var G__10232 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10232) : p2.call(null,G__10232));
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10234 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10234) : p1.call(null,G__10234));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10236 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10236) : p1.call(null,G__10236));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var and__6226__auto____$2 = (function (){var G__10238 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10238) : p2.call(null,G__10238));
})();
if(cljs.core.truth_(and__6226__auto____$2)){
var G__10239 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10239) : p2.call(null,G__10239));
} else {
return and__6226__auto____$2;
}
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10241 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10241) : p1.call(null,G__10241));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10243 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10243) : p1.call(null,G__10243));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var and__6226__auto____$2 = (function (){var G__10245 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10245) : p1.call(null,G__10245));
})();
if(cljs.core.truth_(and__6226__auto____$2)){
var and__6226__auto____$3 = (function (){var G__10247 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10247) : p2.call(null,G__10247));
})();
if(cljs.core.truth_(and__6226__auto____$3)){
var and__6226__auto____$4 = (function (){var G__10249 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10249) : p2.call(null,G__10249));
})();
if(cljs.core.truth_(and__6226__auto____$4)){
var G__10250 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10250) : p2.call(null,G__10250));
} else {
return and__6226__auto____$4;
}
} else {
return and__6226__auto____$3;
}
} else {
return and__6226__auto____$2;
}
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__10373__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9978_SHARP_){
var and__6226__auto__ = (function (){var G__10255 = p1__9978_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10255) : p1.call(null,G__10255));
})();
if(cljs.core.truth_(and__6226__auto__)){
var G__10256 = p1__9978_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10256) : p2.call(null,G__10256));
} else {
return and__6226__auto__;
}
}),args)));
};
var G__10373 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10374__i = 0, G__10374__a = new Array(arguments.length -  3);
while (G__10374__i < G__10374__a.length) {G__10374__a[G__10374__i] = arguments[G__10374__i + 3]; ++G__10374__i;}
  args = new cljs.core.IndexedSeq(G__10374__a,0);
} 
return G__10373__delegate.call(this,x,y,z,args);};
G__10373.cljs$lang$maxFixedArity = 3;
G__10373.cljs$lang$applyTo = (function (arglist__10375){
var x = cljs.core.first(arglist__10375);
arglist__10375 = cljs.core.next(arglist__10375);
var y = cljs.core.first(arglist__10375);
arglist__10375 = cljs.core.next(arglist__10375);
var z = cljs.core.first(arglist__10375);
var args = cljs.core.rest(arglist__10375);
return G__10373__delegate(x,y,z,args);
});
G__10373.cljs$core$IFn$_invoke$arity$variadic = G__10373__delegate;
return G__10373;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__10376 = null;
if (arguments.length > 3) {
var G__10377__i = 0, G__10377__a = new Array(arguments.length -  3);
while (G__10377__i < G__10377__a.length) {G__10377__a[G__10377__i] = arguments[G__10377__i + 3]; ++G__10377__i;}
G__10376 = new cljs.core.IndexedSeq(G__10377__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10302 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10302) : p1.call(null,G__10302));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10304 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10304) : p2.call(null,G__10304));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var G__10305 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10305) : p3.call(null,G__10305));
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10307 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10307) : p1.call(null,G__10307));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10309 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10309) : p2.call(null,G__10309));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var and__6226__auto____$2 = (function (){var G__10311 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10311) : p3.call(null,G__10311));
})();
if(cljs.core.truth_(and__6226__auto____$2)){
var and__6226__auto____$3 = (function (){var G__10313 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10313) : p1.call(null,G__10313));
})();
if(cljs.core.truth_(and__6226__auto____$3)){
var and__6226__auto____$4 = (function (){var G__10315 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10315) : p2.call(null,G__10315));
})();
if(cljs.core.truth_(and__6226__auto____$4)){
var G__10316 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10316) : p3.call(null,G__10316));
} else {
return and__6226__auto____$4;
}
} else {
return and__6226__auto____$3;
}
} else {
return and__6226__auto____$2;
}
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__6226__auto__ = (function (){var G__10318 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10318) : p1.call(null,G__10318));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10320 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10320) : p2.call(null,G__10320));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var and__6226__auto____$2 = (function (){var G__10322 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10322) : p3.call(null,G__10322));
})();
if(cljs.core.truth_(and__6226__auto____$2)){
var and__6226__auto____$3 = (function (){var G__10324 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10324) : p1.call(null,G__10324));
})();
if(cljs.core.truth_(and__6226__auto____$3)){
var and__6226__auto____$4 = (function (){var G__10326 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10326) : p2.call(null,G__10326));
})();
if(cljs.core.truth_(and__6226__auto____$4)){
var and__6226__auto____$5 = (function (){var G__10328 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10328) : p3.call(null,G__10328));
})();
if(cljs.core.truth_(and__6226__auto____$5)){
var and__6226__auto____$6 = (function (){var G__10330 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10330) : p1.call(null,G__10330));
})();
if(cljs.core.truth_(and__6226__auto____$6)){
var and__6226__auto____$7 = (function (){var G__10332 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10332) : p2.call(null,G__10332));
})();
if(cljs.core.truth_(and__6226__auto____$7)){
var G__10333 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10333) : p3.call(null,G__10333));
} else {
return and__6226__auto____$7;
}
} else {
return and__6226__auto____$6;
}
} else {
return and__6226__auto____$5;
}
} else {
return and__6226__auto____$4;
}
} else {
return and__6226__auto____$3;
}
} else {
return and__6226__auto____$2;
}
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__10378__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9979_SHARP_){
var and__6226__auto__ = (function (){var G__10340 = p1__9979_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10340) : p1.call(null,G__10340));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10342 = p1__9979_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10342) : p2.call(null,G__10342));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var G__10343 = p1__9979_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10343) : p3.call(null,G__10343));
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
}),args)));
};
var G__10378 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10379__i = 0, G__10379__a = new Array(arguments.length -  3);
while (G__10379__i < G__10379__a.length) {G__10379__a[G__10379__i] = arguments[G__10379__i + 3]; ++G__10379__i;}
  args = new cljs.core.IndexedSeq(G__10379__a,0);
} 
return G__10378__delegate.call(this,x,y,z,args);};
G__10378.cljs$lang$maxFixedArity = 3;
G__10378.cljs$lang$applyTo = (function (arglist__10380){
var x = cljs.core.first(arglist__10380);
arglist__10380 = cljs.core.next(arglist__10380);
var y = cljs.core.first(arglist__10380);
arglist__10380 = cljs.core.next(arglist__10380);
var z = cljs.core.first(arglist__10380);
var args = cljs.core.rest(arglist__10380);
return G__10378__delegate(x,y,z,args);
});
G__10378.cljs$core$IFn$_invoke$arity$variadic = G__10378__delegate;
return G__10378;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__10381 = null;
if (arguments.length > 3) {
var G__10382__i = 0, G__10382__a = new Array(arguments.length -  3);
while (G__10382__i < G__10382__a.length) {G__10382__a[G__10382__i] = arguments[G__10382__i + 3]; ++G__10382__i;}
G__10381 = new cljs.core.IndexedSeq(G__10382__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__10383__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9980_SHARP_){
var G__10359 = x;
return (p1__9980_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9980_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10359) : p1__9980_SHARP_.call(null,G__10359));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9981_SHARP_){
var and__6226__auto__ = (function (){var G__10361 = x;
return (p1__9981_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9981_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10361) : p1__9981_SHARP_.call(null,G__10361));
})();
if(cljs.core.truth_(and__6226__auto__)){
var G__10362 = y;
return (p1__9981_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9981_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10362) : p1__9981_SHARP_.call(null,G__10362));
} else {
return and__6226__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9982_SHARP_){
var and__6226__auto__ = (function (){var G__10364 = x;
return (p1__9982_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9982_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10364) : p1__9982_SHARP_.call(null,G__10364));
})();
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__10366 = y;
return (p1__9982_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9982_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10366) : p1__9982_SHARP_.call(null,G__10366));
})();
if(cljs.core.truth_(and__6226__auto____$1)){
var G__10367 = z;
return (p1__9982_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9982_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10367) : p1__9982_SHARP_.call(null,G__10367));
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__10384__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9983_SHARP_){
return cljs.core.every_QMARK_(p1__9983_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10384 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10385__i = 0, G__10385__a = new Array(arguments.length -  3);
while (G__10385__i < G__10385__a.length) {G__10385__a[G__10385__i] = arguments[G__10385__i + 3]; ++G__10385__i;}
  args = new cljs.core.IndexedSeq(G__10385__a,0);
} 
return G__10384__delegate.call(this,x,y,z,args);};
G__10384.cljs$lang$maxFixedArity = 3;
G__10384.cljs$lang$applyTo = (function (arglist__10386){
var x = cljs.core.first(arglist__10386);
arglist__10386 = cljs.core.next(arglist__10386);
var y = cljs.core.first(arglist__10386);
arglist__10386 = cljs.core.next(arglist__10386);
var z = cljs.core.first(arglist__10386);
var args = cljs.core.rest(arglist__10386);
return G__10384__delegate(x,y,z,args);
});
G__10384.cljs$core$IFn$_invoke$arity$variadic = G__10384__delegate;
return G__10384;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__10387 = null;
if (arguments.length > 3) {
var G__10388__i = 0, G__10388__a = new Array(arguments.length -  3);
while (G__10388__i < G__10388__a.length) {G__10388__a[G__10388__i] = arguments[G__10388__i + 3]; ++G__10388__i;}
G__10387 = new cljs.core.IndexedSeq(G__10388__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10387);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__10383 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10389__i = 0, G__10389__a = new Array(arguments.length -  3);
while (G__10389__i < G__10389__a.length) {G__10389__a[G__10389__i] = arguments[G__10389__i + 3]; ++G__10389__i;}
  ps = new cljs.core.IndexedSeq(G__10389__a,0);
} 
return G__10383__delegate.call(this,p1,p2,p3,ps);};
G__10383.cljs$lang$maxFixedArity = 3;
G__10383.cljs$lang$applyTo = (function (arglist__10390){
var p1 = cljs.core.first(arglist__10390);
arglist__10390 = cljs.core.next(arglist__10390);
var p2 = cljs.core.first(arglist__10390);
arglist__10390 = cljs.core.next(arglist__10390);
var p3 = cljs.core.first(arglist__10390);
var ps = cljs.core.rest(arglist__10390);
return G__10383__delegate(p1,p2,p3,ps);
});
G__10383.cljs$core$IFn$_invoke$arity$variadic = G__10383__delegate;
return G__10383;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__10391 = null;
if (arguments.length > 3) {
var G__10392__i = 0, G__10392__a = new Array(arguments.length -  3);
while (G__10392__i < G__10392__a.length) {G__10392__a[G__10392__i] = arguments[G__10392__i + 3]; ++G__10392__i;}
G__10391 = new cljs.core.IndexedSeq(G__10392__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__10598 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10598) : p.call(null,G__10598));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__6238__auto__ = (function (){var G__10600 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10600) : p.call(null,G__10600));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var G__10601 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10601) : p.call(null,G__10601));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__6238__auto__ = (function (){var G__10603 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10603) : p.call(null,G__10603));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10605 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10605) : p.call(null,G__10605));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var G__10606 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10606) : p.call(null,G__10606));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__10767__delegate = function (x,y,z,args){
var or__6238__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__10767 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10768__i = 0, G__10768__a = new Array(arguments.length -  3);
while (G__10768__i < G__10768__a.length) {G__10768__a[G__10768__i] = arguments[G__10768__i + 3]; ++G__10768__i;}
  args = new cljs.core.IndexedSeq(G__10768__a,0);
} 
return G__10767__delegate.call(this,x,y,z,args);};
G__10767.cljs$lang$maxFixedArity = 3;
G__10767.cljs$lang$applyTo = (function (arglist__10769){
var x = cljs.core.first(arglist__10769);
arglist__10769 = cljs.core.next(arglist__10769);
var y = cljs.core.first(arglist__10769);
arglist__10769 = cljs.core.next(arglist__10769);
var z = cljs.core.first(arglist__10769);
var args = cljs.core.rest(arglist__10769);
return G__10767__delegate(x,y,z,args);
});
G__10767.cljs$core$IFn$_invoke$arity$variadic = G__10767__delegate;
return G__10767;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__10770 = null;
if (arguments.length > 3) {
var G__10771__i = 0, G__10771__a = new Array(arguments.length -  3);
while (G__10771__i < G__10771__a.length) {G__10771__a[G__10771__i] = arguments[G__10771__i + 3]; ++G__10771__i;}
G__10770 = new cljs.core.IndexedSeq(G__10771__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__6238__auto__ = (function (){var G__10638 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10638) : p1.call(null,G__10638));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var G__10639 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10639) : p2.call(null,G__10639));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__6238__auto__ = (function (){var G__10641 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10641) : p1.call(null,G__10641));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10643 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10643) : p1.call(null,G__10643));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var or__6238__auto____$2 = (function (){var G__10645 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10645) : p2.call(null,G__10645));
})();
if(cljs.core.truth_(or__6238__auto____$2)){
return or__6238__auto____$2;
} else {
var G__10646 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10646) : p2.call(null,G__10646));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__6238__auto__ = (function (){var G__10648 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10648) : p1.call(null,G__10648));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10650 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10650) : p1.call(null,G__10650));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var or__6238__auto____$2 = (function (){var G__10652 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10652) : p1.call(null,G__10652));
})();
if(cljs.core.truth_(or__6238__auto____$2)){
return or__6238__auto____$2;
} else {
var or__6238__auto____$3 = (function (){var G__10654 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10654) : p2.call(null,G__10654));
})();
if(cljs.core.truth_(or__6238__auto____$3)){
return or__6238__auto____$3;
} else {
var or__6238__auto____$4 = (function (){var G__10656 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10656) : p2.call(null,G__10656));
})();
if(cljs.core.truth_(or__6238__auto____$4)){
return or__6238__auto____$4;
} else {
var G__10657 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10657) : p2.call(null,G__10657));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__10772__delegate = function (x,y,z,args){
var or__6238__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.some(((function (or__6238__auto__){
return (function (p1__10393_SHARP_){
var or__6238__auto____$1 = (function (){var G__10659 = p1__10393_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10659) : p1.call(null,G__10659));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var G__10660 = p1__10393_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10660) : p2.call(null,G__10660));
}
});})(or__6238__auto__))
,args);
}
};
var G__10772 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10773__i = 0, G__10773__a = new Array(arguments.length -  3);
while (G__10773__i < G__10773__a.length) {G__10773__a[G__10773__i] = arguments[G__10773__i + 3]; ++G__10773__i;}
  args = new cljs.core.IndexedSeq(G__10773__a,0);
} 
return G__10772__delegate.call(this,x,y,z,args);};
G__10772.cljs$lang$maxFixedArity = 3;
G__10772.cljs$lang$applyTo = (function (arglist__10774){
var x = cljs.core.first(arglist__10774);
arglist__10774 = cljs.core.next(arglist__10774);
var y = cljs.core.first(arglist__10774);
arglist__10774 = cljs.core.next(arglist__10774);
var z = cljs.core.first(arglist__10774);
var args = cljs.core.rest(arglist__10774);
return G__10772__delegate(x,y,z,args);
});
G__10772.cljs$core$IFn$_invoke$arity$variadic = G__10772__delegate;
return G__10772;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__10775 = null;
if (arguments.length > 3) {
var G__10776__i = 0, G__10776__a = new Array(arguments.length -  3);
while (G__10776__i < G__10776__a.length) {G__10776__a[G__10776__i] = arguments[G__10776__i + 3]; ++G__10776__i;}
G__10775 = new cljs.core.IndexedSeq(G__10776__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__6238__auto__ = (function (){var G__10706 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10706) : p1.call(null,G__10706));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10708 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10708) : p2.call(null,G__10708));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var G__10709 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10709) : p3.call(null,G__10709));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__6238__auto__ = (function (){var G__10711 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10711) : p1.call(null,G__10711));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10713 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10713) : p2.call(null,G__10713));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var or__6238__auto____$2 = (function (){var G__10715 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10715) : p3.call(null,G__10715));
})();
if(cljs.core.truth_(or__6238__auto____$2)){
return or__6238__auto____$2;
} else {
var or__6238__auto____$3 = (function (){var G__10717 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10717) : p1.call(null,G__10717));
})();
if(cljs.core.truth_(or__6238__auto____$3)){
return or__6238__auto____$3;
} else {
var or__6238__auto____$4 = (function (){var G__10719 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10719) : p2.call(null,G__10719));
})();
if(cljs.core.truth_(or__6238__auto____$4)){
return or__6238__auto____$4;
} else {
var G__10720 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10720) : p3.call(null,G__10720));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__6238__auto__ = (function (){var G__10722 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10722) : p1.call(null,G__10722));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10724 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10724) : p2.call(null,G__10724));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var or__6238__auto____$2 = (function (){var G__10726 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10726) : p3.call(null,G__10726));
})();
if(cljs.core.truth_(or__6238__auto____$2)){
return or__6238__auto____$2;
} else {
var or__6238__auto____$3 = (function (){var G__10728 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10728) : p1.call(null,G__10728));
})();
if(cljs.core.truth_(or__6238__auto____$3)){
return or__6238__auto____$3;
} else {
var or__6238__auto____$4 = (function (){var G__10730 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10730) : p2.call(null,G__10730));
})();
if(cljs.core.truth_(or__6238__auto____$4)){
return or__6238__auto____$4;
} else {
var or__6238__auto____$5 = (function (){var G__10732 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10732) : p3.call(null,G__10732));
})();
if(cljs.core.truth_(or__6238__auto____$5)){
return or__6238__auto____$5;
} else {
var or__6238__auto____$6 = (function (){var G__10734 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10734) : p1.call(null,G__10734));
})();
if(cljs.core.truth_(or__6238__auto____$6)){
return or__6238__auto____$6;
} else {
var or__6238__auto____$7 = (function (){var G__10736 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10736) : p2.call(null,G__10736));
})();
if(cljs.core.truth_(or__6238__auto____$7)){
return or__6238__auto____$7;
} else {
var G__10737 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10737) : p3.call(null,G__10737));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__10777__delegate = function (x,y,z,args){
var or__6238__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.some(((function (or__6238__auto__){
return (function (p1__10394_SHARP_){
var or__6238__auto____$1 = (function (){var G__10739 = p1__10394_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10739) : p1.call(null,G__10739));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var or__6238__auto____$2 = (function (){var G__10741 = p1__10394_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10741) : p2.call(null,G__10741));
})();
if(cljs.core.truth_(or__6238__auto____$2)){
return or__6238__auto____$2;
} else {
var G__10742 = p1__10394_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10742) : p3.call(null,G__10742));
}
}
});})(or__6238__auto__))
,args);
}
};
var G__10777 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10778__i = 0, G__10778__a = new Array(arguments.length -  3);
while (G__10778__i < G__10778__a.length) {G__10778__a[G__10778__i] = arguments[G__10778__i + 3]; ++G__10778__i;}
  args = new cljs.core.IndexedSeq(G__10778__a,0);
} 
return G__10777__delegate.call(this,x,y,z,args);};
G__10777.cljs$lang$maxFixedArity = 3;
G__10777.cljs$lang$applyTo = (function (arglist__10779){
var x = cljs.core.first(arglist__10779);
arglist__10779 = cljs.core.next(arglist__10779);
var y = cljs.core.first(arglist__10779);
arglist__10779 = cljs.core.next(arglist__10779);
var z = cljs.core.first(arglist__10779);
var args = cljs.core.rest(arglist__10779);
return G__10777__delegate(x,y,z,args);
});
G__10777.cljs$core$IFn$_invoke$arity$variadic = G__10777__delegate;
return G__10777;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__10780 = null;
if (arguments.length > 3) {
var G__10781__i = 0, G__10781__a = new Array(arguments.length -  3);
while (G__10781__i < G__10781__a.length) {G__10781__a[G__10781__i] = arguments[G__10781__i + 3]; ++G__10781__i;}
G__10780 = new cljs.core.IndexedSeq(G__10781__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__10782__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10395_SHARP_){
var G__10758 = x;
return (p1__10395_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10395_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10758) : p1__10395_SHARP_.call(null,G__10758));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10396_SHARP_){
var or__6238__auto__ = (function (){var G__10760 = x;
return (p1__10396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10396_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10760) : p1__10396_SHARP_.call(null,G__10760));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var G__10761 = y;
return (p1__10396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10396_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10761) : p1__10396_SHARP_.call(null,G__10761));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10397_SHARP_){
var or__6238__auto__ = (function (){var G__10763 = x;
return (p1__10397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10763) : p1__10397_SHARP_.call(null,G__10763));
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var G__10765 = y;
return (p1__10397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10765) : p1__10397_SHARP_.call(null,G__10765));
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var G__10766 = z;
return (p1__10397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10766) : p1__10397_SHARP_.call(null,G__10766));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__10783__delegate = function (x,y,z,args){
var or__6238__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.some(((function (or__6238__auto__,ps__$1){
return (function (p1__10398_SHARP_){
return cljs.core.some(p1__10398_SHARP_,args);
});})(or__6238__auto__,ps__$1))
,ps__$1);
}
};
var G__10783 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10784__i = 0, G__10784__a = new Array(arguments.length -  3);
while (G__10784__i < G__10784__a.length) {G__10784__a[G__10784__i] = arguments[G__10784__i + 3]; ++G__10784__i;}
  args = new cljs.core.IndexedSeq(G__10784__a,0);
} 
return G__10783__delegate.call(this,x,y,z,args);};
G__10783.cljs$lang$maxFixedArity = 3;
G__10783.cljs$lang$applyTo = (function (arglist__10785){
var x = cljs.core.first(arglist__10785);
arglist__10785 = cljs.core.next(arglist__10785);
var y = cljs.core.first(arglist__10785);
arglist__10785 = cljs.core.next(arglist__10785);
var z = cljs.core.first(arglist__10785);
var args = cljs.core.rest(arglist__10785);
return G__10783__delegate(x,y,z,args);
});
G__10783.cljs$core$IFn$_invoke$arity$variadic = G__10783__delegate;
return G__10783;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__10786 = null;
if (arguments.length > 3) {
var G__10787__i = 0, G__10787__a = new Array(arguments.length -  3);
while (G__10787__i < G__10787__a.length) {G__10787__a[G__10787__i] = arguments[G__10787__i + 3]; ++G__10787__i;}
G__10786 = new cljs.core.IndexedSeq(G__10787__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__10782 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10788__i = 0, G__10788__a = new Array(arguments.length -  3);
while (G__10788__i < G__10788__a.length) {G__10788__a[G__10788__i] = arguments[G__10788__i + 3]; ++G__10788__i;}
  ps = new cljs.core.IndexedSeq(G__10788__a,0);
} 
return G__10782__delegate.call(this,p1,p2,p3,ps);};
G__10782.cljs$lang$maxFixedArity = 3;
G__10782.cljs$lang$applyTo = (function (arglist__10789){
var p1 = cljs.core.first(arglist__10789);
arglist__10789 = cljs.core.next(arglist__10789);
var p2 = cljs.core.first(arglist__10789);
arglist__10789 = cljs.core.next(arglist__10789);
var p3 = cljs.core.first(arglist__10789);
var ps = cljs.core.rest(arglist__10789);
return G__10782__delegate(p1,p2,p3,ps);
});
G__10782.cljs$core$IFn$_invoke$arity$variadic = G__10782__delegate;
return G__10782;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__10790 = null;
if (arguments.length > 3) {
var G__10791__i = 0, G__10791__a = new Array(arguments.length -  3);
while (G__10791__i < G__10791__a.length) {G__10791__a[G__10791__i] = arguments[G__10791__i + 3]; ++G__10791__i;}
G__10790 = new cljs.core.IndexedSeq(G__10791__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__10846 = null;
var G__10846__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10846__1 = (function (result){
var G__10832 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10832) : rf.call(null,G__10832));
});
var G__10846__2 = (function (result,input){
var G__10833 = result;
var G__10834 = (function (){var G__10835 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10835) : f.call(null,G__10835));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10833,G__10834) : rf.call(null,G__10833,G__10834));
});
var G__10846__3 = (function() { 
var G__10847__delegate = function (result,input,inputs){
var G__10836 = result;
var G__10837 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10836,G__10837) : rf.call(null,G__10836,G__10837));
};
var G__10847 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__10848__i = 0, G__10848__a = new Array(arguments.length -  2);
while (G__10848__i < G__10848__a.length) {G__10848__a[G__10848__i] = arguments[G__10848__i + 2]; ++G__10848__i;}
  inputs = new cljs.core.IndexedSeq(G__10848__a,0);
} 
return G__10847__delegate.call(this,result,input,inputs);};
G__10847.cljs$lang$maxFixedArity = 2;
G__10847.cljs$lang$applyTo = (function (arglist__10849){
var result = cljs.core.first(arglist__10849);
arglist__10849 = cljs.core.next(arglist__10849);
var input = cljs.core.first(arglist__10849);
var inputs = cljs.core.rest(arglist__10849);
return G__10847__delegate(result,input,inputs);
});
G__10847.cljs$core$IFn$_invoke$arity$variadic = G__10847__delegate;
return G__10847;
})()
;
G__10846 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__10846__0.call(this);
case 1:
return G__10846__1.call(this,result);
case 2:
return G__10846__2.call(this,result,input);
default:
var G__10850 = null;
if (arguments.length > 2) {
var G__10851__i = 0, G__10851__a = new Array(arguments.length -  2);
while (G__10851__i < G__10851__a.length) {G__10851__a[G__10851__i] = arguments[G__10851__i + 2]; ++G__10851__i;}
G__10850 = new cljs.core.IndexedSeq(G__10851__a,0);
}
return G__10846__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__10850);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10846.cljs$lang$maxFixedArity = 2;
G__10846.cljs$lang$applyTo = G__10846__3.cljs$lang$applyTo;
G__10846.cljs$core$IFn$_invoke$arity$0 = G__10846__0;
G__10846.cljs$core$IFn$_invoke$arity$1 = G__10846__1;
G__10846.cljs$core$IFn$_invoke$arity$2 = G__10846__2;
G__10846.cljs$core$IFn$_invoke$arity$variadic = G__10846__3.cljs$core$IFn$_invoke$arity$variadic;
return G__10846;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__7125__auto___10852 = size;
var i_10853 = (0);
while(true){
if((i_10853 < n__7125__auto___10852)){
cljs.core.chunk_append(b,(function (){var G__10838 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10853);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10838) : f.call(null,G__10838));
})());

var G__10854 = (i_10853 + (1));
i_10853 = G__10854;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10839 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10839) : f.call(null,G__10839));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__10840 = cljs.core.first(s1);
var G__10841 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10840,G__10841) : f.call(null,G__10840,G__10841));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__10842 = cljs.core.first(s1);
var G__10843 = cljs.core.first(s2);
var G__10844 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10842,G__10843,G__10844) : f.call(null,G__10842,G__10843,G__10844));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__10855__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__10792_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__10792_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__10855 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10856__i = 0, G__10856__a = new Array(arguments.length -  4);
while (G__10856__i < G__10856__a.length) {G__10856__a[G__10856__i] = arguments[G__10856__i + 4]; ++G__10856__i;}
  colls = new cljs.core.IndexedSeq(G__10856__a,0);
} 
return G__10855__delegate.call(this,f,c1,c2,c3,colls);};
G__10855.cljs$lang$maxFixedArity = 4;
G__10855.cljs$lang$applyTo = (function (arglist__10857){
var f = cljs.core.first(arglist__10857);
arglist__10857 = cljs.core.next(arglist__10857);
var c1 = cljs.core.first(arglist__10857);
arglist__10857 = cljs.core.next(arglist__10857);
var c2 = cljs.core.first(arglist__10857);
arglist__10857 = cljs.core.next(arglist__10857);
var c3 = cljs.core.first(arglist__10857);
var colls = cljs.core.rest(arglist__10857);
return G__10855__delegate(f,c1,c2,c3,colls);
});
G__10855.cljs$core$IFn$_invoke$arity$variadic = G__10855__delegate;
return G__10855;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__10858 = null;
if (arguments.length > 4) {
var G__10859__i = 0, G__10859__a = new Array(arguments.length -  4);
while (G__10859__i < G__10859__a.length) {G__10859__a[G__10859__i] = arguments[G__10859__i + 4]; ++G__10859__i;}
G__10858 = new cljs.core.IndexedSeq(G__10859__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10868 = null;
var G__10868__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10868__1 = (function (result){
var G__10865 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10865) : rf.call(null,G__10865));
});
var G__10868__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__10866 = result;
var G__10867 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10866,G__10867) : rf.call(null,G__10866,G__10867));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__10868 = function(result,input){
switch(arguments.length){
case 0:
return G__10868__0.call(this);
case 1:
return G__10868__1.call(this,result);
case 2:
return G__10868__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10868.cljs$core$IFn$_invoke$arity$0 = G__10868__0;
G__10868.cljs$core$IFn$_invoke$arity$1 = G__10868__1;
G__10868.cljs$core$IFn$_invoke$arity$2 = G__10868__2;
return G__10868;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10875 = null;
var G__10875__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10875__1 = (function (result){
var G__10872 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10872) : rf.call(null,G__10872));
});
var G__10875__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__10873 = result;
var G__10874 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10873,G__10874) : rf.call(null,G__10873,G__10874));
}
});
G__10875 = function(result,input){
switch(arguments.length){
case 0:
return G__10875__0.call(this);
case 1:
return G__10875__1.call(this,result);
case 2:
return G__10875__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10875.cljs$core$IFn$_invoke$arity$0 = G__10875__0;
G__10875.cljs$core$IFn$_invoke$arity$1 = G__10875__1;
G__10875.cljs$core$IFn$_invoke$arity$2 = G__10875__2;
return G__10875;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__10876 = (n__$1 - (1));
var G__10877 = cljs.core.rest(s);
n__$1 = G__10876;
coll__$1 = G__10877;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__10880 = cljs.core.next(s);
var G__10881 = cljs.core.next(lead);
s = G__10880;
lead = G__10881;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__10894 = null;
var G__10894__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10894__1 = (function (result){
var G__10888 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10888) : rf.call(null,G__10888));
});
var G__10894__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__6226__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__6226__auto__)){
var G__10889 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10889) : pred.call(null,G__10889));
} else {
return and__6226__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__10890 = result;
var G__10891 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10890,G__10891) : rf.call(null,G__10890,G__10891));
}
});
G__10894 = function(result,input){
switch(arguments.length){
case 0:
return G__10894__0.call(this);
case 1:
return G__10894__1.call(this,result);
case 2:
return G__10894__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10894.cljs$core$IFn$_invoke$arity$0 = G__10894__0;
G__10894.cljs$core$IFn$_invoke$arity$1 = G__10894__1;
G__10894.cljs$core$IFn$_invoke$arity$2 = G__10894__2;
return G__10894;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__6226__auto__ = s;
if(and__6226__auto__){
var G__10893 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10893) : pred__$1.call(null,G__10893));
} else {
return and__6226__auto__;
}
})())){
var G__10895 = pred__$1;
var G__10896 = cljs.core.rest(s);
pred__$1 = G__10895;
coll__$1 = G__10896;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__10905 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10905) : f.call(null,G__10905));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__10908__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__10908 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__10909__i = 0, G__10909__a = new Array(arguments.length -  2);
while (G__10909__i < G__10909__a.length) {G__10909__a[G__10909__i] = arguments[G__10909__i + 2]; ++G__10909__i;}
  colls = new cljs.core.IndexedSeq(G__10909__a,0);
} 
return G__10908__delegate.call(this,c1,c2,colls);};
G__10908.cljs$lang$maxFixedArity = 2;
G__10908.cljs$lang$applyTo = (function (arglist__10910){
var c1 = cljs.core.first(arglist__10910);
arglist__10910 = cljs.core.next(arglist__10910);
var c2 = cljs.core.first(arglist__10910);
var colls = cljs.core.rest(arglist__10910);
return G__10908__delegate(c1,c2,colls);
});
G__10908.cljs$core$IFn$_invoke$arity$variadic = G__10908__delegate;
return G__10908;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__10911 = null;
if (arguments.length > 2) {
var G__10912__i = 0, G__10912__a = new Array(arguments.length -  2);
while (G__10912__i < G__10912__a.length) {G__10912__a[G__10912__i] = arguments[G__10912__i + 2]; ++G__10912__i;}
G__10911 = new cljs.core.IndexedSeq(G__10912__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__10911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__10927 = null;
var G__10927__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10927__1 = (function (result){
var G__10920 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10920) : rf.call(null,G__10920));
});
var G__10927__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__10921 = result;
var G__10922 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10921,G__10922) : rf.call(null,G__10921,G__10922));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__10923 = sepr;
var G__10924 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10923,G__10924) : rf.call(null,G__10923,G__10924));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__10925 = result;
var G__10926 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10925,G__10926) : rf.call(null,G__10925,G__10926));
}
});
G__10927 = function(result,input){
switch(arguments.length){
case 0:
return G__10927__0.call(this);
case 1:
return G__10927__1.call(this,result);
case 2:
return G__10927__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10927.cljs$core$IFn$_invoke$arity$0 = G__10927__0;
G__10927.cljs$core$IFn$_invoke$arity$1 = G__10927__1;
G__10927.cljs$core$IFn$_invoke$arity$2 = G__10927__2;
return G__10927;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__10936__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__10936 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__10937__i = 0, G__10937__a = new Array(arguments.length -  1);
while (G__10937__i < G__10937__a.length) {G__10937__a[G__10937__i] = arguments[G__10937__i + 1]; ++G__10937__i;}
  colls = new cljs.core.IndexedSeq(G__10937__a,0);
} 
return G__10936__delegate.call(this,f,colls);};
G__10936.cljs$lang$maxFixedArity = 1;
G__10936.cljs$lang$applyTo = (function (arglist__10938){
var f = cljs.core.first(arglist__10938);
var colls = cljs.core.rest(arglist__10938);
return G__10936__delegate(f,colls);
});
G__10936.cljs$core$IFn$_invoke$arity$variadic = G__10936__delegate;
return G__10936;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__10939 = null;
if (arguments.length > 1) {
var G__10940__i = 0, G__10940__a = new Array(arguments.length -  1);
while (G__10940__i < G__10940__a.length) {G__10940__a[G__10940__i] = arguments[G__10940__i + 1]; ++G__10940__i;}
G__10939 = new cljs.core.IndexedSeq(G__10940__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__10959 = null;
var G__10959__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10959__1 = (function (result){
var G__10953 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10953) : rf.call(null,G__10953));
});
var G__10959__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10954 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10954) : pred.call(null,G__10954));
})())){
var G__10955 = result;
var G__10956 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10955,G__10956) : rf.call(null,G__10955,G__10956));
} else {
return result;
}
});
G__10959 = function(result,input){
switch(arguments.length){
case 0:
return G__10959__0.call(this);
case 1:
return G__10959__1.call(this,result);
case 2:
return G__10959__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10959.cljs$core$IFn$_invoke$arity$0 = G__10959__0;
G__10959.cljs$core$IFn$_invoke$arity$1 = G__10959__1;
G__10959.cljs$core$IFn$_invoke$arity$2 = G__10959__2;
return G__10959;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__7125__auto___10960 = size;
var i_10961 = (0);
while(true){
if((i_10961 < n__7125__auto___10960)){
if(cljs.core.truth_((function (){var G__10957 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10961);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10957) : pred.call(null,G__10957));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10961));
} else {
}

var G__10962 = (i_10961 + (1));
i_10961 = G__10962;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__10958 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10958) : pred.call(null,G__10958));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__10969 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__10969) : branch_QMARK_.call(null,G__10969));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__10970 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__10970) : children.call(null,G__10970));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__10971_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__10971_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__10974 = to;
if(G__10974){
var bit__6912__auto__ = (G__10974.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6912__auto__) || (G__10974.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__10975 = to;
if(G__10975){
var bit__6912__auto__ = (G__10975.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6912__auto__) || (G__10975.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__10977 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10977) : f.call(null,G__10977));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__10978__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__10978 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10979__i = 0, G__10979__a = new Array(arguments.length -  4);
while (G__10979__i < G__10979__a.length) {G__10979__a[G__10979__i] = arguments[G__10979__i + 4]; ++G__10979__i;}
  colls = new cljs.core.IndexedSeq(G__10979__a,0);
} 
return G__10978__delegate.call(this,f,c1,c2,c3,colls);};
G__10978.cljs$lang$maxFixedArity = 4;
G__10978.cljs$lang$applyTo = (function (arglist__10980){
var f = cljs.core.first(arglist__10980);
arglist__10980 = cljs.core.next(arglist__10980);
var c1 = cljs.core.first(arglist__10980);
arglist__10980 = cljs.core.next(arglist__10980);
var c2 = cljs.core.first(arglist__10980);
arglist__10980 = cljs.core.next(arglist__10980);
var c3 = cljs.core.first(arglist__10980);
var colls = cljs.core.rest(arglist__10980);
return G__10978__delegate(f,c1,c2,c3,colls);
});
G__10978.cljs$core$IFn$_invoke$arity$variadic = G__10978__delegate;
return G__10978;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__10981 = null;
if (arguments.length > 4) {
var G__10982__i = 0, G__10982__a = new Array(arguments.length -  4);
while (G__10982__i < G__10982__a.length) {G__10982__a[G__10982__i] = arguments[G__10982__i + 4]; ++G__10982__i;}
G__10981 = new cljs.core.IndexedSeq(G__10982__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10984 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10984) : pred.call(null,G__10984));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10999 = m__$1;
if(G__10999){
var bit__6919__auto__ = (G__10999.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6919__auto__) || (G__10999.cljs$core$ILookup$)){
return true;
} else {
if((!G__10999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10999);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__11000 = sentinel;
var G__11001 = m__$2;
var G__11002 = cljs.core.next(ks__$1);
sentinel = G__11000;
m__$1 = G__11001;
ks__$1 = G__11002;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__11003,v){
var vec__11008 = p__11003;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11008,(0),null);
var ks = cljs.core.nthnext(vec__11008,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__11009,f){
var vec__11047 = p__11009;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11047,(0),null);
var ks = cljs.core.nthnext(vec__11047,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11048 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11048) : f.call(null,G__11048));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__11010,f,a){
var vec__11049 = p__11010;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11049,(0),null);
var ks = cljs.core.nthnext(vec__11049,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11050 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11051 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11050,G__11051) : f.call(null,G__11050,G__11051));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__11011,f,a,b){
var vec__11052 = p__11011;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11052,(0),null);
var ks = cljs.core.nthnext(vec__11052,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11053 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11054 = a;
var G__11055 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11053,G__11054,G__11055) : f.call(null,G__11053,G__11054,G__11055));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__11012,f,a,b,c){
var vec__11056 = p__11012;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11056,(0),null);
var ks = cljs.core.nthnext(vec__11056,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11057 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11058 = a;
var G__11059 = b;
var G__11060 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11057,G__11058,G__11059,G__11060) : f.call(null,G__11057,G__11058,G__11059,G__11060));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__11062__delegate = function (m,p__11013,f,a,b,c,args){
var vec__11061 = p__11013;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11061,(0),null);
var ks = cljs.core.nthnext(vec__11061,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__11062 = function (m,p__11013,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__11063__i = 0, G__11063__a = new Array(arguments.length -  6);
while (G__11063__i < G__11063__a.length) {G__11063__a[G__11063__i] = arguments[G__11063__i + 6]; ++G__11063__i;}
  args = new cljs.core.IndexedSeq(G__11063__a,0);
} 
return G__11062__delegate.call(this,m,p__11013,f,a,b,c,args);};
G__11062.cljs$lang$maxFixedArity = 6;
G__11062.cljs$lang$applyTo = (function (arglist__11064){
var m = cljs.core.first(arglist__11064);
arglist__11064 = cljs.core.next(arglist__11064);
var p__11013 = cljs.core.first(arglist__11064);
arglist__11064 = cljs.core.next(arglist__11064);
var f = cljs.core.first(arglist__11064);
arglist__11064 = cljs.core.next(arglist__11064);
var a = cljs.core.first(arglist__11064);
arglist__11064 = cljs.core.next(arglist__11064);
var b = cljs.core.first(arglist__11064);
arglist__11064 = cljs.core.next(arglist__11064);
var c = cljs.core.first(arglist__11064);
var args = cljs.core.rest(arglist__11064);
return G__11062__delegate(m,p__11013,f,a,b,c,args);
});
G__11062.cljs$core$IFn$_invoke$arity$variadic = G__11062__delegate;
return G__11062;
})()
;
cljs$core$update_in = function(m,p__11013,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__11013,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__11013,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__11013,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__11013,f,a,b,c);
default:
var G__11065 = null;
if (arguments.length > 6) {
var G__11066__i = 0, G__11066__a = new Array(arguments.length -  6);
while (G__11066__i < G__11066__a.length) {G__11066__a[G__11066__i] = arguments[G__11066__i + 6]; ++G__11066__i;}
G__11065 = new cljs.core.IndexedSeq(G__11066__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__11013,f,a,b,c, G__11065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11077 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11077) : f.call(null,G__11077));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11078 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11079 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11078,G__11079) : f.call(null,G__11078,G__11079));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11080 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11081 = x;
var G__11082 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11080,G__11081,G__11082) : f.call(null,G__11080,G__11081,G__11082));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11083 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11084 = x;
var G__11085 = y;
var G__11086 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11083,G__11084,G__11085,G__11086) : f.call(null,G__11083,G__11084,G__11085,G__11086));
})());
});
var cljs$core$update__7 = (function() { 
var G__11087__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__11087 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__11088__i = 0, G__11088__a = new Array(arguments.length -  6);
while (G__11088__i < G__11088__a.length) {G__11088__a[G__11088__i] = arguments[G__11088__i + 6]; ++G__11088__i;}
  more = new cljs.core.IndexedSeq(G__11088__a,0);
} 
return G__11087__delegate.call(this,m,k,f,x,y,z,more);};
G__11087.cljs$lang$maxFixedArity = 6;
G__11087.cljs$lang$applyTo = (function (arglist__11089){
var m = cljs.core.first(arglist__11089);
arglist__11089 = cljs.core.next(arglist__11089);
var k = cljs.core.first(arglist__11089);
arglist__11089 = cljs.core.next(arglist__11089);
var f = cljs.core.first(arglist__11089);
arglist__11089 = cljs.core.next(arglist__11089);
var x = cljs.core.first(arglist__11089);
arglist__11089 = cljs.core.next(arglist__11089);
var y = cljs.core.first(arglist__11089);
arglist__11089 = cljs.core.next(arglist__11089);
var z = cljs.core.first(arglist__11089);
var more = cljs.core.rest(arglist__11089);
return G__11087__delegate(m,k,f,x,y,z,more);
});
G__11087.cljs$core$IFn$_invoke$arity$variadic = G__11087__delegate;
return G__11087;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__11090 = null;
if (arguments.length > 6) {
var G__11091__i = 0, G__11091__a = new Array(arguments.length -  6);
while (G__11091__i < G__11091__a.length) {G__11091__a[G__11091__i] = arguments[G__11091__i + 6]; ++G__11091__i;}
G__11090 = new cljs.core.IndexedSeq(G__11091__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__11090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__11092 = (ll - (5));
var G__11093 = r;
ll = G__11092;
ret = G__11093;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11098 = cljs.core.pv_aget(node,(0));
var G__11099 = (level - (5));
node = G__11098;
level = G__11099;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11100 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__11101 = (level - (5));
node = G__11100;
level = G__11101;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11111 = init__$2;
var G__11112 = (j + i);
var G__11113 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11111,G__11112,G__11113) : f.call(null,G__11111,G__11112,G__11113));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11124 = (j + (1));
var G__11125 = init__$3;
j = G__11124;
init__$2 = G__11125;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11114 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11114) : cljs.core.deref.call(null,G__11114));
} else {
var G__11126 = (i + len);
var G__11127 = init__$2;
i = G__11126;
init__$1 = G__11127;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__11115 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__11115) : cljs.core.tv_editable_root.call(null,G__11115));
})(),(function (){var G__11116 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__11116) : cljs.core.tv_editable_tail.call(null,G__11116));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11117 = init__$2;
var G__11118 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11117,G__11118) : f.call(null,G__11117,G__11118));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11128 = (j + (1));
var G__11129 = init__$3;
j = G__11128;
init__$2 = G__11129;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11119 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11119) : cljs.core.deref.call(null,G__11119));
} else {
var G__11130 = (i + len);
var G__11131 = init__$2;
i = G__11130;
init__$1 = G__11131;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__11120 = coll__$1;
var G__11121 = cljs.core.first_array_for_longvec(coll__$1);
var G__11122 = (0);
var G__11123 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11120,G__11121,G__11122,G__11123) : cljs.core.chunked_seq.call(null,G__11120,G__11121,G__11122,G__11123));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__7125__auto___11132 = len;
var i_11133 = (0);
while(true){
if((i_11133 < n__7125__auto___11132)){
(new_tail[i_11133] = (self__.tail[i_11133]));

var G__11134 = (i_11133 + (1));
i_11133 = G__11134;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__11135 = null;
var G__11135__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11135__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11135 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11135__2.call(this,self__,k);
case 3:
return G__11135__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11135.cljs$core$IFn$_invoke$arity$2 = G__11135__2;
G__11135.cljs$core$IFn$_invoke$arity$3 = G__11135__3;
return G__11135;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args11110){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11110)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__11136 = (i + (1));
var G__11137 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__11136;
out = G__11137;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11138__i = 0, G__11138__a = new Array(arguments.length -  0);
while (G__11138__i < G__11138__a.length) {G__11138__a[G__11138__i] = arguments[G__11138__i + 0]; ++G__11138__i;}
  args = new cljs.core.IndexedSeq(G__11138__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__11139){
var args = cljs.core.seq(arglist__11139);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11140 = self__.vec;
var G__11141 = self__.node;
var G__11142 = self__.i;
var G__11143 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11140,G__11141,G__11142,G__11143) : cljs.core.chunked_seq.call(null,G__11140,G__11141,G__11142,G__11143));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__11144 = self__.vec;
var G__11145 = (self__.i + self__.off);
var G__11146 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11144,G__11145,G__11146) : cljs.core.subvec.call(null,G__11144,G__11145,G__11146));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__11147 = self__.vec;
var G__11148 = (self__.i + self__.off);
var G__11149 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11147,G__11148,G__11149) : cljs.core.subvec.call(null,G__11147,G__11148,G__11149));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11150 = self__.vec;
var G__11151 = self__.node;
var G__11152 = self__.i;
var G__11153 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11150,G__11151,G__11152,G__11153) : cljs.core.chunked_seq.call(null,G__11150,G__11151,G__11152,G__11153));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11154 = self__.vec;
var G__11155 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11156 = end;
var G__11157 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11154,G__11155,G__11156,G__11157) : cljs.core.chunked_seq.call(null,G__11154,G__11155,G__11156,G__11157));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__11158 = self__.vec;
var G__11159 = self__.node;
var G__11160 = self__.i;
var G__11161 = self__.off;
var G__11162 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__11158,G__11159,G__11160,G__11161,G__11162) : cljs.core.chunked_seq.call(null,G__11158,G__11159,G__11160,G__11161,G__11162));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11163 = self__.vec;
var G__11164 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11165 = end;
var G__11166 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11163,G__11164,G__11165,G__11166) : cljs.core.chunked_seq.call(null,G__11163,G__11164,G__11165,G__11166));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__11168 = self__.meta;
var G__11169 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__11170 = self__.start;
var G__11171 = (function (){var x__6555__auto__ = self__.end;
var y__6556__auto__ = (v_pos + (1));
return ((x__6555__auto__ > y__6556__auto__) ? x__6555__auto__ : y__6556__auto__);
})();
var G__11172 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11168,G__11169,G__11170,G__11171,G__11172) : cljs.core.build_subvec.call(null,G__11168,G__11169,G__11170,G__11171,G__11172));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__11173 = self__.meta;
var G__11174 = self__.v;
var G__11175 = self__.start;
var G__11176 = (self__.end - (1));
var G__11177 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11173,G__11174,G__11175,G__11176,G__11177) : cljs.core.build_subvec.call(null,G__11173,G__11174,G__11175,G__11176,G__11177));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__11179 = meta__$1;
var G__11180 = self__.v;
var G__11181 = self__.start;
var G__11182 = self__.end;
var G__11183 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11179,G__11180,G__11181,G__11182,G__11183) : cljs.core.build_subvec.call(null,G__11179,G__11180,G__11181,G__11182,G__11183));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11184 = self__.meta;
var G__11185 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__11186 = self__.start;
var G__11187 = (self__.end + (1));
var G__11188 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11184,G__11185,G__11186,G__11187,G__11188) : cljs.core.build_subvec.call(null,G__11184,G__11185,G__11186,G__11187,G__11188));
});

cljs.core.Subvec.prototype.call = (function() {
var G__11189 = null;
var G__11189__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11189__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11189 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11189__2.call(this,self__,k);
case 3:
return G__11189__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11189.cljs$core$IFn$_invoke$arity$2 = G__11189__2;
G__11189.cljs$core$IFn$_invoke$arity$3 = G__11189__3;
return G__11189;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args11167){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11167)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__11190 = meta;
var G__11191 = v.v;
var G__11192 = (v.start + start);
var G__11193 = (v.start + end);
var G__11194 = __hash;
meta = G__11190;
v = G__11191;
start = G__11192;
end = G__11193;
__hash = G__11194;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj11201 = {};
return obj11201;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__11209 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__11210 = (level - (5));
node = G__11209;
level = G__11210;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__11214 = null;
var G__11214__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11214__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11214 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11214__2.call(this,self__,k);
case 3:
return G__11214__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11214.cljs$core$IFn$_invoke$arity$2 = G__11214__2;
G__11214.cljs$core$IFn$_invoke$arity$3 = G__11214__3;
return G__11214;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args11211){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11211)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__6238__auto__ = self__.front;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__6238__auto__ = self__.rear;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__11215 = (i + incr);
i = G__11215;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__11216 = (i + (1));
var G__11217 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__11216;
out = G__11217;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj11221 = {};
return obj11221;
})();
var l = ks.length;
var i_11222 = (0);
while(true){
if((i_11222 < l)){
var k_11223 = (ks[i_11222]);
(new_obj[k_11223] = (obj[k_11223]));

var G__11224 = (i_11222 + (1));
i_11222 = G__11224;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__6226__auto__ = (function (){var G__11228 = k;
return goog.isString(G__11228);
})();
if(cljs.core.truth_(and__6226__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__6226__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__11229 = init__$1;
var G__11230 = k;
var G__11231 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11229,G__11230,G__11231) : f.call(null,G__11229,G__11230,G__11231));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11232 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11232) : cljs.core.deref.call(null,G__11232));
} else {
var G__11238 = cljs.core.rest(keys__$1);
var G__11239 = init__$2;
keys__$1 = G__11238;
init__$1 = G__11239;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__6226__auto__ = (function (){var G__11234 = k;
return goog.isString(G__11234);
})();
if(cljs.core.truth_(and__6226__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__6226__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__11235 = k;
return goog.isString(G__11235);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__6226__auto__ = (function (){var G__11237 = k;
return goog.isString(G__11237);
})();
if(cljs.core.truth_(and__6226__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__6226__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__11225_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__11225_SHARP_,(self__.strobj[p1__11225_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__11240 = null;
var G__11240__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11240__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11240 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11240__2.call(this,self__,k);
case 3:
return G__11240__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11240.cljs$core$IFn$_invoke$arity$2 = G__11240__2;
G__11240.cljs$core$IFn$_invoke$arity$3 = G__11240__3;
return G__11240;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args11226){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11226)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj11242 = {};
return obj11242;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__11243 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11243,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11243,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__11244 = (i + (2));
i = G__11244;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__11245 = (i + (2));
i = G__11245;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__11246 = (i + (2));
i = G__11246;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__11247 = (i + (2));
i = G__11247;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__11248 = (i + (2));
i = G__11248;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__6238__auto__ = (function (){var G__11252 = k;
return goog.isString(G__11252);
})();
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_11253 = (0);
while(true){
if((i_11253 < l)){
(narr[i_11253] = (arr[i_11253]));

var G__11254 = (i_11253 + (1));
i_11253 = G__11254;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11256 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11256) : cljs.core.keys.call(null,G__11256));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11257 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11257) : cljs.core.vals.call(null,G__11257));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11258 = cljs.core.seq(coll);
var chunk__11259 = null;
var count__11260 = (0);
var i__11261 = (0);
while(true){
if((i__11261 < count__11260)){
var vec__11262 = chunk__11259.cljs$core$IIndexed$_nth$arity$2(null,i__11261);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11262,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11262,(1),null);
var G__11263_11276 = v;
var G__11264_11277 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11263_11276,G__11264_11277) : f.call(null,G__11263_11276,G__11264_11277));

var G__11278 = seq__11258;
var G__11279 = chunk__11259;
var G__11280 = count__11260;
var G__11281 = (i__11261 + (1));
seq__11258 = G__11278;
chunk__11259 = G__11279;
count__11260 = G__11280;
i__11261 = G__11281;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11258);
if(temp__4126__auto__){
var seq__11258__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11258__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__11258__$1);
var G__11282 = cljs.core.chunk_rest(seq__11258__$1);
var G__11283 = c__7025__auto__;
var G__11284 = cljs.core.count(c__7025__auto__);
var G__11285 = (0);
seq__11258 = G__11282;
chunk__11259 = G__11283;
count__11260 = G__11284;
i__11261 = G__11285;
continue;
} else {
var vec__11265 = cljs.core.first(seq__11258__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11265,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11265,(1),null);
var G__11266_11286 = v;
var G__11267_11287 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11266_11286,G__11267_11287) : f.call(null,G__11266_11286,G__11267_11287));

var G__11288 = cljs.core.next(seq__11258__$1);
var G__11289 = null;
var G__11290 = (0);
var G__11291 = (0);
seq__11258 = G__11288;
chunk__11259 = G__11289;
count__11260 = G__11290;
i__11261 = G__11291;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__11268 = init__$1;
var G__11269 = (self__.arr[i]);
var G__11270 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11268,G__11269,G__11270) : f.call(null,G__11268,G__11269,G__11270));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11271 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11271) : cljs.core.deref.call(null,G__11271));
} else {
var G__11292 = (i + (2));
var G__11293 = init__$2;
i = G__11292;
init__$1 = G__11293;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__11272 = other;
if(G__11272){
var bit__6912__auto__ = (G__11272.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6912__auto__) || (G__11272.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__11294 = (i + (2));
i = G__11294;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj11274 = {};
return obj11274;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__11295 = (s + (2));
var G__11296 = d;
s = G__11295;
d = G__11296;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__11297 = (s + (2));
var G__11298 = (d + (2));
s = G__11297;
d = G__11298;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__11275 = cljs.core.aclone(self__.arr);
(G__11275[(idx + (1))] = v);

return G__11275;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11299 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11300 = cljs.core.next(es);
ret = G__11299;
es = G__11300;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__11301 = null;
var G__11301__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11301__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11301 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11301__2.call(this,self__,k);
case 3:
return G__11301__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11301.cljs$core$IFn$_invoke$arity$2 = G__11301__2;
G__11301.cljs$core$IFn$_invoke$arity$3 = G__11301__3;
return G__11301;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args11255){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11255)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11302 = (i + (2));
var G__11303 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11302;
ret = G__11303;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__11304_11312 = self__.arr;
G__11304_11312.pop();

G__11304_11312.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__11305 = self__.len;
var G__11306 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11305,G__11306) : cljs.core.array__GT_transient_hash_map.call(null,G__11305,G__11306));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__11307 = o;
if(G__11307){
var bit__6919__auto__ = (G__11307.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6919__auto__) || (G__11307.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11307.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11307);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11307);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__11308 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11308) : cljs.core.key.call(null,G__11308));
})(),(function (){var G__11309 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11309) : cljs.core.val.call(null,G__11309));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11313 = cljs.core.next(es);
var G__11314 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__11310 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11310) : cljs.core.key.call(null,G__11310));
})(),(function (){var G__11311 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11311) : cljs.core.val.call(null,G__11311));
})());
es = G__11313;
tcoll__$2 = G__11314;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__11315 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__11316 = (i + (2));
out = G__11315;
i = G__11316;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__11319 = cljs.core.aclone(arr);
(G__11319[i] = a);

return G__11319;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__11320 = cljs.core.aclone(arr);
(G__11320[i] = a);

(G__11320[j] = b);

return G__11320;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__11325 = init__$1;
var G__11326 = k;
var G__11327 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11325,G__11326,G__11327) : f.call(null,G__11325,G__11326,G__11327));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11328 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11328) : cljs.core.deref.call(null,G__11328));
} else {
var G__11329 = (i + (2));
var G__11330 = init__$2;
i = G__11329;
init__$1 = G__11330;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11331 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11331) : cljs.core.create_inode_seq.call(null,G__11331));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11345 = (0);
var j_11346 = (0);
while(true){
if((i_11345 < (32))){
if((((self__.bitmap >>> i_11345) & (1)) === (0))){
var G__11347 = (i_11345 + (1));
var G__11348 = j_11346;
i_11345 = G__11347;
j_11346 = G__11348;
continue;
} else {
(nodes[i_11345] = ((!(((self__.arr[j_11346]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_11346])),(self__.arr[j_11346]),(self__.arr[(j_11346 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11346 + (1))])));

var G__11349 = (i_11345 + (1));
var G__11350 = (j_11346 + (2));
i_11345 = G__11349;
j_11346 = G__11350;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11332 = edit__$1;
var G__11333 = (shift + (5));
var G__11334 = key_or_nil;
var G__11335 = val_or_node;
var G__11336 = hash;
var G__11337 = key;
var G__11338 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338) : cljs.core.create_node.call(null,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11351 = (0);
var j_11352 = (0);
while(true){
if((i_11351 < (32))){
if((((self__.bitmap >>> i_11351) & (1)) === (0))){
var G__11353 = (i_11351 + (1));
var G__11354 = j_11352;
i_11351 = G__11353;
j_11352 = G__11354;
continue;
} else {
(nodes[i_11351] = ((!(((self__.arr[j_11352]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_11352])),(self__.arr[j_11352]),(self__.arr[(j_11352 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11352 + (1))])));

var G__11355 = (i_11351 + (1));
var G__11356 = (j_11352 + (2));
i_11351 = G__11355;
j_11352 = G__11356;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11339 = (shift + (5));
var G__11340 = key_or_nil;
var G__11341 = val_or_node;
var G__11342 = hash;
var G__11343 = key;
var G__11344 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11339,G__11340,G__11341,G__11342,G__11343,G__11344) : cljs.core.create_node.call(null,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__11357 = (i + (1));
var G__11358 = (j + (2));
var G__11359 = (bitmap | ((1) << i));
i = G__11357;
j = G__11358;
bitmap = G__11359;
continue;
} else {
var G__11360 = (i + (1));
var G__11361 = j;
var G__11362 = bitmap;
i = G__11360;
j = G__11361;
bitmap = G__11362;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11363 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11363) : cljs.core.create_array_node_seq.call(null,G__11363));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11364 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11364) : cljs.core.deref.call(null,G__11364));
} else {
var G__11365 = (i + (1));
var G__11366 = init__$2;
i = G__11365;
init__$1 = G__11366;
continue;
}
} else {
var G__11367 = (i + (1));
var G__11368 = init__$1;
i = G__11367;
init__$1 = G__11368;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11369 = (i + (2));
i = G__11369;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11370 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11370) : cljs.core.create_inode_seq.call(null,G__11370));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11371 = self__.nodes;
var G__11372 = (self__.i + (2));
var G__11373 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11371,G__11372,G__11373) : cljs.core.create_inode_seq.call(null,G__11371,G__11372,G__11373));
} else {
var G__11374 = self__.nodes;
var G__11375 = self__.i;
var G__11376 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11374,G__11375,G__11376) : cljs.core.create_inode_seq.call(null,G__11374,G__11375,G__11376));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11380 = (j + (2));
j = G__11380;
continue;
}
} else {
var G__11381 = (j + (2));
j = G__11381;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11382 = null;
var G__11383 = self__.nodes;
var G__11384 = self__.i;
var G__11385 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11382,G__11383,G__11384,G__11385) : cljs.core.create_array_node_seq.call(null,G__11382,G__11383,G__11384,G__11385));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11390 = (j + (1));
j = G__11390;
continue;
}
} else {
var G__11391 = (j + (1));
j = G__11391;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11393 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11393) : cljs.core.keys.call(null,G__11393));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11394 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11394) : cljs.core.vals.call(null,G__11394));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11395 = cljs.core.seq(coll);
var chunk__11396 = null;
var count__11397 = (0);
var i__11398 = (0);
while(true){
if((i__11398 < count__11397)){
var vec__11399 = chunk__11396.cljs$core$IIndexed$_nth$arity$2(null,i__11398);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11399,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11399,(1),null);
var G__11400_11411 = v;
var G__11401_11412 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11400_11411,G__11401_11412) : f.call(null,G__11400_11411,G__11401_11412));

var G__11413 = seq__11395;
var G__11414 = chunk__11396;
var G__11415 = count__11397;
var G__11416 = (i__11398 + (1));
seq__11395 = G__11413;
chunk__11396 = G__11414;
count__11397 = G__11415;
i__11398 = G__11416;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11395);
if(temp__4126__auto__){
var seq__11395__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11395__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__11395__$1);
var G__11417 = cljs.core.chunk_rest(seq__11395__$1);
var G__11418 = c__7025__auto__;
var G__11419 = cljs.core.count(c__7025__auto__);
var G__11420 = (0);
seq__11395 = G__11417;
chunk__11396 = G__11418;
count__11397 = G__11419;
i__11398 = G__11420;
continue;
} else {
var vec__11402 = cljs.core.first(seq__11395__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11402,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11402,(1),null);
var G__11403_11421 = v;
var G__11404_11422 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11403_11421,G__11404_11422) : f.call(null,G__11403_11421,G__11404_11422));

var G__11423 = cljs.core.next(seq__11395__$1);
var G__11424 = null;
var G__11425 = (0);
var G__11426 = (0);
seq__11395 = G__11423;
chunk__11396 = G__11424;
count__11397 = G__11425;
i__11398 = G__11426;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11405 = init;
var G__11406 = null;
var G__11407 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11405,G__11406,G__11407) : f.call(null,G__11405,G__11406,G__11407));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11408 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11408) : cljs.core.deref.call(null,G__11408));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11410 = {};
return obj11410;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11427 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11428 = cljs.core.next(es);
ret = G__11427;
es = G__11428;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11429 = null;
var G__11429__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11429__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11429 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11429__2.call(this,self__,k);
case 3:
return G__11429__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11429.cljs$core$IFn$_invoke$arity$2 = G__11429__2;
G__11429.cljs$core$IFn$_invoke$arity$3 = G__11429__3;
return G__11429;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11392){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11392)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11430 = (i + (2));
var G__11431 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11430;
ret = G__11431;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11432 = (i + (1));
var G__11433 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11432;
out = G__11433;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11434 = o;
if(G__11434){
var bit__6919__auto__ = (G__11434.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6919__auto__) || (G__11434.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11434.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11434);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11434);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11435 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11435) : cljs.core.key.call(null,G__11435));
})(),(function (){var G__11436 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11436) : cljs.core.val.call(null,G__11436));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11439 = cljs.core.next(es);
var G__11440 = tcoll__$1.assoc_BANG_((function (){var G__11437 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11437) : cljs.core.key.call(null,G__11437));
})(),(function (){var G__11438 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11438) : cljs.core.val.call(null,G__11438));
})());
es = G__11439;
tcoll__$1 = G__11440;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11441 = ((ascending_QMARK_)?t.left:t.right);
var G__11442 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11441;
stack__$1 = G__11442;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11455 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11455) : cljs.core.deref.call(null,G__11455));
} else {
var init__$2 = (function (){var G__11456 = init__$1;
var G__11457 = node.key;
var G__11458 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11456,G__11457,G__11458) : f.call(null,G__11456,G__11457,G__11458));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11459 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11459) : cljs.core.deref.call(null,G__11459));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11460 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11460) : cljs.core.deref.call(null,G__11460));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11462 = null;
var G__11462__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11462__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11462 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11462__2.call(this,self__,k);
case 3:
return G__11462__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11462.cljs$core$IFn$_invoke$arity$2 = G__11462__2;
G__11462.cljs$core$IFn$_invoke$arity$3 = G__11462__3;
return G__11462;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11461){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11461)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11464 = null;
var G__11464__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11464__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11464 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11464__2.call(this,self__,k);
case 3:
return G__11464__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11464.cljs$core$IFn$_invoke$arity$2 = G__11464__2;
G__11464.cljs$core$IFn$_invoke$arity$3 = G__11464__3;
return G__11464;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11463){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11463)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11477 = k;
var G__11478 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11477,G__11478) : comp.call(null,G__11477,G__11478));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11497 = k;
var G__11498 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11497,G__11498) : comp.call(null,G__11497,G__11498));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11509 = k;
var G__11510 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11509,G__11510) : comp.call(null,G__11509,G__11510));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11512 = cljs.core.seq(coll);
var chunk__11513 = null;
var count__11514 = (0);
var i__11515 = (0);
while(true){
if((i__11515 < count__11514)){
var vec__11516 = chunk__11513.cljs$core$IIndexed$_nth$arity$2(null,i__11515);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11516,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11516,(1),null);
var G__11517_11529 = v;
var G__11518_11530 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11517_11529,G__11518_11530) : f.call(null,G__11517_11529,G__11518_11530));

var G__11531 = seq__11512;
var G__11532 = chunk__11513;
var G__11533 = count__11514;
var G__11534 = (i__11515 + (1));
seq__11512 = G__11531;
chunk__11513 = G__11532;
count__11514 = G__11533;
i__11515 = G__11534;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11512);
if(temp__4126__auto__){
var seq__11512__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11512__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__11512__$1);
var G__11535 = cljs.core.chunk_rest(seq__11512__$1);
var G__11536 = c__7025__auto__;
var G__11537 = cljs.core.count(c__7025__auto__);
var G__11538 = (0);
seq__11512 = G__11535;
chunk__11513 = G__11536;
count__11514 = G__11537;
i__11515 = G__11538;
continue;
} else {
var vec__11519 = cljs.core.first(seq__11512__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11519,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11519,(1),null);
var G__11520_11539 = v;
var G__11521_11540 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11520_11539,G__11521_11540) : f.call(null,G__11520_11539,G__11521_11540));

var G__11541 = cljs.core.next(seq__11512__$1);
var G__11542 = null;
var G__11543 = (0);
var G__11544 = (0);
seq__11512 = G__11541;
chunk__11513 = G__11542;
count__11514 = G__11543;
i__11515 = G__11544;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11522 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11522) : cljs.core.keys.call(null,G__11522));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11523 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11523) : cljs.core.vals.call(null,G__11523));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11524 = k;
var G__11525 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11524,G__11525) : self__.comp.call(null,G__11524,G__11525));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11545 = t.left;
t = G__11545;
continue;
} else {
var G__11546 = t.right;
t = G__11546;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11547 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11548 = cljs.core.next(es);
ret = G__11547;
es = G__11548;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11549 = null;
var G__11549__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11549__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11549 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11549__2.call(this,self__,k);
case 3:
return G__11549__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11549.cljs$core$IFn$_invoke$arity$2 = G__11549__2;
G__11549.cljs$core$IFn$_invoke$arity$3 = G__11549__3;
return G__11549;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11511){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11511)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11526 = k;
var G__11527 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11526,G__11527) : self__.comp.call(null,G__11526,G__11527));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11550 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11551 = t.left;
stack = G__11550;
t = G__11551;
continue;
} else {
var G__11552 = stack;
var G__11553 = t.right;
stack = G__11552;
t = G__11553;
continue;
}
} else {
if((c > (0))){
var G__11554 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11555 = t.right;
stack = G__11554;
t = G__11555;
continue;
} else {
var G__11556 = stack;
var G__11557 = t.left;
stack = G__11556;
t = G__11557;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11528 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11528) : cljs.core.key.call(null,G__11528));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11558 = cljs.core.nnext(in$);
var G__11559 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11558;
out = G__11559;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11560__i = 0, G__11560__a = new Array(arguments.length -  0);
while (G__11560__i < G__11560__a.length) {G__11560__a[G__11560__i] = arguments[G__11560__i + 0]; ++G__11560__i;}
  keyvals = new cljs.core.IndexedSeq(G__11560__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__11561){
var keyvals = cljs.core.seq(arglist__11561);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11562__i = 0, G__11562__a = new Array(arguments.length -  0);
while (G__11562__i < G__11562__a.length) {G__11562__a[G__11562__i] = arguments[G__11562__i + 0]; ++G__11562__i;}
  keyvals = new cljs.core.IndexedSeq(G__11562__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__11563){
var keyvals = cljs.core.seq(arglist__11563);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11567 = {};
return obj11567;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11568 = cljs.core.nnext(kvs);
kvs = G__11568;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11569__i = 0, G__11569__a = new Array(arguments.length -  0);
while (G__11569__i < G__11569__a.length) {G__11569__a[G__11569__i] = arguments[G__11569__i + 0]; ++G__11569__i;}
  keyvals = new cljs.core.IndexedSeq(G__11569__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__11570){
var keyvals = cljs.core.seq(arglist__11570);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11571 = cljs.core.nnext(in$);
var G__11572 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11571;
out = G__11572;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11573__i = 0, G__11573__a = new Array(arguments.length -  0);
while (G__11573__i < G__11573__a.length) {G__11573__a[G__11573__i] = arguments[G__11573__i + 0]; ++G__11573__i;}
  keyvals = new cljs.core.IndexedSeq(G__11573__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__11574){
var keyvals = cljs.core.seq(arglist__11574);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11575 = cljs.core.nnext(in$);
var G__11576 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11575;
out = G__11576;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11577__i = 0, G__11577__a = new Array(arguments.length -  1);
while (G__11577__i < G__11577__a.length) {G__11577__a[G__11577__i] = arguments[G__11577__i + 1]; ++G__11577__i;}
  keyvals = new cljs.core.IndexedSeq(G__11577__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__11578){
var comparator = cljs.core.first(arglist__11578);
var keyvals = cljs.core.rest(arglist__11578);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11579 = self__.mseq;
if(G__11579){
var bit__6919__auto__ = (G__11579.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6919__auto__) || (G__11579.cljs$core$INext$)){
return true;
} else {
if((!G__11579.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11579);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11579);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11580 = self__.mseq;
if(G__11580){
var bit__6919__auto__ = (G__11580.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6919__auto__) || (G__11580.cljs$core$INext$)){
return true;
} else {
if((!G__11580.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11580);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11580);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11581 = self__.mseq;
if(G__11581){
var bit__6919__auto__ = (G__11581.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6919__auto__) || (G__11581.cljs$core$INext$)){
return true;
} else {
if((!G__11581.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11581);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11581);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11582 = self__.mseq;
if(G__11582){
var bit__6919__auto__ = (G__11582.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6919__auto__) || (G__11582.cljs$core$INext$)){
return true;
} else {
if((!G__11582.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11582);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11582);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11583_SHARP_,p2__11584_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__6238__auto__ = p1__11583_SHARP_;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11584_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11585__i = 0, G__11585__a = new Array(arguments.length -  0);
while (G__11585__i < G__11585__a.length) {G__11585__a[G__11585__i] = arguments[G__11585__i + 0]; ++G__11585__i;}
  maps = new cljs.core.IndexedSeq(G__11585__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__11586){
var maps = cljs.core.seq(arglist__11586);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11589 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11590 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11589,G__11590) : f.call(null,G__11589,G__11590));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__6238__auto__ = m1;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11591__i = 0, G__11591__a = new Array(arguments.length -  1);
while (G__11591__i < G__11591__a.length) {G__11591__a[G__11591__i] = arguments[G__11591__i + 1]; ++G__11591__i;}
  maps = new cljs.core.IndexedSeq(G__11591__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__11592){
var f = cljs.core.first(arglist__11592);
var maps = cljs.core.rest(arglist__11592);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_not_found);
var G__11593 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_not_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11594 = cljs.core.next(keys);
ret = G__11593;
keys = G__11594;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11597 = cljs.core.seq(coll);
var chunk__11598 = null;
var count__11599 = (0);
var i__11600 = (0);
while(true){
if((i__11600 < count__11599)){
var vec__11601 = chunk__11598.cljs$core$IIndexed$_nth$arity$2(null,i__11600);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11601,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11601,(1),null);
var G__11602_11607 = v;
var G__11603_11608 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11602_11607,G__11603_11608) : f.call(null,G__11602_11607,G__11603_11608));

var G__11609 = seq__11597;
var G__11610 = chunk__11598;
var G__11611 = count__11599;
var G__11612 = (i__11600 + (1));
seq__11597 = G__11609;
chunk__11598 = G__11610;
count__11599 = G__11611;
i__11600 = G__11612;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11597);
if(temp__4126__auto__){
var seq__11597__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11597__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__11597__$1);
var G__11613 = cljs.core.chunk_rest(seq__11597__$1);
var G__11614 = c__7025__auto__;
var G__11615 = cljs.core.count(c__7025__auto__);
var G__11616 = (0);
seq__11597 = G__11613;
chunk__11598 = G__11614;
count__11599 = G__11615;
i__11600 = G__11616;
continue;
} else {
var vec__11604 = cljs.core.first(seq__11597__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11604,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11604,(1),null);
var G__11605_11617 = v;
var G__11606_11618 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11605_11617,G__11606_11618) : f.call(null,G__11605_11617,G__11606_11618));

var G__11619 = cljs.core.next(seq__11597__$1);
var G__11620 = null;
var G__11621 = (0);
var G__11622 = (0);
seq__11597 = G__11619;
chunk__11598 = G__11620;
count__11599 = G__11621;
i__11600 = G__11622;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11595_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11595_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11623 = null;
var G__11623__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11623__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11623 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11623__2.call(this,self__,k);
case 3:
return G__11623__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11623.cljs$core$IFn$_invoke$arity$2 = G__11623__2;
G__11623.cljs$core$IFn$_invoke$arity$3 = G__11623__3;
return G__11623;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11596){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11596)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11624 = (i + (1));
var G__11625 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11624;
out = G__11625;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11626 = (i + (1));
var G__11627 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11626;
out = G__11627;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11629 = null;
var G__11629__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11629__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11629 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11629__2.call(this,self__,k);
case 3:
return G__11629__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11629.cljs$core$IFn$_invoke$arity$2 = G__11629__2;
G__11629.cljs$core$IFn$_invoke$arity$3 = G__11629__3;
return G__11629;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11628){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11628)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11632 = cljs.core.seq(coll);
var chunk__11633 = null;
var count__11634 = (0);
var i__11635 = (0);
while(true){
if((i__11635 < count__11634)){
var vec__11636 = chunk__11633.cljs$core$IIndexed$_nth$arity$2(null,i__11635);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11636,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11636,(1),null);
var G__11637_11642 = v;
var G__11638_11643 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11637_11642,G__11638_11643) : f.call(null,G__11637_11642,G__11638_11643));

var G__11644 = seq__11632;
var G__11645 = chunk__11633;
var G__11646 = count__11634;
var G__11647 = (i__11635 + (1));
seq__11632 = G__11644;
chunk__11633 = G__11645;
count__11634 = G__11646;
i__11635 = G__11647;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11632);
if(temp__4126__auto__){
var seq__11632__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11632__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__11632__$1);
var G__11648 = cljs.core.chunk_rest(seq__11632__$1);
var G__11649 = c__7025__auto__;
var G__11650 = cljs.core.count(c__7025__auto__);
var G__11651 = (0);
seq__11632 = G__11648;
chunk__11633 = G__11649;
count__11634 = G__11650;
i__11635 = G__11651;
continue;
} else {
var vec__11639 = cljs.core.first(seq__11632__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11639,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11639,(1),null);
var G__11640_11652 = v;
var G__11641_11653 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11640_11652,G__11641_11653) : f.call(null,G__11640_11652,G__11641_11653));

var G__11654 = cljs.core.next(seq__11632__$1);
var G__11655 = null;
var G__11656 = (0);
var G__11657 = (0);
seq__11632 = G__11654;
chunk__11633 = G__11655;
count__11634 = G__11656;
i__11635 = G__11657;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11630_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11630_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11658 = null;
var G__11658__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11658__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11658 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11658__2.call(this,self__,k);
case 3:
return G__11658__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11658.cljs$core$IFn$_invoke$arity$2 = G__11658__2;
G__11658.cljs$core$IFn$_invoke$arity$3 = G__11658__3;
return G__11658;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11631){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11631)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__7119__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__7119__auto__.length)){
var G__11659 = (i + (1));
var G__11660 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11659;
res = G__11660;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11661 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11662 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11661;
out = G__11662;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__11663__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11663 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11664__i = 0, G__11664__a = new Array(arguments.length -  0);
while (G__11664__i < G__11664__a.length) {G__11664__a[G__11664__i] = arguments[G__11664__i + 0]; ++G__11664__i;}
  keys = new cljs.core.IndexedSeq(G__11664__a,0);
} 
return G__11663__delegate.call(this,keys);};
G__11663.cljs$lang$maxFixedArity = 0;
G__11663.cljs$lang$applyTo = (function (arglist__11665){
var keys = cljs.core.seq(arglist__11665);
return G__11663__delegate(keys);
});
G__11663.cljs$core$IFn$_invoke$arity$variadic = G__11663__delegate;
return G__11663;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__11666 = null;
if (arguments.length > 0) {
var G__11667__i = 0, G__11667__a = new Array(arguments.length -  0);
while (G__11667__i < G__11667__a.length) {G__11667__a[G__11667__i] = arguments[G__11667__i + 0]; ++G__11667__i;}
G__11666 = new cljs.core.IndexedSeq(G__11667__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11668__i = 0, G__11668__a = new Array(arguments.length -  0);
while (G__11668__i < G__11668__a.length) {G__11668__a[G__11668__i] = arguments[G__11668__i + 0]; ++G__11668__i;}
  keys = new cljs.core.IndexedSeq(G__11668__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__11669){
var keys = cljs.core.seq(arglist__11669);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11670__i = 0, G__11670__a = new Array(arguments.length -  1);
while (G__11670__i < G__11670__a.length) {G__11670__a[G__11670__i] = arguments[G__11670__i + 1]; ++G__11670__i;}
  keys = new cljs.core.IndexedSeq(G__11670__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__11671){
var comparator = cljs.core.first(arglist__11671);
var keys = cljs.core.rest(arglist__11671);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11672_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11672_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__11672_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11673_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11673_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__11673_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11694 = null;
var G__11694__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11694__1 = (function (result){
var G__11684 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11684) : rf.call(null,G__11684));
});
var G__11694__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11685 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11685) : cljs.core.deref.call(null,G__11685));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11686 = result;
var G__11687 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11686,G__11687) : rf.call(null,G__11686,G__11687));
}
});
G__11694 = function(result,input){
switch(arguments.length){
case 0:
return G__11694__0.call(this);
case 1:
return G__11694__1.call(this,result);
case 2:
return G__11694__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11694.cljs$core$IFn$_invoke$arity$0 = G__11694__0;
G__11694.cljs$core$IFn$_invoke$arity$1 = G__11694__1;
G__11694.cljs$core$IFn$_invoke$arity$2 = G__11694__2;
return G__11694;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11692,seen__$1){
while(true){
var vec__11693 = p__11692;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11693,(0),null);
var xs__$1 = vec__11693;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11695 = cljs.core.rest(s);
var G__11696 = seen__$1;
p__11692 = G__11695;
seen__$1 = G__11696;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11697 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11698 = cljs.core.next(s__$1);
ret = G__11697;
s__$1 = G__11698;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__11700 = x;
if(G__11700){
var bit__6912__auto__ = (G__11700.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6912__auto__) || (G__11700.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11701 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11702 = cljs.core.next(ks);
var G__11703 = cljs.core.next(vs);
map = G__11701;
ks = G__11702;
vs = G__11703;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__11714 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11714) : k.call(null,G__11714));
})() > (function (){var G__11715 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11715) : k.call(null,G__11715));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__11716__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11704_SHARP_,p2__11705_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11704_SHARP_,p2__11705_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11716 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11717__i = 0, G__11717__a = new Array(arguments.length -  3);
while (G__11717__i < G__11717__a.length) {G__11717__a[G__11717__i] = arguments[G__11717__i + 3]; ++G__11717__i;}
  more = new cljs.core.IndexedSeq(G__11717__a,0);
} 
return G__11716__delegate.call(this,k,x,y,more);};
G__11716.cljs$lang$maxFixedArity = 3;
G__11716.cljs$lang$applyTo = (function (arglist__11718){
var k = cljs.core.first(arglist__11718);
arglist__11718 = cljs.core.next(arglist__11718);
var x = cljs.core.first(arglist__11718);
arglist__11718 = cljs.core.next(arglist__11718);
var y = cljs.core.first(arglist__11718);
var more = cljs.core.rest(arglist__11718);
return G__11716__delegate(k,x,y,more);
});
G__11716.cljs$core$IFn$_invoke$arity$variadic = G__11716__delegate;
return G__11716;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__11719 = null;
if (arguments.length > 3) {
var G__11720__i = 0, G__11720__a = new Array(arguments.length -  3);
while (G__11720__i < G__11720__a.length) {G__11720__a[G__11720__i] = arguments[G__11720__i + 3]; ++G__11720__i;}
G__11719 = new cljs.core.IndexedSeq(G__11720__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__11731 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11731) : k.call(null,G__11731));
})() < (function (){var G__11732 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11732) : k.call(null,G__11732));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__11733__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11721_SHARP_,p2__11722_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11721_SHARP_,p2__11722_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11733 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11734__i = 0, G__11734__a = new Array(arguments.length -  3);
while (G__11734__i < G__11734__a.length) {G__11734__a[G__11734__i] = arguments[G__11734__i + 3]; ++G__11734__i;}
  more = new cljs.core.IndexedSeq(G__11734__a,0);
} 
return G__11733__delegate.call(this,k,x,y,more);};
G__11733.cljs$lang$maxFixedArity = 3;
G__11733.cljs$lang$applyTo = (function (arglist__11735){
var k = cljs.core.first(arglist__11735);
arglist__11735 = cljs.core.next(arglist__11735);
var x = cljs.core.first(arglist__11735);
arglist__11735 = cljs.core.next(arglist__11735);
var y = cljs.core.first(arglist__11735);
var more = cljs.core.rest(arglist__11735);
return G__11733__delegate(k,x,y,more);
});
G__11733.cljs$core$IFn$_invoke$arity$variadic = G__11733__delegate;
return G__11733;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__11736 = null;
if (arguments.length > 3) {
var G__11737__i = 0, G__11737__a = new Array(arguments.length -  3);
while (G__11737__i < G__11737__a.length) {G__11737__a[G__11737__i] = arguments[G__11737__i + 3]; ++G__11737__i;}
G__11736 = new cljs.core.IndexedSeq(G__11737__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__11754 = null;
var G__11754__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11754__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11749 = result;
var G__11750 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11749,G__11750) : rf.call(null,G__11749,G__11750));
})());
})());
var G__11751 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11751) : rf.call(null,G__11751));
});
var G__11754__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__11752 = result;
var G__11753 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11752,G__11753) : rf.call(null,G__11752,G__11753));
} else {
return result;
}
});
G__11754 = function(result,input){
switch(arguments.length){
case 0:
return G__11754__0.call(this);
case 1:
return G__11754__1.call(this,result);
case 2:
return G__11754__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11754.cljs$core$IFn$_invoke$arity$0 = G__11754__0;
G__11754.cljs$core$IFn$_invoke$arity$1 = G__11754__1;
G__11754.cljs$core$IFn$_invoke$arity$2 = G__11754__2;
return G__11754;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__11767 = null;
var G__11767__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11767__1 = (function (result){
var G__11762 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11762) : rf.call(null,G__11762));
});
var G__11767__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11763 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11763) : pred.call(null,G__11763));
})())){
var G__11764 = result;
var G__11765 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11764,G__11765) : rf.call(null,G__11764,G__11765));
} else {
return cljs.core.reduced(result);
}
});
G__11767 = function(result,input){
switch(arguments.length){
case 0:
return G__11767__0.call(this);
case 1:
return G__11767__1.call(this,result);
case 2:
return G__11767__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11767.cljs$core$IFn$_invoke$arity$0 = G__11767__0;
G__11767.cljs$core$IFn$_invoke$arity$1 = G__11767__1;
G__11767.cljs$core$IFn$_invoke$arity$2 = G__11767__2;
return G__11767;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__11766 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11766) : pred.call(null,G__11766));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__11772 = (function (){var G__11774 = cljs.core._entry_key(sc,e);
var G__11775 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11774,G__11775) : comp.call(null,G__11774,G__11775));
})();
var G__11773 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11772,G__11773) : test.call(null,G__11772,G__11773));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11779 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11779,(0),null);
var s = vec__11779;
if(cljs.core.truth_((function (){var G__11780 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11780) : include.call(null,G__11780));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11781 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11781,(0),null);
var s = vec__11781;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11785 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11785,(0),null);
var s = vec__11785;
if(cljs.core.truth_((function (){var G__11786 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11786) : include.call(null,G__11786));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11787 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11787,(0),null);
var s = vec__11787;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__11788 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11788) : Math.ceil.call(null,G__11788));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__6659__auto__ = self__.__hash;
if(!((h__6659__auto__ == null))){
return h__6659__auto__;
} else {
var h__6659__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__6659__auto____$1;

return h__6659__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__11789 = ret;
var G__11790 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11789,G__11790) : f.call(null,G__11789,G__11790));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__11791 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11791) : cljs.core.deref.call(null,G__11791));
} else {
var G__11792 = (i + self__.step);
var G__11793 = ret__$1;
i = G__11792;
ret = G__11793;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__11811 = null;
var G__11811__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11811__1 = (function (result){
var G__11808 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11808) : rf.call(null,G__11808));
});
var G__11811__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__11809 = result;
var G__11810 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11809,G__11810) : rf.call(null,G__11809,G__11810));
} else {
return result;
}
});
G__11811 = function(result,input){
switch(arguments.length){
case 0:
return G__11811__0.call(this);
case 1:
return G__11811__1.call(this,result);
case 2:
return G__11811__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11811.cljs$core$IFn$_invoke$arity$0 = G__11811__0;
G__11811.cljs$core$IFn$_invoke$arity$1 = G__11811__1;
G__11811.cljs$core$IFn$_invoke$arity$2 = G__11811__2;
return G__11811;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__11833 = null;
var G__11833__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11833__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11824 = result;
var G__11825 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11824,G__11825) : rf.call(null,G__11824,G__11825));
})());
})());
var G__11826 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11826) : rf.call(null,G__11826));
});
var G__11833__2 = (function (result,input){
var pval = (function (){var G__11827 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11827) : cljs.core.deref.call(null,G__11827));
})();
var val = (function (){var G__11828 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11828) : f.call(null,G__11828));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__11829 = result;
var G__11830 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11829,G__11830) : rf.call(null,G__11829,G__11830));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__11833 = function(result,input){
switch(arguments.length){
case 0:
return G__11833__0.call(this);
case 1:
return G__11833__1.call(this,result);
case 2:
return G__11833__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11833.cljs$core$IFn$_invoke$arity$0 = G__11833__0;
G__11833.cljs$core$IFn$_invoke$arity$1 = G__11833__1;
G__11833.cljs$core$IFn$_invoke$arity$2 = G__11833__2;
return G__11833;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__11831 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11831) : f.call(null,G__11831));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__11812_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__11832 = p1__11812_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11832) : f.call(null,G__11832));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__11842 = init;
var G__11843 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11842,G__11843) : f.call(null,G__11842,G__11843));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__11938 = null;
var G__11938__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__11938__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11896 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11896) : f.call(null,G__11896));
})()],null));
});
var G__11938__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11897 = x;
var G__11898 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11897,G__11898) : f.call(null,G__11897,G__11898));
})()],null));
});
var G__11938__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11899 = x;
var G__11900 = y;
var G__11901 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11899,G__11900,G__11901) : f.call(null,G__11899,G__11900,G__11901));
})()],null));
});
var G__11938__4 = (function() { 
var G__11939__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__11939 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11940__i = 0, G__11940__a = new Array(arguments.length -  3);
while (G__11940__i < G__11940__a.length) {G__11940__a[G__11940__i] = arguments[G__11940__i + 3]; ++G__11940__i;}
  args = new cljs.core.IndexedSeq(G__11940__a,0);
} 
return G__11939__delegate.call(this,x,y,z,args);};
G__11939.cljs$lang$maxFixedArity = 3;
G__11939.cljs$lang$applyTo = (function (arglist__11941){
var x = cljs.core.first(arglist__11941);
arglist__11941 = cljs.core.next(arglist__11941);
var y = cljs.core.first(arglist__11941);
arglist__11941 = cljs.core.next(arglist__11941);
var z = cljs.core.first(arglist__11941);
var args = cljs.core.rest(arglist__11941);
return G__11939__delegate(x,y,z,args);
});
G__11939.cljs$core$IFn$_invoke$arity$variadic = G__11939__delegate;
return G__11939;
})()
;
G__11938 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11938__0.call(this);
case 1:
return G__11938__1.call(this,x);
case 2:
return G__11938__2.call(this,x,y);
case 3:
return G__11938__3.call(this,x,y,z);
default:
var G__11942 = null;
if (arguments.length > 3) {
var G__11943__i = 0, G__11943__a = new Array(arguments.length -  3);
while (G__11943__i < G__11943__a.length) {G__11943__a[G__11943__i] = arguments[G__11943__i + 3]; ++G__11943__i;}
G__11942 = new cljs.core.IndexedSeq(G__11943__a,0);
}
return G__11938__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11938.cljs$lang$maxFixedArity = 3;
G__11938.cljs$lang$applyTo = G__11938__4.cljs$lang$applyTo;
G__11938.cljs$core$IFn$_invoke$arity$0 = G__11938__0;
G__11938.cljs$core$IFn$_invoke$arity$1 = G__11938__1;
G__11938.cljs$core$IFn$_invoke$arity$2 = G__11938__2;
G__11938.cljs$core$IFn$_invoke$arity$3 = G__11938__3;
G__11938.cljs$core$IFn$_invoke$arity$variadic = G__11938__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11938;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__11944 = null;
var G__11944__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__11944__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11902 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11902) : f.call(null,G__11902));
})(),(function (){var G__11903 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11903) : g.call(null,G__11903));
})()],null));
});
var G__11944__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11904 = x;
var G__11905 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11904,G__11905) : f.call(null,G__11904,G__11905));
})(),(function (){var G__11906 = x;
var G__11907 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11906,G__11907) : g.call(null,G__11906,G__11907));
})()],null));
});
var G__11944__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11908 = x;
var G__11909 = y;
var G__11910 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11908,G__11909,G__11910) : f.call(null,G__11908,G__11909,G__11910));
})(),(function (){var G__11911 = x;
var G__11912 = y;
var G__11913 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11911,G__11912,G__11913) : g.call(null,G__11911,G__11912,G__11913));
})()],null));
});
var G__11944__4 = (function() { 
var G__11945__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__11945 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11946__i = 0, G__11946__a = new Array(arguments.length -  3);
while (G__11946__i < G__11946__a.length) {G__11946__a[G__11946__i] = arguments[G__11946__i + 3]; ++G__11946__i;}
  args = new cljs.core.IndexedSeq(G__11946__a,0);
} 
return G__11945__delegate.call(this,x,y,z,args);};
G__11945.cljs$lang$maxFixedArity = 3;
G__11945.cljs$lang$applyTo = (function (arglist__11947){
var x = cljs.core.first(arglist__11947);
arglist__11947 = cljs.core.next(arglist__11947);
var y = cljs.core.first(arglist__11947);
arglist__11947 = cljs.core.next(arglist__11947);
var z = cljs.core.first(arglist__11947);
var args = cljs.core.rest(arglist__11947);
return G__11945__delegate(x,y,z,args);
});
G__11945.cljs$core$IFn$_invoke$arity$variadic = G__11945__delegate;
return G__11945;
})()
;
G__11944 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11944__0.call(this);
case 1:
return G__11944__1.call(this,x);
case 2:
return G__11944__2.call(this,x,y);
case 3:
return G__11944__3.call(this,x,y,z);
default:
var G__11948 = null;
if (arguments.length > 3) {
var G__11949__i = 0, G__11949__a = new Array(arguments.length -  3);
while (G__11949__i < G__11949__a.length) {G__11949__a[G__11949__i] = arguments[G__11949__i + 3]; ++G__11949__i;}
G__11948 = new cljs.core.IndexedSeq(G__11949__a,0);
}
return G__11944__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11944.cljs$lang$maxFixedArity = 3;
G__11944.cljs$lang$applyTo = G__11944__4.cljs$lang$applyTo;
G__11944.cljs$core$IFn$_invoke$arity$0 = G__11944__0;
G__11944.cljs$core$IFn$_invoke$arity$1 = G__11944__1;
G__11944.cljs$core$IFn$_invoke$arity$2 = G__11944__2;
G__11944.cljs$core$IFn$_invoke$arity$3 = G__11944__3;
G__11944.cljs$core$IFn$_invoke$arity$variadic = G__11944__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11944;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__11950 = null;
var G__11950__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__11950__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11914 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11914) : f.call(null,G__11914));
})(),(function (){var G__11915 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11915) : g.call(null,G__11915));
})(),(function (){var G__11916 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11916) : h.call(null,G__11916));
})()],null));
});
var G__11950__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11917 = x;
var G__11918 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11917,G__11918) : f.call(null,G__11917,G__11918));
})(),(function (){var G__11919 = x;
var G__11920 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11919,G__11920) : g.call(null,G__11919,G__11920));
})(),(function (){var G__11921 = x;
var G__11922 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11921,G__11922) : h.call(null,G__11921,G__11922));
})()],null));
});
var G__11950__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11923 = x;
var G__11924 = y;
var G__11925 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11923,G__11924,G__11925) : f.call(null,G__11923,G__11924,G__11925));
})(),(function (){var G__11926 = x;
var G__11927 = y;
var G__11928 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11926,G__11927,G__11928) : g.call(null,G__11926,G__11927,G__11928));
})(),(function (){var G__11929 = x;
var G__11930 = y;
var G__11931 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11929,G__11930,G__11931) : h.call(null,G__11929,G__11930,G__11931));
})()],null));
});
var G__11950__4 = (function() { 
var G__11951__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__11951 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11952__i = 0, G__11952__a = new Array(arguments.length -  3);
while (G__11952__i < G__11952__a.length) {G__11952__a[G__11952__i] = arguments[G__11952__i + 3]; ++G__11952__i;}
  args = new cljs.core.IndexedSeq(G__11952__a,0);
} 
return G__11951__delegate.call(this,x,y,z,args);};
G__11951.cljs$lang$maxFixedArity = 3;
G__11951.cljs$lang$applyTo = (function (arglist__11953){
var x = cljs.core.first(arglist__11953);
arglist__11953 = cljs.core.next(arglist__11953);
var y = cljs.core.first(arglist__11953);
arglist__11953 = cljs.core.next(arglist__11953);
var z = cljs.core.first(arglist__11953);
var args = cljs.core.rest(arglist__11953);
return G__11951__delegate(x,y,z,args);
});
G__11951.cljs$core$IFn$_invoke$arity$variadic = G__11951__delegate;
return G__11951;
})()
;
G__11950 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11950__0.call(this);
case 1:
return G__11950__1.call(this,x);
case 2:
return G__11950__2.call(this,x,y);
case 3:
return G__11950__3.call(this,x,y,z);
default:
var G__11954 = null;
if (arguments.length > 3) {
var G__11955__i = 0, G__11955__a = new Array(arguments.length -  3);
while (G__11955__i < G__11955__a.length) {G__11955__a[G__11955__i] = arguments[G__11955__i + 3]; ++G__11955__i;}
G__11954 = new cljs.core.IndexedSeq(G__11955__a,0);
}
return G__11950__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11950.cljs$lang$maxFixedArity = 3;
G__11950.cljs$lang$applyTo = G__11950__4.cljs$lang$applyTo;
G__11950.cljs$core$IFn$_invoke$arity$0 = G__11950__0;
G__11950.cljs$core$IFn$_invoke$arity$1 = G__11950__1;
G__11950.cljs$core$IFn$_invoke$arity$2 = G__11950__2;
G__11950.cljs$core$IFn$_invoke$arity$3 = G__11950__3;
G__11950.cljs$core$IFn$_invoke$arity$variadic = G__11950__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11950;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__11956__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__11957 = null;
var G__11957__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11844_SHARP_,p2__11845_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11844_SHARP_,(function (){return (p2__11845_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11845_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11845_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11957__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11846_SHARP_,p2__11847_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11846_SHARP_,(function (){var G__11932 = x;
return (p2__11847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11932) : p2__11847_SHARP_.call(null,G__11932));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11957__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11848_SHARP_,p2__11849_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11848_SHARP_,(function (){var G__11933 = x;
var G__11934 = y;
return (p2__11849_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11849_SHARP_.cljs$core$IFn$_invoke$arity$2(G__11933,G__11934) : p2__11849_SHARP_.call(null,G__11933,G__11934));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11957__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11850_SHARP_,p2__11851_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11850_SHARP_,(function (){var G__11935 = x;
var G__11936 = y;
var G__11937 = z;
return (p2__11851_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11851_SHARP_.cljs$core$IFn$_invoke$arity$3(G__11935,G__11936,G__11937) : p2__11851_SHARP_.call(null,G__11935,G__11936,G__11937));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11957__4 = (function() { 
var G__11958__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11852_SHARP_,p2__11853_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11852_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11853_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__11958 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11959__i = 0, G__11959__a = new Array(arguments.length -  3);
while (G__11959__i < G__11959__a.length) {G__11959__a[G__11959__i] = arguments[G__11959__i + 3]; ++G__11959__i;}
  args = new cljs.core.IndexedSeq(G__11959__a,0);
} 
return G__11958__delegate.call(this,x,y,z,args);};
G__11958.cljs$lang$maxFixedArity = 3;
G__11958.cljs$lang$applyTo = (function (arglist__11960){
var x = cljs.core.first(arglist__11960);
arglist__11960 = cljs.core.next(arglist__11960);
var y = cljs.core.first(arglist__11960);
arglist__11960 = cljs.core.next(arglist__11960);
var z = cljs.core.first(arglist__11960);
var args = cljs.core.rest(arglist__11960);
return G__11958__delegate(x,y,z,args);
});
G__11958.cljs$core$IFn$_invoke$arity$variadic = G__11958__delegate;
return G__11958;
})()
;
G__11957 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11957__0.call(this);
case 1:
return G__11957__1.call(this,x);
case 2:
return G__11957__2.call(this,x,y);
case 3:
return G__11957__3.call(this,x,y,z);
default:
var G__11961 = null;
if (arguments.length > 3) {
var G__11962__i = 0, G__11962__a = new Array(arguments.length -  3);
while (G__11962__i < G__11962__a.length) {G__11962__a[G__11962__i] = arguments[G__11962__i + 3]; ++G__11962__i;}
G__11961 = new cljs.core.IndexedSeq(G__11962__a,0);
}
return G__11957__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11957.cljs$lang$maxFixedArity = 3;
G__11957.cljs$lang$applyTo = G__11957__4.cljs$lang$applyTo;
G__11957.cljs$core$IFn$_invoke$arity$0 = G__11957__0;
G__11957.cljs$core$IFn$_invoke$arity$1 = G__11957__1;
G__11957.cljs$core$IFn$_invoke$arity$2 = G__11957__2;
G__11957.cljs$core$IFn$_invoke$arity$3 = G__11957__3;
G__11957.cljs$core$IFn$_invoke$arity$variadic = G__11957__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11957;
})()
;})(fs__$1))
};
var G__11956 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11963__i = 0, G__11963__a = new Array(arguments.length -  3);
while (G__11963__i < G__11963__a.length) {G__11963__a[G__11963__i] = arguments[G__11963__i + 3]; ++G__11963__i;}
  fs = new cljs.core.IndexedSeq(G__11963__a,0);
} 
return G__11956__delegate.call(this,f,g,h,fs);};
G__11956.cljs$lang$maxFixedArity = 3;
G__11956.cljs$lang$applyTo = (function (arglist__11964){
var f = cljs.core.first(arglist__11964);
arglist__11964 = cljs.core.next(arglist__11964);
var g = cljs.core.first(arglist__11964);
arglist__11964 = cljs.core.next(arglist__11964);
var h = cljs.core.first(arglist__11964);
var fs = cljs.core.rest(arglist__11964);
return G__11956__delegate(f,g,h,fs);
});
G__11956.cljs$core$IFn$_invoke$arity$variadic = G__11956__delegate;
return G__11956;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__11965 = null;
if (arguments.length > 3) {
var G__11966__i = 0, G__11966__a = new Array(arguments.length -  3);
while (G__11966__i < G__11966__a.length) {G__11966__a[G__11966__i] = arguments[G__11966__i + 3]; ++G__11966__i;}
G__11965 = new cljs.core.IndexedSeq(G__11966__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__11965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__11967 = cljs.core.next(coll);
coll = G__11967;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__11968 = (n - (1));
var G__11969 = cljs.core.next(coll);
n = G__11968;
coll = G__11969;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__11973 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11973,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11973,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11973,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11981 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$_COLON_print_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__6238__auto__ = cljs.core.constant$keyword$_COLON_more_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__11982_11988 = cljs.core.first(coll);
var G__11983_11989 = writer;
var G__11984_11990 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11982_11988,G__11983_11989,G__11984_11990) : print_one.call(null,G__11982_11988,G__11983_11989,G__11984_11990));
} else {
}

var coll_11991__$1 = cljs.core.next(coll);
var n_11992 = (cljs.core.constant$keyword$_COLON_print_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11991__$1) && (((n_11992 == null)) || (!((n_11992 === (0)))))){
cljs.core._write(writer,sep);

var G__11985_11993 = cljs.core.first(coll_11991__$1);
var G__11986_11994 = writer;
var G__11987_11995 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11985_11993,G__11986_11994,G__11987_11995) : print_one.call(null,G__11985_11993,G__11986_11994,G__11987_11995));

var G__11996 = cljs.core.next(coll_11991__$1);
var G__11997 = (n_11992 - (1));
coll_11991__$1 = G__11996;
n_11992 = G__11997;
continue;
} else {
if((cljs.core.seq(coll_11991__$1)) && ((n_11992 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__6238__auto__ = cljs.core.constant$keyword$_COLON_more_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11981;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__12002 = cljs.core.seq(ss);
var chunk__12003 = null;
var count__12004 = (0);
var i__12005 = (0);
while(true){
if((i__12005 < count__12004)){
var s = chunk__12003.cljs$core$IIndexed$_nth$arity$2(null,i__12005);
cljs.core._write(writer,s);

var G__12006 = seq__12002;
var G__12007 = chunk__12003;
var G__12008 = count__12004;
var G__12009 = (i__12005 + (1));
seq__12002 = G__12006;
chunk__12003 = G__12007;
count__12004 = G__12008;
i__12005 = G__12009;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12002);
if(temp__4126__auto__){
var seq__12002__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12002__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__12002__$1);
var G__12010 = cljs.core.chunk_rest(seq__12002__$1);
var G__12011 = c__7025__auto__;
var G__12012 = cljs.core.count(c__7025__auto__);
var G__12013 = (0);
seq__12002 = G__12010;
chunk__12003 = G__12011;
count__12004 = G__12012;
i__12005 = G__12013;
continue;
} else {
var s = cljs.core.first(seq__12002__$1);
cljs.core._write(writer,s);

var G__12014 = cljs.core.next(seq__12002__$1);
var G__12015 = null;
var G__12016 = (0);
var G__12017 = (0);
seq__12002 = G__12014;
chunk__12003 = G__12015;
count__12004 = G__12016;
i__12005 = G__12017;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__12018__i = 0, G__12018__a = new Array(arguments.length -  1);
while (G__12018__i < G__12018__a.length) {G__12018__a[G__12018__i] = arguments[G__12018__i + 1]; ++G__12018__i;}
  ss = new cljs.core.IndexedSeq(G__12018__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__12019){
var writer = cljs.core.first(arglist__12019);
var ss = cljs.core.rest(arglist__12019);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj12021 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj12021;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__12024 = "[\\\\\"\b\f\n\r\t]";
var G__12025 = "g";
return RegExp(G__12024,G__12025);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__6226__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$_COLON_meta);
if(cljs.core.truth_(and__6226__auto__)){
var and__6226__auto____$1 = (function (){var G__12039 = obj;
if(G__12039){
var bit__6919__auto__ = (G__12039.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6919__auto__) || (G__12039.cljs$core$IMeta$)){
return true;
} else {
if((!G__12039.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12039);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12039);
}
})();
if(and__6226__auto____$1){
return cljs.core.meta(obj);
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__12040_12050 = cljs.core.meta(obj);
var G__12041_12051 = writer;
var G__12042_12052 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__12040_12050,G__12041_12051,G__12042_12052) : cljs.core.pr_writer.call(null,G__12040_12050,G__12041_12051,G__12042_12052));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__12043 = obj;
if(G__12043){
var bit__6912__auto__ = (G__12043.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6912__auto__) || (G__12043.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__12044 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__12045 = cljs.core.pr_writer;
var G__12046 = writer;
var G__12047 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__12044,G__12045,G__12046,G__12047) : cljs.core.print_map.call(null,G__12044,G__12045,G__12046,G__12047));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__12048 = obj;
return goog.isString(G__12048);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$_COLON_readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__12053 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__12053;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__12049 = obj;
if(G__12049){
var bit__6919__auto__ = (G__12049.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6919__auto__) || (G__12049.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__12049.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12049);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12049);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$_COLON_alt_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__12057 = obj;
var G__12058 = writer;
var G__12059 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$_COLON_fallback_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__12057,G__12058,G__12059) : alt_impl.call(null,G__12057,G__12058,G__12059));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__12064 = cljs.core.seq(cljs.core.next(objs));
var chunk__12065 = null;
var count__12066 = (0);
var i__12067 = (0);
while(true){
if((i__12067 < count__12066)){
var obj = chunk__12065.cljs$core$IIndexed$_nth$arity$2(null,i__12067);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12068 = seq__12064;
var G__12069 = chunk__12065;
var G__12070 = count__12066;
var G__12071 = (i__12067 + (1));
seq__12064 = G__12068;
chunk__12065 = G__12069;
count__12066 = G__12070;
i__12067 = G__12071;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12064);
if(temp__4126__auto__){
var seq__12064__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12064__$1)){
var c__7025__auto__ = cljs.core.chunk_first(seq__12064__$1);
var G__12072 = cljs.core.chunk_rest(seq__12064__$1);
var G__12073 = c__7025__auto__;
var G__12074 = cljs.core.count(c__7025__auto__);
var G__12075 = (0);
seq__12064 = G__12072;
chunk__12065 = G__12073;
count__12066 = G__12074;
i__12067 = G__12075;
continue;
} else {
var obj = cljs.core.first(seq__12064__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12076 = cljs.core.next(seq__12064__$1);
var G__12077 = null;
var G__12078 = (0);
var G__12079 = (0);
seq__12064 = G__12076;
chunk__12065 = G__12077;
count__12066 = G__12078;
i__12067 = G__12079;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$_COLON_flush_on_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12080__i = 0, G__12080__a = new Array(arguments.length -  0);
while (G__12080__i < G__12080__a.length) {G__12080__a[G__12080__i] = arguments[G__12080__i + 0]; ++G__12080__i;}
  objs = new cljs.core.IndexedSeq(G__12080__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__12081){
var objs = cljs.core.seq(arglist__12081);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12082__i = 0, G__12082__a = new Array(arguments.length -  0);
while (G__12082__i < G__12082__a.length) {G__12082__a[G__12082__i] = arguments[G__12082__i + 0]; ++G__12082__i;}
  objs = new cljs.core.IndexedSeq(G__12082__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__12083){
var objs = cljs.core.seq(arglist__12083);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12084__i = 0, G__12084__a = new Array(arguments.length -  0);
while (G__12084__i < G__12084__a.length) {G__12084__a[G__12084__i] = arguments[G__12084__i + 0]; ++G__12084__i;}
  objs = new cljs.core.IndexedSeq(G__12084__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__12085){
var objs = cljs.core.seq(arglist__12085);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12086__i = 0, G__12086__a = new Array(arguments.length -  0);
while (G__12086__i < G__12086__a.length) {G__12086__a[G__12086__i] = arguments[G__12086__i + 0]; ++G__12086__i;}
  objs = new cljs.core.IndexedSeq(G__12086__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__12087){
var objs = cljs.core.seq(arglist__12087);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12088__i = 0, G__12088__a = new Array(arguments.length -  0);
while (G__12088__i < G__12088__a.length) {G__12088__a[G__12088__i] = arguments[G__12088__i + 0]; ++G__12088__i;}
  objs = new cljs.core.IndexedSeq(G__12088__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__12089){
var objs = cljs.core.seq(arglist__12089);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12090__i = 0, G__12090__a = new Array(arguments.length -  0);
while (G__12090__i < G__12090__a.length) {G__12090__a[G__12090__i] = arguments[G__12090__i + 0]; ++G__12090__i;}
  objs = new cljs.core.IndexedSeq(G__12090__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__12091){
var objs = cljs.core.seq(arglist__12091);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12092__i = 0, G__12092__a = new Array(arguments.length -  0);
while (G__12092__i < G__12092__a.length) {G__12092__a[G__12092__i] = arguments[G__12092__i + 0]; ++G__12092__i;}
  objs = new cljs.core.IndexedSeq(G__12092__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__12093){
var objs = cljs.core.seq(arglist__12093);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12094__i = 0, G__12094__a = new Array(arguments.length -  0);
while (G__12094__i < G__12094__a.length) {G__12094__a[G__12094__i] = arguments[G__12094__i + 0]; ++G__12094__i;}
  objs = new cljs.core.IndexedSeq(G__12094__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__12095){
var objs = cljs.core.seq(arglist__12095);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__12102_12108 = cljs.core.key(e);
var G__12103_12109 = w;
var G__12104_12110 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12102_12108,G__12103_12109,G__12104_12110) : print_one.call(null,G__12102_12108,G__12103_12109,G__12104_12110));

cljs.core._write(w," ");

var G__12105 = cljs.core.val(e);
var G__12106 = w;
var G__12107 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12105,G__12106,G__12107) : print_one.call(null,G__12105,G__12106,G__12107));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__12111__i = 0, G__12111__a = new Array(arguments.length -  2);
while (G__12111__i < G__12111__a.length) {G__12111__a[G__12111__i] = arguments[G__12111__i + 2]; ++G__12111__i;}
  args = new cljs.core.IndexedSeq(G__12111__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__12112){
var iref = cljs.core.first(arglist__12112);
arglist__12112 = cljs.core.next(arglist__12112);
var f = cljs.core.first(arglist__12112);
var args = cljs.core.rest(arglist__12112);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__12115 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12115) : cljs.core.atom.call(null,G__12115));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__12117 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12117) : cljs.core.deref.call(null,G__12117));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__12118_SHARP_,p2__12119_SHARP_){
var ret = (function (){var G__12122 = p1__12118_SHARP_;
var G__12123 = p2__12119_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12122,G__12123) : rf.call(null,G__12122,G__12123));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__12126 = null;
var G__12126__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12126__1 = (function (result){
var G__12125 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12125) : rf.call(null,G__12125));
});
var G__12126__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__12126 = function(result,input){
switch(arguments.length){
case 0:
return G__12126__0.call(this);
case 1:
return G__12126__1.call(this,result);
case 2:
return G__12126__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12126.cljs$core$IFn$_invoke$arity$0 = G__12126__0;
G__12126.cljs$core$IFn$_invoke$arity$1 = G__12126__1;
G__12126.cljs$core$IFn$_invoke$arity$2 = G__12126__2;
return G__12126;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__12135 = null;
var G__12135__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12135__1 = (function (result){
var G__12131 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12131) : rf.call(null,G__12131));
});
var G__12135__2 = (function (result,input){
var prior = (function (){var G__12132 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12132) : cljs.core.deref.call(null,G__12132));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__12133 = result;
var G__12134 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12133,G__12134) : rf.call(null,G__12133,G__12134));
}
});
G__12135 = function(result,input){
switch(arguments.length){
case 0:
return G__12135__0.call(this);
case 1:
return G__12135__1.call(this,result);
case 2:
return G__12135__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12135.cljs$core$IFn$_invoke$arity$0 = G__12135__0;
G__12135.cljs$core$IFn$_invoke$arity$1 = G__12135__1;
G__12135.cljs$core$IFn$_invoke$arity$2 = G__12135__2;
return G__12135;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__7216__auto__ = this;
return cljs.core.es6_iterator(this__7216__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__12137_SHARP_,p2__12136_SHARP_){
var G__12139 = p2__12136_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__12139) : proc.call(null,G__12139));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj12141 = {};
return obj12141;
})();

cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__6226__auto__ = x;
if(and__6226__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__6226__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__6882__auto__ = (((x == null))?null:x);
return (function (){var or__6238__auto__ = (cljs.core._clj__GT_js[(function (){var G__12145 = x__6882__auto__;
return goog.typeOf(G__12145);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__6226__auto__ = x;
if(and__6226__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__6226__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__6882__auto__ = (((x == null))?null:x);
return (function (){var or__6238__auto__ = (cljs.core._key__GT_js[(function (){var G__12149 = x__6882__auto__;
return goog.typeOf(G__12149);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__12152 = k;
if(G__12152){
var bit__6919__auto__ = null;
if(cljs.core.truth_((function (){var or__6238__auto__ = bit__6919__auto__;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return G__12152.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12152.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12152);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__12153 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__12153) : cljs.core.clj__GT_js.call(null,G__12153));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__12169 = x;
if(G__12169){
var bit__6919__auto__ = null;
if(cljs.core.truth_((function (){var or__6238__auto__ = bit__6919__auto__;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return G__12169.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12169.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12169);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12169);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj12171 = {};
return obj12171;
})();
var seq__12172_12182 = cljs.core.seq(x);
var chunk__12173_12183 = null;
var count__12174_12184 = (0);
var i__12175_12185 = (0);
while(true){
if((i__12175_12185 < count__12174_12184)){
var vec__12176_12186 = chunk__12173_12183.cljs$core$IIndexed$_nth$arity$2(null,i__12175_12185);
var k_12187 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12176_12186,(0),null);
var v_12188 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12176_12186,(1),null);
(m[cljs.core.key__GT_js(k_12187)] = cljs$core$clj__GT_js(v_12188));

var G__12189 = seq__12172_12182;
var G__12190 = chunk__12173_12183;
var G__12191 = count__12174_12184;
var G__12192 = (i__12175_12185 + (1));
seq__12172_12182 = G__12189;
chunk__12173_12183 = G__12190;
count__12174_12184 = G__12191;
i__12175_12185 = G__12192;
continue;
} else {
var temp__4126__auto___12193 = cljs.core.seq(seq__12172_12182);
if(temp__4126__auto___12193){
var seq__12172_12194__$1 = temp__4126__auto___12193;
if(cljs.core.chunked_seq_QMARK_(seq__12172_12194__$1)){
var c__7025__auto___12195 = cljs.core.chunk_first(seq__12172_12194__$1);
var G__12196 = cljs.core.chunk_rest(seq__12172_12194__$1);
var G__12197 = c__7025__auto___12195;
var G__12198 = cljs.core.count(c__7025__auto___12195);
var G__12199 = (0);
seq__12172_12182 = G__12196;
chunk__12173_12183 = G__12197;
count__12174_12184 = G__12198;
i__12175_12185 = G__12199;
continue;
} else {
var vec__12177_12200 = cljs.core.first(seq__12172_12194__$1);
var k_12201 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12177_12200,(0),null);
var v_12202 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12177_12200,(1),null);
(m[cljs.core.key__GT_js(k_12201)] = cljs$core$clj__GT_js(v_12202));

var G__12203 = cljs.core.next(seq__12172_12194__$1);
var G__12204 = null;
var G__12205 = (0);
var G__12206 = (0);
seq__12172_12182 = G__12203;
chunk__12173_12183 = G__12204;
count__12174_12184 = G__12205;
i__12175_12185 = G__12206;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__12178_12207 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__12179_12208 = null;
var count__12180_12209 = (0);
var i__12181_12210 = (0);
while(true){
if((i__12181_12210 < count__12180_12209)){
var x_12211__$1 = chunk__12179_12208.cljs$core$IIndexed$_nth$arity$2(null,i__12181_12210);
arr.push(x_12211__$1);

var G__12212 = seq__12178_12207;
var G__12213 = chunk__12179_12208;
var G__12214 = count__12180_12209;
var G__12215 = (i__12181_12210 + (1));
seq__12178_12207 = G__12212;
chunk__12179_12208 = G__12213;
count__12180_12209 = G__12214;
i__12181_12210 = G__12215;
continue;
} else {
var temp__4126__auto___12216 = cljs.core.seq(seq__12178_12207);
if(temp__4126__auto___12216){
var seq__12178_12217__$1 = temp__4126__auto___12216;
if(cljs.core.chunked_seq_QMARK_(seq__12178_12217__$1)){
var c__7025__auto___12218 = cljs.core.chunk_first(seq__12178_12217__$1);
var G__12219 = cljs.core.chunk_rest(seq__12178_12217__$1);
var G__12220 = c__7025__auto___12218;
var G__12221 = cljs.core.count(c__7025__auto___12218);
var G__12222 = (0);
seq__12178_12207 = G__12219;
chunk__12179_12208 = G__12220;
count__12180_12209 = G__12221;
i__12181_12210 = G__12222;
continue;
} else {
var x_12223__$1 = cljs.core.first(seq__12178_12217__$1);
arr.push(x_12223__$1);

var G__12224 = cljs.core.next(seq__12178_12217__$1);
var G__12225 = null;
var G__12226 = (0);
var G__12227 = (0);
seq__12178_12207 = G__12224;
chunk__12179_12208 = G__12225;
count__12180_12209 = G__12226;
i__12181_12210 = G__12227;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj12229 = {};
return obj12229;
})();

cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__6226__auto__ = x;
if(and__6226__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__6226__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__6882__auto__ = (((x == null))?null:x);
return (function (){var or__6238__auto__ = (cljs.core._js__GT_clj[(function (){var G__12233 = x__6882__auto__;
return goog.typeOf(G__12233);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$_COLON_keywordize_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__12290__delegate = function (x,opts){
var map__12263 = opts;
var map__12263__$1 = ((cljs.core.seq_QMARK_(map__12263))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12263):map__12263);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12263__$1,cljs.core.constant$keyword$_COLON_keywordize_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__12263,map__12263__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__12279 = x__$1;
if(G__12279){
var bit__6919__auto__ = null;
if(cljs.core.truth_((function (){var or__6238__auto__ = bit__6919__auto__;
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return G__12279.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__12279.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12279);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12279);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__6994__auto__ = ((function (map__12263,map__12263__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__12280(s__12281){
return (new cljs.core.LazySeq(null,((function (map__12263,map__12263__$1,keywordize_keys,keyfn){
return (function (){
var s__12281__$1 = s__12281;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__12281__$1);
if(temp__4126__auto__){
var s__12281__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__12281__$2)){
var c__6992__auto__ = cljs.core.chunk_first(s__12281__$2);
var size__6993__auto__ = cljs.core.count(c__6992__auto__);
var b__12283 = cljs.core.chunk_buffer(size__6993__auto__);
if((function (){var i__12282 = (0);
while(true){
if((i__12282 < size__6993__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6992__auto__,i__12282);
cljs.core.chunk_append(b__12283,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12288 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12288) : keyfn.call(null,G__12288));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__12291 = (i__12282 + (1));
i__12282 = G__12291;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__12283),cljs$core$js__GT_clj_$_thisfn_$_iter__12280(cljs.core.chunk_rest(s__12281__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__12283),null);
}
} else {
var k = cljs.core.first(s__12281__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12289 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12289) : keyfn.call(null,G__12289));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__12280(cljs.core.rest(s__12281__$2)));
}
} else {
return null;
}
break;
}
});})(map__12263,map__12263__$1,keywordize_keys,keyfn))
,null,null));
});})(map__12263,map__12263__$1,keywordize_keys,keyfn))
;
return iter__6994__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__12263,map__12263__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__12290 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__12292__i = 0, G__12292__a = new Array(arguments.length -  1);
while (G__12292__i < G__12292__a.length) {G__12292__a[G__12292__i] = arguments[G__12292__i + 1]; ++G__12292__i;}
  opts = new cljs.core.IndexedSeq(G__12292__a,0);
} 
return G__12290__delegate.call(this,x,opts);};
G__12290.cljs$lang$maxFixedArity = 1;
G__12290.cljs$lang$applyTo = (function (arglist__12293){
var x = cljs.core.first(arglist__12293);
var opts = cljs.core.rest(arglist__12293);
return G__12290__delegate(x,opts);
});
G__12290.cljs$core$IFn$_invoke$arity$variadic = G__12290__delegate;
return G__12290;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__12294 = null;
if (arguments.length > 1) {
var G__12295__i = 0, G__12295__a = new Array(arguments.length -  1);
while (G__12295__i < G__12295__a.length) {G__12295__a[G__12295__i] = arguments[G__12295__i + 1]; ++G__12295__i;}
G__12294 = new cljs.core.IndexedSeq(G__12295__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__12298 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12298) : cljs.core.atom.call(null,G__12298));
})();
return ((function (mem){
return (function() { 
var G__12300__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__12299 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12299) : cljs.core.deref.call(null,G__12299));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__12300 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12301__i = 0, G__12301__a = new Array(arguments.length -  0);
while (G__12301__i < G__12301__a.length) {G__12301__a[G__12301__i] = arguments[G__12301__i + 0]; ++G__12301__i;}
  args = new cljs.core.IndexedSeq(G__12301__a,0);
} 
return G__12300__delegate.call(this,args);};
G__12300.cljs$lang$maxFixedArity = 0;
G__12300.cljs$lang$applyTo = (function (arglist__12302){
var args = cljs.core.seq(arglist__12302);
return G__12300__delegate(args);
});
G__12300.cljs$core$IFn$_invoke$arity$variadic = G__12300__delegate;
return G__12300;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__12304 = ret;
f = G__12304;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__12305__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__12305 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12306__i = 0, G__12306__a = new Array(arguments.length -  1);
while (G__12306__i < G__12306__a.length) {G__12306__a[G__12306__i] = arguments[G__12306__i + 1]; ++G__12306__i;}
  args = new cljs.core.IndexedSeq(G__12306__a,0);
} 
return G__12305__delegate.call(this,f,args);};
G__12305.cljs$lang$maxFixedArity = 1;
G__12305.cljs$lang$applyTo = (function (arglist__12307){
var f = cljs.core.first(arglist__12307);
var args = cljs.core.rest(arglist__12307);
return G__12305__delegate(f,args);
});
G__12305.cljs$core$IFn$_invoke$arity$variadic = G__12305__delegate;
return G__12305;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__12308 = null;
if (arguments.length > 1) {
var G__12309__i = 0, G__12309__a = new Array(arguments.length -  1);
while (G__12309__i < G__12309__a.length) {G__12309__a[G__12309__i] = arguments[G__12309__i + 1]; ++G__12309__i;}
G__12308 = new cljs.core.IndexedSeq(G__12309__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__12308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__12312 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12312) : Math.floor.call(null,G__12312));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__12314 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12314) : f.call(null,G__12314));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$_COLON_parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$_COLON_descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$_COLON_ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__12316 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12316) : cljs.core.atom.call(null,G__12316));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12317__i = 0, G__12317__a = new Array(arguments.length -  1);
while (G__12317__i < G__12317__a.length) {G__12317__a[G__12317__i] = arguments[G__12317__i + 1]; ++G__12317__i;}
  args = new cljs.core.IndexedSeq(G__12317__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__12318){
var f = cljs.core.first(arglist__12318);
var args = cljs.core.rest(arglist__12318);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12383 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12383) : cljs.core.deref.call(null,G__12383));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__6238__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
var and__6226__auto__ = cljs.core.vector_QMARK_(parent);
if(and__6226__auto__){
var and__6226__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__6226__auto____$1){
var and__6226__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__6226__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12408 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12406 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12406) : child.call(null,G__12406));
})(),(function (){var G__12407 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12407) : parent.call(null,G__12407));
})());
var G__12409 = (i + (1));
ret = G__12408;
i = G__12409;
continue;
}
break;
}
} else {
return and__6226__auto____$2;
}
} else {
return and__6226__auto____$1;
}
} else {
return and__6226__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12413 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12413) : cljs.core.deref.call(null,G__12413));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12417 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12417) : cljs.core.deref.call(null,G__12417));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12421 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12421) : cljs.core.deref.call(null,G__12421));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12430 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12430) : targets.call(null,G__12430));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12431 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12431) : sources.call(null,G__12431));
})()));
});})(tp,td,ta))
;
var or__6238__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12435 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12435) : tp.call(null,G__12435));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12436 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12436) : ta.call(null,G__12436));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12437 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12437) : ta.call(null,G__12437));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$_COLON_parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$_COLON_ancestors,tf(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$_COLON_descendants,tf(cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12444 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12444) : parentMap.call(null,G__12444));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12445 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12445) : parentMap.call(null,G__12445));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12438_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12438_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12438_SHARP_),cljs.core.second(p1__12438_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12446 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12446) : parentMap.call(null,G__12446));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12439_SHARP_,p2__12440_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12439_SHARP_,p2__12440_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12449 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12449) : cljs.core.deref.call(null,G__12449));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12450 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12450) : cljs.core.deref.call(null,G__12450));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12466 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12466) : cljs.core.deref.call(null,G__12466));
})().call(null,x);
var or__6238__auto__ = (cljs.core.truth_((function (){var and__6226__auto__ = xprefs;
if(cljs.core.truth_(and__6226__auto__)){
var G__12468 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12468) : xprefs.call(null,G__12468));
} else {
return and__6226__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12469 = cljs.core.rest(ps);
ps = G__12469;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__6238__auto____$1)){
return or__6238__auto____$1;
} else {
var or__6238__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12470 = cljs.core.rest(ps);
ps = G__12470;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__6238__auto____$2)){
return or__6238__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__6238__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__6238__auto__)){
return or__6238__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12484){
var vec__12485 = p__12484;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12485,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12485,(1),null);
var e = vec__12485;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12486 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12486) : cljs.core.deref.call(null,G__12486));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__6238__auto__ = (be == null);
if(or__6238__auto__){
return or__6238__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12487 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12487) : cljs.core.deref.call(null,G__12487));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12488 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12488) : cljs.core.deref.call(null,G__12488));
})(),(function (){var G__12489 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12489) : cljs.core.deref.call(null,G__12489));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12491 = {};
return obj12491;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._reset[(function (){var G__12495 = x__6882__auto__;
return goog.typeOf(G__12495);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._reset["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._add_method[(function (){var G__12499 = x__6882__auto__;
return goog.typeOf(G__12499);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._add_method["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._remove_method[(function (){var G__12503 = x__6882__auto__;
return goog.typeOf(G__12503);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._remove_method["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._prefer_method[(function (){var G__12507 = x__6882__auto__;
return goog.typeOf(G__12507);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._get_method[(function (){var G__12511 = x__6882__auto__;
return goog.typeOf(G__12511);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._get_method["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._methods[(function (){var G__12515 = x__6882__auto__;
return goog.typeOf(G__12515);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._methods["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__6226__auto__ = mf;
if(and__6226__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__6226__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__6882__auto__ = (((mf == null))?null:mf);
return (function (){var or__6238__auto__ = (cljs.core._prefers[(function (){var G__12519 = x__6882__auto__;
return goog.typeOf(G__12519);
})()]);
if(or__6238__auto__){
return or__6238__auto__;
} else {
var or__6238__auto____$1 = (cljs.core._prefers["_"]);
if(or__6238__auto____$1){
return or__6238__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12521 = this$__$1;
return goog.getUid(G__12521);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12522 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12522) : cljs.core.deref.call(null,G__12522));
})(),(function (){var G__12523 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12523) : cljs.core.deref.call(null,G__12523));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__12524 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12524) : cljs.core.deref.call(null,G__12524));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__12525 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12525) : cljs.core.deref.call(null,G__12525));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12526 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12526) : cljs.core.deref.call(null,G__12526));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12527 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12527) : cljs.core.deref.call(null,G__12527));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__13368 = null;
var G__13368__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__13368__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12528 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12528) : self__.dispatch_fn.call(null,G__12528));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12529 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12529) : target_fn.call(null,G__12529));
});
var G__13368__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12530 = a;
var G__12531 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12530,G__12531) : self__.dispatch_fn.call(null,G__12530,G__12531));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12532 = a;
var G__12533 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12532,G__12533) : target_fn.call(null,G__12532,G__12533));
});
var G__13368__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12534 = a;
var G__12535 = b;
var G__12536 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12534,G__12535,G__12536) : self__.dispatch_fn.call(null,G__12534,G__12535,G__12536));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12537 = a;
var G__12538 = b;
var G__12539 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12537,G__12538,G__12539) : target_fn.call(null,G__12537,G__12538,G__12539));
});
var G__13368__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12540 = a;
var G__12541 = b;
var G__12542 = c;
var G__12543 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12540,G__12541,G__12542,G__12543) : self__.dispatch_fn.call(null,G__12540,G__12541,G__12542,G__12543));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12544 = a;
var G__12545 = b;
var G__12546 = c;
var G__12547 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12544,G__12545,G__12546,G__12547) : target_fn.call(null,G__12544,G__12545,G__12546,G__12547));
});
var G__13368__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12548 = a;
var G__12549 = b;
var G__12550 = c;
var G__12551 = d;
var G__12552 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12548,G__12549,G__12550,G__12551,G__12552) : self__.dispatch_fn.call(null,G__12548,G__12549,G__12550,G__12551,G__12552));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12553 = a;
var G__12554 = b;
var G__12555 = c;
var G__12556 = d;
var G__12557 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12553,G__12554,G__12555,G__12556,G__12557) : target_fn.call(null,G__12553,G__12554,G__12555,G__12556,G__12557));
});
var G__13368__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12558 = a;
var G__12559 = b;
var G__12560 = c;
var G__12561 = d;
var G__12562 = e;
var G__12563 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12558,G__12559,G__12560,G__12561,G__12562,G__12563) : self__.dispatch_fn.call(null,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12564 = a;
var G__12565 = b;
var G__12566 = c;
var G__12567 = d;
var G__12568 = e;
var G__12569 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12564,G__12565,G__12566,G__12567,G__12568,G__12569) : target_fn.call(null,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569));
});
var G__13368__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12570 = a;
var G__12571 = b;
var G__12572 = c;
var G__12573 = d;
var G__12574 = e;
var G__12575 = f;
var G__12576 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576) : self__.dispatch_fn.call(null,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12577 = a;
var G__12578 = b;
var G__12579 = c;
var G__12580 = d;
var G__12581 = e;
var G__12582 = f;
var G__12583 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583) : target_fn.call(null,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583));
});
var G__13368__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12584 = a;
var G__12585 = b;
var G__12586 = c;
var G__12587 = d;
var G__12588 = e;
var G__12589 = f;
var G__12590 = g;
var G__12591 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591) : self__.dispatch_fn.call(null,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12592 = a;
var G__12593 = b;
var G__12594 = c;
var G__12595 = d;
var G__12596 = e;
var G__12597 = f;
var G__12598 = g;
var G__12599 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599) : target_fn.call(null,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599));
});
var G__13368__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12600 = a;
var G__12601 = b;
var G__12602 = c;
var G__12603 = d;
var G__12604 = e;
var G__12605 = f;
var G__12606 = g;
var G__12607 = h;
var G__12608 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608) : self__.dispatch_fn.call(null,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12609 = a;
var G__12610 = b;
var G__12611 = c;
var G__12612 = d;
var G__12613 = e;
var G__12614 = f;
var G__12615 = g;
var G__12616 = h;
var G__12617 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617) : target_fn.call(null,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617));
});
var G__13368__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12618 = a;
var G__12619 = b;
var G__12620 = c;
var G__12621 = d;
var G__12622 = e;
var G__12623 = f;
var G__12624 = g;
var G__12625 = h;
var G__12626 = i;
var G__12627 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627) : self__.dispatch_fn.call(null,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12628 = a;
var G__12629 = b;
var G__12630 = c;
var G__12631 = d;
var G__12632 = e;
var G__12633 = f;
var G__12634 = g;
var G__12635 = h;
var G__12636 = i;
var G__12637 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637) : target_fn.call(null,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637));
});
var G__13368__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12638 = a;
var G__12639 = b;
var G__12640 = c;
var G__12641 = d;
var G__12642 = e;
var G__12643 = f;
var G__12644 = g;
var G__12645 = h;
var G__12646 = i;
var G__12647 = j;
var G__12648 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648) : self__.dispatch_fn.call(null,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12649 = a;
var G__12650 = b;
var G__12651 = c;
var G__12652 = d;
var G__12653 = e;
var G__12654 = f;
var G__12655 = g;
var G__12656 = h;
var G__12657 = i;
var G__12658 = j;
var G__12659 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659) : target_fn.call(null,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659));
});
var G__13368__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12660 = a;
var G__12661 = b;
var G__12662 = c;
var G__12663 = d;
var G__12664 = e;
var G__12665 = f;
var G__12666 = g;
var G__12667 = h;
var G__12668 = i;
var G__12669 = j;
var G__12670 = k;
var G__12671 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671) : self__.dispatch_fn.call(null,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12672 = a;
var G__12673 = b;
var G__12674 = c;
var G__12675 = d;
var G__12676 = e;
var G__12677 = f;
var G__12678 = g;
var G__12679 = h;
var G__12680 = i;
var G__12681 = j;
var G__12682 = k;
var G__12683 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12672,G__12673,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683) : target_fn.call(null,G__12672,G__12673,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683));
});
var G__13368__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12684 = a;
var G__12685 = b;
var G__12686 = c;
var G__12687 = d;
var G__12688 = e;
var G__12689 = f;
var G__12690 = g;
var G__12691 = h;
var G__12692 = i;
var G__12693 = j;
var G__12694 = k;
var G__12695 = l;
var G__12696 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696) : self__.dispatch_fn.call(null,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12697 = a;
var G__12698 = b;
var G__12699 = c;
var G__12700 = d;
var G__12701 = e;
var G__12702 = f;
var G__12703 = g;
var G__12704 = h;
var G__12705 = i;
var G__12706 = j;
var G__12707 = k;
var G__12708 = l;
var G__12709 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709) : target_fn.call(null,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709));
});
var G__13368__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12710 = a;
var G__12711 = b;
var G__12712 = c;
var G__12713 = d;
var G__12714 = e;
var G__12715 = f;
var G__12716 = g;
var G__12717 = h;
var G__12718 = i;
var G__12719 = j;
var G__12720 = k;
var G__12721 = l;
var G__12722 = m;
var G__12723 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723) : self__.dispatch_fn.call(null,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12724 = a;
var G__12725 = b;
var G__12726 = c;
var G__12727 = d;
var G__12728 = e;
var G__12729 = f;
var G__12730 = g;
var G__12731 = h;
var G__12732 = i;
var G__12733 = j;
var G__12734 = k;
var G__12735 = l;
var G__12736 = m;
var G__12737 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735,G__12736,G__12737) : target_fn.call(null,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735,G__12736,G__12737));
});
var G__13368__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12738 = a;
var G__12739 = b;
var G__12740 = c;
var G__12741 = d;
var G__12742 = e;
var G__12743 = f;
var G__12744 = g;
var G__12745 = h;
var G__12746 = i;
var G__12747 = j;
var G__12748 = k;
var G__12749 = l;
var G__12750 = m;
var G__12751 = n;
var G__12752 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12738,G__12739,G__12740,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752) : self__.dispatch_fn.call(null,G__12738,G__12739,G__12740,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12753 = a;
var G__12754 = b;
var G__12755 = c;
var G__12756 = d;
var G__12757 = e;
var G__12758 = f;
var G__12759 = g;
var G__12760 = h;
var G__12761 = i;
var G__12762 = j;
var G__12763 = k;
var G__12764 = l;
var G__12765 = m;
var G__12766 = n;
var G__12767 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767) : target_fn.call(null,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767));
});
var G__13368__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12768 = a;
var G__12769 = b;
var G__12770 = c;
var G__12771 = d;
var G__12772 = e;
var G__12773 = f;
var G__12774 = g;
var G__12775 = h;
var G__12776 = i;
var G__12777 = j;
var G__12778 = k;
var G__12779 = l;
var G__12780 = m;
var G__12781 = n;
var G__12782 = o;
var G__12783 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783) : self__.dispatch_fn.call(null,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12784 = a;
var G__12785 = b;
var G__12786 = c;
var G__12787 = d;
var G__12788 = e;
var G__12789 = f;
var G__12790 = g;
var G__12791 = h;
var G__12792 = i;
var G__12793 = j;
var G__12794 = k;
var G__12795 = l;
var G__12796 = m;
var G__12797 = n;
var G__12798 = o;
var G__12799 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799) : target_fn.call(null,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799));
});
var G__13368__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12800 = a;
var G__12801 = b;
var G__12802 = c;
var G__12803 = d;
var G__12804 = e;
var G__12805 = f;
var G__12806 = g;
var G__12807 = h;
var G__12808 = i;
var G__12809 = j;
var G__12810 = k;
var G__12811 = l;
var G__12812 = m;
var G__12813 = n;
var G__12814 = o;
var G__12815 = p;
var G__12816 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816) : self__.dispatch_fn.call(null,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12817 = a;
var G__12818 = b;
var G__12819 = c;
var G__12820 = d;
var G__12821 = e;
var G__12822 = f;
var G__12823 = g;
var G__12824 = h;
var G__12825 = i;
var G__12826 = j;
var G__12827 = k;
var G__12828 = l;
var G__12829 = m;
var G__12830 = n;
var G__12831 = o;
var G__12832 = p;
var G__12833 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12817,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833) : target_fn.call(null,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833));
});
var G__13368__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12834 = a;
var G__12835 = b;
var G__12836 = c;
var G__12837 = d;
var G__12838 = e;
var G__12839 = f;
var G__12840 = g;
var G__12841 = h;
var G__12842 = i;
var G__12843 = j;
var G__12844 = k;
var G__12845 = l;
var G__12846 = m;
var G__12847 = n;
var G__12848 = o;
var G__12849 = p;
var G__12850 = q;
var G__12851 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12834,G__12835,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851) : self__.dispatch_fn.call(null,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12852 = a;
var G__12853 = b;
var G__12854 = c;
var G__12855 = d;
var G__12856 = e;
var G__12857 = f;
var G__12858 = g;
var G__12859 = h;
var G__12860 = i;
var G__12861 = j;
var G__12862 = k;
var G__12863 = l;
var G__12864 = m;
var G__12865 = n;
var G__12866 = o;
var G__12867 = p;
var G__12868 = q;
var G__12869 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12852,G__12853,G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868,G__12869) : target_fn.call(null,G__12852,G__12853,G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868,G__12869));
});
var G__13368__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12870 = a;
var G__12871 = b;
var G__12872 = c;
var G__12873 = d;
var G__12874 = e;
var G__12875 = f;
var G__12876 = g;
var G__12877 = h;
var G__12878 = i;
var G__12879 = j;
var G__12880 = k;
var G__12881 = l;
var G__12882 = m;
var G__12883 = n;
var G__12884 = o;
var G__12885 = p;
var G__12886 = q;
var G__12887 = r;
var G__12888 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888) : self__.dispatch_fn.call(null,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12889 = a;
var G__12890 = b;
var G__12891 = c;
var G__12892 = d;
var G__12893 = e;
var G__12894 = f;
var G__12895 = g;
var G__12896 = h;
var G__12897 = i;
var G__12898 = j;
var G__12899 = k;
var G__12900 = l;
var G__12901 = m;
var G__12902 = n;
var G__12903 = o;
var G__12904 = p;
var G__12905 = q;
var G__12906 = r;
var G__12907 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907) : target_fn.call(null,G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907));
});
var G__13368__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12908 = a;
var G__12909 = b;
var G__12910 = c;
var G__12911 = d;
var G__12912 = e;
var G__12913 = f;
var G__12914 = g;
var G__12915 = h;
var G__12916 = i;
var G__12917 = j;
var G__12918 = k;
var G__12919 = l;
var G__12920 = m;
var G__12921 = n;
var G__12922 = o;
var G__12923 = p;
var G__12924 = q;
var G__12925 = r;
var G__12926 = s;
var G__12927 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927) : self__.dispatch_fn.call(null,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12928 = a;
var G__12929 = b;
var G__12930 = c;
var G__12931 = d;
var G__12932 = e;
var G__12933 = f;
var G__12934 = g;
var G__12935 = h;
var G__12936 = i;
var G__12937 = j;
var G__12938 = k;
var G__12939 = l;
var G__12940 = m;
var G__12941 = n;
var G__12942 = o;
var G__12943 = p;
var G__12944 = q;
var G__12945 = r;
var G__12946 = s;
var G__12947 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947) : target_fn.call(null,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947));
});
var G__13368__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__13368 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13368__1.call(this,self__);
case 2:
return G__13368__2.call(this,self__,a);
case 3:
return G__13368__3.call(this,self__,a,b);
case 4:
return G__13368__4.call(this,self__,a,b,c);
case 5:
return G__13368__5.call(this,self__,a,b,c,d);
case 6:
return G__13368__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13368__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13368__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13368__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13368__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13368__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13368__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13368__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13368__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13368__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13368__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13368__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13368__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13368__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13368__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13368__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13368__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13368.cljs$core$IFn$_invoke$arity$1 = G__13368__1;
G__13368.cljs$core$IFn$_invoke$arity$2 = G__13368__2;
G__13368.cljs$core$IFn$_invoke$arity$3 = G__13368__3;
G__13368.cljs$core$IFn$_invoke$arity$4 = G__13368__4;
G__13368.cljs$core$IFn$_invoke$arity$5 = G__13368__5;
G__13368.cljs$core$IFn$_invoke$arity$6 = G__13368__6;
G__13368.cljs$core$IFn$_invoke$arity$7 = G__13368__7;
G__13368.cljs$core$IFn$_invoke$arity$8 = G__13368__8;
G__13368.cljs$core$IFn$_invoke$arity$9 = G__13368__9;
G__13368.cljs$core$IFn$_invoke$arity$10 = G__13368__10;
G__13368.cljs$core$IFn$_invoke$arity$11 = G__13368__11;
G__13368.cljs$core$IFn$_invoke$arity$12 = G__13368__12;
G__13368.cljs$core$IFn$_invoke$arity$13 = G__13368__13;
G__13368.cljs$core$IFn$_invoke$arity$14 = G__13368__14;
G__13368.cljs$core$IFn$_invoke$arity$15 = G__13368__15;
G__13368.cljs$core$IFn$_invoke$arity$16 = G__13368__16;
G__13368.cljs$core$IFn$_invoke$arity$17 = G__13368__17;
G__13368.cljs$core$IFn$_invoke$arity$18 = G__13368__18;
G__13368.cljs$core$IFn$_invoke$arity$19 = G__13368__19;
G__13368.cljs$core$IFn$_invoke$arity$20 = G__13368__20;
G__13368.cljs$core$IFn$_invoke$arity$21 = G__13368__21;
G__13368.cljs$core$IFn$_invoke$arity$22 = G__13368__22;
return G__13368;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12520){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12520)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12948 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12948) : self__.dispatch_fn.call(null,G__12948));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12949 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12949) : target_fn.call(null,G__12949));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12950 = a;
var G__12951 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12950,G__12951) : self__.dispatch_fn.call(null,G__12950,G__12951));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12952 = a;
var G__12953 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12952,G__12953) : target_fn.call(null,G__12952,G__12953));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12954 = a;
var G__12955 = b;
var G__12956 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12954,G__12955,G__12956) : self__.dispatch_fn.call(null,G__12954,G__12955,G__12956));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12957 = a;
var G__12958 = b;
var G__12959 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12957,G__12958,G__12959) : target_fn.call(null,G__12957,G__12958,G__12959));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12960 = a;
var G__12961 = b;
var G__12962 = c;
var G__12963 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12960,G__12961,G__12962,G__12963) : self__.dispatch_fn.call(null,G__12960,G__12961,G__12962,G__12963));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12964 = a;
var G__12965 = b;
var G__12966 = c;
var G__12967 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12964,G__12965,G__12966,G__12967) : target_fn.call(null,G__12964,G__12965,G__12966,G__12967));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12968 = a;
var G__12969 = b;
var G__12970 = c;
var G__12971 = d;
var G__12972 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12968,G__12969,G__12970,G__12971,G__12972) : self__.dispatch_fn.call(null,G__12968,G__12969,G__12970,G__12971,G__12972));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12973 = a;
var G__12974 = b;
var G__12975 = c;
var G__12976 = d;
var G__12977 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12973,G__12974,G__12975,G__12976,G__12977) : target_fn.call(null,G__12973,G__12974,G__12975,G__12976,G__12977));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12978 = a;
var G__12979 = b;
var G__12980 = c;
var G__12981 = d;
var G__12982 = e;
var G__12983 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12978,G__12979,G__12980,G__12981,G__12982,G__12983) : self__.dispatch_fn.call(null,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12984 = a;
var G__12985 = b;
var G__12986 = c;
var G__12987 = d;
var G__12988 = e;
var G__12989 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12984,G__12985,G__12986,G__12987,G__12988,G__12989) : target_fn.call(null,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12990 = a;
var G__12991 = b;
var G__12992 = c;
var G__12993 = d;
var G__12994 = e;
var G__12995 = f;
var G__12996 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996) : self__.dispatch_fn.call(null,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12997 = a;
var G__12998 = b;
var G__12999 = c;
var G__13000 = d;
var G__13001 = e;
var G__13002 = f;
var G__13003 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003) : target_fn.call(null,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13004 = a;
var G__13005 = b;
var G__13006 = c;
var G__13007 = d;
var G__13008 = e;
var G__13009 = f;
var G__13010 = g;
var G__13011 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011) : self__.dispatch_fn.call(null,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13012 = a;
var G__13013 = b;
var G__13014 = c;
var G__13015 = d;
var G__13016 = e;
var G__13017 = f;
var G__13018 = g;
var G__13019 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019) : target_fn.call(null,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13020 = a;
var G__13021 = b;
var G__13022 = c;
var G__13023 = d;
var G__13024 = e;
var G__13025 = f;
var G__13026 = g;
var G__13027 = h;
var G__13028 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028) : self__.dispatch_fn.call(null,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13029 = a;
var G__13030 = b;
var G__13031 = c;
var G__13032 = d;
var G__13033 = e;
var G__13034 = f;
var G__13035 = g;
var G__13036 = h;
var G__13037 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037) : target_fn.call(null,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13038 = a;
var G__13039 = b;
var G__13040 = c;
var G__13041 = d;
var G__13042 = e;
var G__13043 = f;
var G__13044 = g;
var G__13045 = h;
var G__13046 = i;
var G__13047 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047) : self__.dispatch_fn.call(null,G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13048 = a;
var G__13049 = b;
var G__13050 = c;
var G__13051 = d;
var G__13052 = e;
var G__13053 = f;
var G__13054 = g;
var G__13055 = h;
var G__13056 = i;
var G__13057 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057) : target_fn.call(null,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13058 = a;
var G__13059 = b;
var G__13060 = c;
var G__13061 = d;
var G__13062 = e;
var G__13063 = f;
var G__13064 = g;
var G__13065 = h;
var G__13066 = i;
var G__13067 = j;
var G__13068 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068) : self__.dispatch_fn.call(null,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13069 = a;
var G__13070 = b;
var G__13071 = c;
var G__13072 = d;
var G__13073 = e;
var G__13074 = f;
var G__13075 = g;
var G__13076 = h;
var G__13077 = i;
var G__13078 = j;
var G__13079 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079) : target_fn.call(null,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13080 = a;
var G__13081 = b;
var G__13082 = c;
var G__13083 = d;
var G__13084 = e;
var G__13085 = f;
var G__13086 = g;
var G__13087 = h;
var G__13088 = i;
var G__13089 = j;
var G__13090 = k;
var G__13091 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091) : self__.dispatch_fn.call(null,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13092 = a;
var G__13093 = b;
var G__13094 = c;
var G__13095 = d;
var G__13096 = e;
var G__13097 = f;
var G__13098 = g;
var G__13099 = h;
var G__13100 = i;
var G__13101 = j;
var G__13102 = k;
var G__13103 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103) : target_fn.call(null,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13104 = a;
var G__13105 = b;
var G__13106 = c;
var G__13107 = d;
var G__13108 = e;
var G__13109 = f;
var G__13110 = g;
var G__13111 = h;
var G__13112 = i;
var G__13113 = j;
var G__13114 = k;
var G__13115 = l;
var G__13116 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116) : self__.dispatch_fn.call(null,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13117 = a;
var G__13118 = b;
var G__13119 = c;
var G__13120 = d;
var G__13121 = e;
var G__13122 = f;
var G__13123 = g;
var G__13124 = h;
var G__13125 = i;
var G__13126 = j;
var G__13127 = k;
var G__13128 = l;
var G__13129 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129) : target_fn.call(null,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13130 = a;
var G__13131 = b;
var G__13132 = c;
var G__13133 = d;
var G__13134 = e;
var G__13135 = f;
var G__13136 = g;
var G__13137 = h;
var G__13138 = i;
var G__13139 = j;
var G__13140 = k;
var G__13141 = l;
var G__13142 = m;
var G__13143 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143) : self__.dispatch_fn.call(null,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13144 = a;
var G__13145 = b;
var G__13146 = c;
var G__13147 = d;
var G__13148 = e;
var G__13149 = f;
var G__13150 = g;
var G__13151 = h;
var G__13152 = i;
var G__13153 = j;
var G__13154 = k;
var G__13155 = l;
var G__13156 = m;
var G__13157 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157) : target_fn.call(null,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13158 = a;
var G__13159 = b;
var G__13160 = c;
var G__13161 = d;
var G__13162 = e;
var G__13163 = f;
var G__13164 = g;
var G__13165 = h;
var G__13166 = i;
var G__13167 = j;
var G__13168 = k;
var G__13169 = l;
var G__13170 = m;
var G__13171 = n;
var G__13172 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172) : self__.dispatch_fn.call(null,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13173 = a;
var G__13174 = b;
var G__13175 = c;
var G__13176 = d;
var G__13177 = e;
var G__13178 = f;
var G__13179 = g;
var G__13180 = h;
var G__13181 = i;
var G__13182 = j;
var G__13183 = k;
var G__13184 = l;
var G__13185 = m;
var G__13186 = n;
var G__13187 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187) : target_fn.call(null,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13188 = a;
var G__13189 = b;
var G__13190 = c;
var G__13191 = d;
var G__13192 = e;
var G__13193 = f;
var G__13194 = g;
var G__13195 = h;
var G__13196 = i;
var G__13197 = j;
var G__13198 = k;
var G__13199 = l;
var G__13200 = m;
var G__13201 = n;
var G__13202 = o;
var G__13203 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13188,G__13189,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203) : self__.dispatch_fn.call(null,G__13188,G__13189,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13204 = a;
var G__13205 = b;
var G__13206 = c;
var G__13207 = d;
var G__13208 = e;
var G__13209 = f;
var G__13210 = g;
var G__13211 = h;
var G__13212 = i;
var G__13213 = j;
var G__13214 = k;
var G__13215 = l;
var G__13216 = m;
var G__13217 = n;
var G__13218 = o;
var G__13219 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219) : target_fn.call(null,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13220 = a;
var G__13221 = b;
var G__13222 = c;
var G__13223 = d;
var G__13224 = e;
var G__13225 = f;
var G__13226 = g;
var G__13227 = h;
var G__13228 = i;
var G__13229 = j;
var G__13230 = k;
var G__13231 = l;
var G__13232 = m;
var G__13233 = n;
var G__13234 = o;
var G__13235 = p;
var G__13236 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236) : self__.dispatch_fn.call(null,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13237 = a;
var G__13238 = b;
var G__13239 = c;
var G__13240 = d;
var G__13241 = e;
var G__13242 = f;
var G__13243 = g;
var G__13244 = h;
var G__13245 = i;
var G__13246 = j;
var G__13247 = k;
var G__13248 = l;
var G__13249 = m;
var G__13250 = n;
var G__13251 = o;
var G__13252 = p;
var G__13253 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253) : target_fn.call(null,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13254 = a;
var G__13255 = b;
var G__13256 = c;
var G__13257 = d;
var G__13258 = e;
var G__13259 = f;
var G__13260 = g;
var G__13261 = h;
var G__13262 = i;
var G__13263 = j;
var G__13264 = k;
var G__13265 = l;
var G__13266 = m;
var G__13267 = n;
var G__13268 = o;
var G__13269 = p;
var G__13270 = q;
var G__13271 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13254,G__13255,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271) : self__.dispatch_fn.call(null,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13272 = a;
var G__13273 = b;
var G__13274 = c;
var G__13275 = d;
var G__13276 = e;
var G__13277 = f;
var G__13278 = g;
var G__13279 = h;
var G__13280 = i;
var G__13281 = j;
var G__13282 = k;
var G__13283 = l;
var G__13284 = m;
var G__13285 = n;
var G__13286 = o;
var G__13287 = p;
var G__13288 = q;
var G__13289 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13272,G__13273,G__13274,G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289) : target_fn.call(null,G__13272,G__13273,G__13274,G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13290 = a;
var G__13291 = b;
var G__13292 = c;
var G__13293 = d;
var G__13294 = e;
var G__13295 = f;
var G__13296 = g;
var G__13297 = h;
var G__13298 = i;
var G__13299 = j;
var G__13300 = k;
var G__13301 = l;
var G__13302 = m;
var G__13303 = n;
var G__13304 = o;
var G__13305 = p;
var G__13306 = q;
var G__13307 = r;
var G__13308 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308) : self__.dispatch_fn.call(null,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13309 = a;
var G__13310 = b;
var G__13311 = c;
var G__13312 = d;
var G__13313 = e;
var G__13314 = f;
var G__13315 = g;
var G__13316 = h;
var G__13317 = i;
var G__13318 = j;
var G__13319 = k;
var G__13320 = l;
var G__13321 = m;
var G__13322 = n;
var G__13323 = o;
var G__13324 = p;
var G__13325 = q;
var G__13326 = r;
var G__13327 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327) : target_fn.call(null,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13328 = a;
var G__13329 = b;
var G__13330 = c;
var G__13331 = d;
var G__13332 = e;
var G__13333 = f;
var G__13334 = g;
var G__13335 = h;
var G__13336 = i;
var G__13337 = j;
var G__13338 = k;
var G__13339 = l;
var G__13340 = m;
var G__13341 = n;
var G__13342 = o;
var G__13343 = p;
var G__13344 = q;
var G__13345 = r;
var G__13346 = s;
var G__13347 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347) : self__.dispatch_fn.call(null,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13348 = a;
var G__13349 = b;
var G__13350 = c;
var G__13351 = d;
var G__13352 = e;
var G__13353 = f;
var G__13354 = g;
var G__13355 = h;
var G__13356 = i;
var G__13357 = j;
var G__13358 = k;
var G__13359 = l;
var G__13360 = m;
var G__13361 = n;
var G__13362 = o;
var G__13363 = p;
var G__13364 = q;
var G__13365 = r;
var G__13366 = s;
var G__13367 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361,G__13362,G__13363,G__13364,G__13365,G__13366,G__13367) : target_fn.call(null,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361,G__13362,G__13363,G__13364,G__13365,G__13366,G__13367));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13369 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__13369);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__6825__auto__,writer__6826__auto__,opt__6827__auto__){
return cljs.core._write(writer__6826__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__13377 = x;
var G__13378 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13377,G__13378) : pred.call(null,G__13377,G__13378));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13379 = y;
var G__13380 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13379,G__13380) : pred.call(null,G__13379,G__13380));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$_COLON_ok;
} else {
return cljs.core.constant$keyword$_COLON_no_test;
}
});
